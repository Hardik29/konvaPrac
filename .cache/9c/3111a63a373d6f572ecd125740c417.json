{"id":"node_modules/konva/lib/PointerEvents.js","dependencies":[{"name":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\package.json","includedInParent":true,"mtime":1617850830012},{"name":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\node_modules\\konva\\package.json","includedInParent":true,"mtime":1617850829950},{"name":"./Global","loc":{"line":4,"column":23},"parent":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\node_modules\\konva\\lib\\PointerEvents.js","resolved":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\node_modules\\konva\\lib\\Global.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.releaseCapture = exports.setPointerCapture = exports.hasPointerCapture = exports.createEvent = exports.getCapturedShape = void 0;\r\nvar Global_1 = require(\"./Global\");\r\nvar Captures = new Map();\r\nvar SUPPORT_POINTER_EVENTS = Global_1.Konva._global['PointerEvent'] !== undefined;\r\nfunction getCapturedShape(pointerId) {\r\n    return Captures.get(pointerId);\r\n}\r\nexports.getCapturedShape = getCapturedShape;\r\nfunction createEvent(evt) {\r\n    return {\r\n        evt: evt,\r\n        pointerId: evt.pointerId\r\n    };\r\n}\r\nexports.createEvent = createEvent;\r\nfunction hasPointerCapture(pointerId, shape) {\r\n    return Captures.get(pointerId) === shape;\r\n}\r\nexports.hasPointerCapture = hasPointerCapture;\r\nfunction setPointerCapture(pointerId, shape) {\r\n    releaseCapture(pointerId);\r\n    var stage = shape.getStage();\r\n    if (!stage)\r\n        return;\r\n    Captures.set(pointerId, shape);\r\n    if (SUPPORT_POINTER_EVENTS) {\r\n        shape._fire('gotpointercapture', createEvent(new PointerEvent('gotpointercapture')));\r\n    }\r\n}\r\nexports.setPointerCapture = setPointerCapture;\r\nfunction releaseCapture(pointerId, target) {\r\n    var shape = Captures.get(pointerId);\r\n    if (!shape)\r\n        return;\r\n    var stage = shape.getStage();\r\n    if (stage && stage.content) {\r\n    }\r\n    Captures.delete(pointerId);\r\n    if (SUPPORT_POINTER_EVENTS) {\r\n        shape._fire('lostpointercapture', createEvent(new PointerEvent('lostpointercapture')));\r\n    }\r\n}\r\nexports.releaseCapture = releaseCapture;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/konva/lib/PointerEvents.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}}],"sources":{"node_modules/konva/lib/PointerEvents.js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.releaseCapture = exports.setPointerCapture = exports.hasPointerCapture = exports.createEvent = exports.getCapturedShape = void 0;\r\nvar Global_1 = require(\"./Global\");\r\nvar Captures = new Map();\r\nvar SUPPORT_POINTER_EVENTS = Global_1.Konva._global['PointerEvent'] !== undefined;\r\nfunction getCapturedShape(pointerId) {\r\n    return Captures.get(pointerId);\r\n}\r\nexports.getCapturedShape = getCapturedShape;\r\nfunction createEvent(evt) {\r\n    return {\r\n        evt: evt,\r\n        pointerId: evt.pointerId\r\n    };\r\n}\r\nexports.createEvent = createEvent;\r\nfunction hasPointerCapture(pointerId, shape) {\r\n    return Captures.get(pointerId) === shape;\r\n}\r\nexports.hasPointerCapture = hasPointerCapture;\r\nfunction setPointerCapture(pointerId, shape) {\r\n    releaseCapture(pointerId);\r\n    var stage = shape.getStage();\r\n    if (!stage)\r\n        return;\r\n    Captures.set(pointerId, shape);\r\n    if (SUPPORT_POINTER_EVENTS) {\r\n        shape._fire('gotpointercapture', createEvent(new PointerEvent('gotpointercapture')));\r\n    }\r\n}\r\nexports.setPointerCapture = setPointerCapture;\r\nfunction releaseCapture(pointerId, target) {\r\n    var shape = Captures.get(pointerId);\r\n    if (!shape)\r\n        return;\r\n    var stage = shape.getStage();\r\n    if (stage && stage.content) {\r\n    }\r\n    Captures.delete(pointerId);\r\n    if (SUPPORT_POINTER_EVENTS) {\r\n        shape._fire('lostpointercapture', createEvent(new PointerEvent('lostpointercapture')));\r\n    }\r\n}\r\nexports.releaseCapture = releaseCapture;\r\n"},"lineCount":46}},"error":null,"hash":"56ee9f7e8ce52f216d9897c8d21f805d","cacheData":{"env":{}}}