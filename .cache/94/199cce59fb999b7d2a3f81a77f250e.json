{"id":"node_modules/konva/lib/filters/Kaleidoscope.js","dependencies":[{"name":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\package.json","includedInParent":true,"mtime":1617850830012},{"name":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\node_modules\\konva\\package.json","includedInParent":true,"mtime":1617850829950},{"name":"../Factory","loc":{"line":4,"column":24},"parent":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\node_modules\\konva\\lib\\filters\\Kaleidoscope.js","resolved":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\node_modules\\konva\\lib\\Factory.js"},{"name":"../Node","loc":{"line":5,"column":21},"parent":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\node_modules\\konva\\lib\\filters\\Kaleidoscope.js","resolved":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\node_modules\\konva\\lib\\Node.js"},{"name":"../Util","loc":{"line":6,"column":21},"parent":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\node_modules\\konva\\lib\\filters\\Kaleidoscope.js","resolved":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\node_modules\\konva\\lib\\Util.js"},{"name":"../Validators","loc":{"line":7,"column":27},"parent":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\node_modules\\konva\\lib\\filters\\Kaleidoscope.js","resolved":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\node_modules\\konva\\lib\\Validators.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Kaleidoscope = void 0;\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Node_1 = require(\"../Node\");\r\nvar Util_1 = require(\"../Util\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar ToPolar = function (src, dst, opt) {\r\n    var srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2, i, x, y, r = 0, g = 0, b = 0, a = 0;\r\n    var rad, rMax = Math.sqrt(xMid * xMid + yMid * yMid);\r\n    x = xSize - xMid;\r\n    y = ySize - yMid;\r\n    rad = Math.sqrt(x * x + y * y);\r\n    rMax = rad > rMax ? rad : rMax;\r\n    var rSize = ySize, tSize = xSize, radius, theta;\r\n    var conversion = ((360 / tSize) * Math.PI) / 180, sin, cos;\r\n    for (theta = 0; theta < tSize; theta += 1) {\r\n        sin = Math.sin(theta * conversion);\r\n        cos = Math.cos(theta * conversion);\r\n        for (radius = 0; radius < rSize; radius += 1) {\r\n            x = Math.floor(xMid + ((rMax * radius) / rSize) * cos);\r\n            y = Math.floor(yMid + ((rMax * radius) / rSize) * sin);\r\n            i = (y * xSize + x) * 4;\r\n            r = srcPixels[i + 0];\r\n            g = srcPixels[i + 1];\r\n            b = srcPixels[i + 2];\r\n            a = srcPixels[i + 3];\r\n            i = (theta + radius * xSize) * 4;\r\n            dstPixels[i + 0] = r;\r\n            dstPixels[i + 1] = g;\r\n            dstPixels[i + 2] = b;\r\n            dstPixels[i + 3] = a;\r\n        }\r\n    }\r\n};\r\nvar FromPolar = function (src, dst, opt) {\r\n    var srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2, i, x, y, dx, dy, r = 0, g = 0, b = 0, a = 0;\r\n    var rad, rMax = Math.sqrt(xMid * xMid + yMid * yMid);\r\n    x = xSize - xMid;\r\n    y = ySize - yMid;\r\n    rad = Math.sqrt(x * x + y * y);\r\n    rMax = rad > rMax ? rad : rMax;\r\n    var rSize = ySize, tSize = xSize, radius, theta, phaseShift = opt.polarRotation || 0;\r\n    var x1, y1;\r\n    for (x = 0; x < xSize; x += 1) {\r\n        for (y = 0; y < ySize; y += 1) {\r\n            dx = x - xMid;\r\n            dy = y - yMid;\r\n            radius = (Math.sqrt(dx * dx + dy * dy) * rSize) / rMax;\r\n            theta = ((Math.atan2(dy, dx) * 180) / Math.PI + 360 + phaseShift) % 360;\r\n            theta = (theta * tSize) / 360;\r\n            x1 = Math.floor(theta);\r\n            y1 = Math.floor(radius);\r\n            i = (y1 * xSize + x1) * 4;\r\n            r = srcPixels[i + 0];\r\n            g = srcPixels[i + 1];\r\n            b = srcPixels[i + 2];\r\n            a = srcPixels[i + 3];\r\n            i = (y * xSize + x) * 4;\r\n            dstPixels[i + 0] = r;\r\n            dstPixels[i + 1] = g;\r\n            dstPixels[i + 2] = b;\r\n            dstPixels[i + 3] = a;\r\n        }\r\n    }\r\n};\r\nvar Kaleidoscope = function (imageData) {\r\n    var xSize = imageData.width, ySize = imageData.height;\r\n    var x, y, xoff, i, r, g, b, a, srcPos, dstPos;\r\n    var power = Math.round(this.kaleidoscopePower());\r\n    var angle = Math.round(this.kaleidoscopeAngle());\r\n    var offset = Math.floor((xSize * (angle % 360)) / 360);\r\n    if (power < 1) {\r\n        return;\r\n    }\r\n    var tempCanvas = Util_1.Util.createCanvasElement();\r\n    tempCanvas.width = xSize;\r\n    tempCanvas.height = ySize;\r\n    var scratchData = tempCanvas\r\n        .getContext('2d')\r\n        .getImageData(0, 0, xSize, ySize);\r\n    ToPolar(imageData, scratchData, {\r\n        polarCenterX: xSize / 2,\r\n        polarCenterY: ySize / 2\r\n    });\r\n    var minSectionSize = xSize / Math.pow(2, power);\r\n    while (minSectionSize <= 8) {\r\n        minSectionSize = minSectionSize * 2;\r\n        power -= 1;\r\n    }\r\n    minSectionSize = Math.ceil(minSectionSize);\r\n    var sectionSize = minSectionSize;\r\n    var xStart = 0, xEnd = sectionSize, xDelta = 1;\r\n    if (offset + minSectionSize > xSize) {\r\n        xStart = sectionSize;\r\n        xEnd = 0;\r\n        xDelta = -1;\r\n    }\r\n    for (y = 0; y < ySize; y += 1) {\r\n        for (x = xStart; x !== xEnd; x += xDelta) {\r\n            xoff = Math.round(x + offset) % xSize;\r\n            srcPos = (xSize * y + xoff) * 4;\r\n            r = scratchData.data[srcPos + 0];\r\n            g = scratchData.data[srcPos + 1];\r\n            b = scratchData.data[srcPos + 2];\r\n            a = scratchData.data[srcPos + 3];\r\n            dstPos = (xSize * y + x) * 4;\r\n            scratchData.data[dstPos + 0] = r;\r\n            scratchData.data[dstPos + 1] = g;\r\n            scratchData.data[dstPos + 2] = b;\r\n            scratchData.data[dstPos + 3] = a;\r\n        }\r\n    }\r\n    for (y = 0; y < ySize; y += 1) {\r\n        sectionSize = Math.floor(minSectionSize);\r\n        for (i = 0; i < power; i += 1) {\r\n            for (x = 0; x < sectionSize + 1; x += 1) {\r\n                srcPos = (xSize * y + x) * 4;\r\n                r = scratchData.data[srcPos + 0];\r\n                g = scratchData.data[srcPos + 1];\r\n                b = scratchData.data[srcPos + 2];\r\n                a = scratchData.data[srcPos + 3];\r\n                dstPos = (xSize * y + sectionSize * 2 - x - 1) * 4;\r\n                scratchData.data[dstPos + 0] = r;\r\n                scratchData.data[dstPos + 1] = g;\r\n                scratchData.data[dstPos + 2] = b;\r\n                scratchData.data[dstPos + 3] = a;\r\n            }\r\n            sectionSize *= 2;\r\n        }\r\n    }\r\n    FromPolar(scratchData, imageData, { polarRotation: 0 });\r\n};\r\nexports.Kaleidoscope = Kaleidoscope;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'kaleidoscopePower', 2, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'kaleidoscopeAngle', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/konva/lib/filters/Kaleidoscope.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}}],"sources":{"node_modules/konva/lib/filters/Kaleidoscope.js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Kaleidoscope = void 0;\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Node_1 = require(\"../Node\");\r\nvar Util_1 = require(\"../Util\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar ToPolar = function (src, dst, opt) {\r\n    var srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2, i, x, y, r = 0, g = 0, b = 0, a = 0;\r\n    var rad, rMax = Math.sqrt(xMid * xMid + yMid * yMid);\r\n    x = xSize - xMid;\r\n    y = ySize - yMid;\r\n    rad = Math.sqrt(x * x + y * y);\r\n    rMax = rad > rMax ? rad : rMax;\r\n    var rSize = ySize, tSize = xSize, radius, theta;\r\n    var conversion = ((360 / tSize) * Math.PI) / 180, sin, cos;\r\n    for (theta = 0; theta < tSize; theta += 1) {\r\n        sin = Math.sin(theta * conversion);\r\n        cos = Math.cos(theta * conversion);\r\n        for (radius = 0; radius < rSize; radius += 1) {\r\n            x = Math.floor(xMid + ((rMax * radius) / rSize) * cos);\r\n            y = Math.floor(yMid + ((rMax * radius) / rSize) * sin);\r\n            i = (y * xSize + x) * 4;\r\n            r = srcPixels[i + 0];\r\n            g = srcPixels[i + 1];\r\n            b = srcPixels[i + 2];\r\n            a = srcPixels[i + 3];\r\n            i = (theta + radius * xSize) * 4;\r\n            dstPixels[i + 0] = r;\r\n            dstPixels[i + 1] = g;\r\n            dstPixels[i + 2] = b;\r\n            dstPixels[i + 3] = a;\r\n        }\r\n    }\r\n};\r\nvar FromPolar = function (src, dst, opt) {\r\n    var srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2, i, x, y, dx, dy, r = 0, g = 0, b = 0, a = 0;\r\n    var rad, rMax = Math.sqrt(xMid * xMid + yMid * yMid);\r\n    x = xSize - xMid;\r\n    y = ySize - yMid;\r\n    rad = Math.sqrt(x * x + y * y);\r\n    rMax = rad > rMax ? rad : rMax;\r\n    var rSize = ySize, tSize = xSize, radius, theta, phaseShift = opt.polarRotation || 0;\r\n    var x1, y1;\r\n    for (x = 0; x < xSize; x += 1) {\r\n        for (y = 0; y < ySize; y += 1) {\r\n            dx = x - xMid;\r\n            dy = y - yMid;\r\n            radius = (Math.sqrt(dx * dx + dy * dy) * rSize) / rMax;\r\n            theta = ((Math.atan2(dy, dx) * 180) / Math.PI + 360 + phaseShift) % 360;\r\n            theta = (theta * tSize) / 360;\r\n            x1 = Math.floor(theta);\r\n            y1 = Math.floor(radius);\r\n            i = (y1 * xSize + x1) * 4;\r\n            r = srcPixels[i + 0];\r\n            g = srcPixels[i + 1];\r\n            b = srcPixels[i + 2];\r\n            a = srcPixels[i + 3];\r\n            i = (y * xSize + x) * 4;\r\n            dstPixels[i + 0] = r;\r\n            dstPixels[i + 1] = g;\r\n            dstPixels[i + 2] = b;\r\n            dstPixels[i + 3] = a;\r\n        }\r\n    }\r\n};\r\nvar Kaleidoscope = function (imageData) {\r\n    var xSize = imageData.width, ySize = imageData.height;\r\n    var x, y, xoff, i, r, g, b, a, srcPos, dstPos;\r\n    var power = Math.round(this.kaleidoscopePower());\r\n    var angle = Math.round(this.kaleidoscopeAngle());\r\n    var offset = Math.floor((xSize * (angle % 360)) / 360);\r\n    if (power < 1) {\r\n        return;\r\n    }\r\n    var tempCanvas = Util_1.Util.createCanvasElement();\r\n    tempCanvas.width = xSize;\r\n    tempCanvas.height = ySize;\r\n    var scratchData = tempCanvas\r\n        .getContext('2d')\r\n        .getImageData(0, 0, xSize, ySize);\r\n    ToPolar(imageData, scratchData, {\r\n        polarCenterX: xSize / 2,\r\n        polarCenterY: ySize / 2\r\n    });\r\n    var minSectionSize = xSize / Math.pow(2, power);\r\n    while (minSectionSize <= 8) {\r\n        minSectionSize = minSectionSize * 2;\r\n        power -= 1;\r\n    }\r\n    minSectionSize = Math.ceil(minSectionSize);\r\n    var sectionSize = minSectionSize;\r\n    var xStart = 0, xEnd = sectionSize, xDelta = 1;\r\n    if (offset + minSectionSize > xSize) {\r\n        xStart = sectionSize;\r\n        xEnd = 0;\r\n        xDelta = -1;\r\n    }\r\n    for (y = 0; y < ySize; y += 1) {\r\n        for (x = xStart; x !== xEnd; x += xDelta) {\r\n            xoff = Math.round(x + offset) % xSize;\r\n            srcPos = (xSize * y + xoff) * 4;\r\n            r = scratchData.data[srcPos + 0];\r\n            g = scratchData.data[srcPos + 1];\r\n            b = scratchData.data[srcPos + 2];\r\n            a = scratchData.data[srcPos + 3];\r\n            dstPos = (xSize * y + x) * 4;\r\n            scratchData.data[dstPos + 0] = r;\r\n            scratchData.data[dstPos + 1] = g;\r\n            scratchData.data[dstPos + 2] = b;\r\n            scratchData.data[dstPos + 3] = a;\r\n        }\r\n    }\r\n    for (y = 0; y < ySize; y += 1) {\r\n        sectionSize = Math.floor(minSectionSize);\r\n        for (i = 0; i < power; i += 1) {\r\n            for (x = 0; x < sectionSize + 1; x += 1) {\r\n                srcPos = (xSize * y + x) * 4;\r\n                r = scratchData.data[srcPos + 0];\r\n                g = scratchData.data[srcPos + 1];\r\n                b = scratchData.data[srcPos + 2];\r\n                a = scratchData.data[srcPos + 3];\r\n                dstPos = (xSize * y + sectionSize * 2 - x - 1) * 4;\r\n                scratchData.data[dstPos + 0] = r;\r\n                scratchData.data[dstPos + 1] = g;\r\n                scratchData.data[dstPos + 2] = b;\r\n                scratchData.data[dstPos + 3] = a;\r\n            }\r\n            sectionSize *= 2;\r\n        }\r\n    }\r\n    FromPolar(scratchData, imageData, { polarRotation: 0 });\r\n};\r\nexports.Kaleidoscope = Kaleidoscope;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'kaleidoscopePower', 2, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'kaleidoscopeAngle', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\n"},"lineCount":137}},"error":null,"hash":"3b91cf565a24fbc69551752695ac08c5","cacheData":{"env":{}}}