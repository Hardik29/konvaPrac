{"id":"node_modules/konva/lib/Group.js","dependencies":[{"name":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\package.json","includedInParent":true,"mtime":1617850830012},{"name":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\node_modules\\konva\\package.json","includedInParent":true,"mtime":1617850829950},{"name":"./Util","loc":{"line":17,"column":21},"parent":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\node_modules\\konva\\lib\\Group.js","resolved":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\node_modules\\konva\\lib\\Util.js"},{"name":"./Container","loc":{"line":18,"column":26},"parent":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\node_modules\\konva\\lib\\Group.js","resolved":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\node_modules\\konva\\lib\\Container.js"},{"name":"./Global","loc":{"line":19,"column":23},"parent":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\node_modules\\konva\\lib\\Group.js","resolved":"C:\\Users\\hardik\\Documents\\GitHub\\konvaPrac\\node_modules\\konva\\lib\\Global.js"}],"generated":{"js":"\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Group = void 0;\r\nvar Util_1 = require(\"./Util\");\r\nvar Container_1 = require(\"./Container\");\r\nvar Global_1 = require(\"./Global\");\r\nvar Group = (function (_super) {\r\n    __extends(Group, _super);\r\n    function Group() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Group.prototype._validateAdd = function (child) {\r\n        var type = child.getType();\r\n        if (type !== 'Group' && type !== 'Shape') {\r\n            Util_1.Util.throw('You may only add groups and shapes to groups.');\r\n        }\r\n    };\r\n    return Group;\r\n}(Container_1.Container));\r\nexports.Group = Group;\r\nGroup.prototype.nodeType = 'Group';\r\nGlobal_1._registerNode(Group);\r\nUtil_1.Collection.mapMethods(Group);\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/konva/lib/Group.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/konva/lib/Group.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}}],"sources":{"node_modules/konva/lib/Group.js":"\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Group = void 0;\r\nvar Util_1 = require(\"./Util\");\r\nvar Container_1 = require(\"./Container\");\r\nvar Global_1 = require(\"./Global\");\r\nvar Group = (function (_super) {\r\n    __extends(Group, _super);\r\n    function Group() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Group.prototype._validateAdd = function (child) {\r\n        var type = child.getType();\r\n        if (type !== 'Group' && type !== 'Shape') {\r\n            Util_1.Util.throw('You may only add groups and shapes to groups.');\r\n        }\r\n    };\r\n    return Group;\r\n}(Container_1.Container));\r\nexports.Group = Group;\r\nGroup.prototype.nodeType = 'Group';\r\nGlobal_1._registerNode(Group);\r\nUtil_1.Collection.mapMethods(Group);\r\n"},"lineCount":37}},"error":null,"hash":"5b8a193d78e6484a666f0116bcd120e3","cacheData":{"env":{}}}