{"version":3,"sources":["node_modules/konva/lib/Global.js","node_modules/konva/lib/Util.js","node_modules/konva/lib/Validators.js","node_modules/konva/lib/Factory.js","node_modules/konva/lib/Context.js","node_modules/konva/lib/Canvas.js","node_modules/konva/lib/DragAndDrop.js","node_modules/konva/lib/Node.js","node_modules/konva/lib/Container.js","node_modules/konva/lib/PointerEvents.js","node_modules/konva/lib/Stage.js","node_modules/konva/lib/Shape.js","node_modules/konva/lib/Layer.js","node_modules/konva/lib/FastLayer.js","node_modules/konva/lib/Group.js","node_modules/konva/lib/Animation.js","node_modules/konva/lib/Tween.js","node_modules/konva/lib/_CoreInternals.js","node_modules/konva/lib/shapes/Arc.js","node_modules/konva/lib/shapes/Line.js","node_modules/konva/lib/shapes/Arrow.js","node_modules/konva/lib/shapes/Circle.js","node_modules/konva/lib/shapes/Ellipse.js","node_modules/konva/lib/shapes/Image.js","node_modules/konva/lib/shapes/Label.js","node_modules/konva/lib/shapes/Path.js","node_modules/konva/lib/shapes/Rect.js","node_modules/konva/lib/shapes/RegularPolygon.js","node_modules/konva/lib/shapes/Ring.js","node_modules/konva/lib/shapes/Sprite.js","node_modules/konva/lib/shapes/Star.js","node_modules/konva/lib/shapes/Text.js","node_modules/konva/lib/shapes/TextPath.js","node_modules/konva/lib/shapes/Transformer.js","node_modules/konva/lib/shapes/Wedge.js","node_modules/konva/lib/filters/Blur.js","node_modules/konva/lib/filters/Brighten.js","node_modules/konva/lib/filters/Contrast.js","node_modules/konva/lib/filters/Emboss.js","node_modules/konva/lib/filters/Enhance.js","node_modules/konva/lib/filters/Grayscale.js","node_modules/konva/lib/filters/HSL.js","node_modules/konva/lib/filters/HSV.js","node_modules/konva/lib/filters/Invert.js","node_modules/konva/lib/filters/Kaleidoscope.js","node_modules/konva/lib/filters/Mask.js","node_modules/konva/lib/filters/Noise.js","node_modules/konva/lib/filters/Pixelate.js","node_modules/konva/lib/filters/Posterize.js","node_modules/konva/lib/filters/RGB.js","node_modules/konva/lib/filters/RGBA.js","node_modules/konva/lib/filters/Sepia.js","node_modules/konva/lib/filters/Solarize.js","node_modules/konva/lib/filters/Threshold.js","node_modules/konva/lib/_FullInternals.js","node_modules/konva/lib/index.js","src/shapes/shapes.js","src/shapes/DrawBtn.js","src/index.js","../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["circ","Konva","Circle","x","y","radius","fill","stroke","strokeWidth","shadowOffsetX","shadowOffsetY","shadowBlur","shadowOpacity","draggable","rect1","Rect","width","height","message","Text","text","fontSize","DrawBtn","layer","str","kobj","makeBtn","is_active","is_pointerDown","is_pointerUp","is_pointerMove","lineObj","drawbtn","Label","add","Tag","padding","getTag","handleDrawing","mstage","off","draw","on","drawInitLine","drawLine","pointer","getPointerPosition","newPoint","Line","points","tension","push","zIndex","length","clearObj","prevLine","newpoints","concat","batchDraw","bgcolor","tcolor","forEach","obj","destroy","Stage","container","Layer","pencilBtn","create","onClickHandler","makeClearBtn","clearLines","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","Function","deps","cached","cache","some","cb"],"mappingsxntxhhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvzjlwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACthjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvpxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACztGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnroBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzlzhXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC98BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7rBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbxhJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjFA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;;AACA;;;;AACA,IAAKA,IAAI,GAAG,IAAIC,eAAMC,MAAV,CAAiB;AACzBC,EAAAA,CAAC,EAAG,GADqB;AAEzBC,EAAAA,CAAC,EAAG,GAFqB;AAGzBC,EAAAA,MAAM,EAAG,EAHgB;AAIzBC,EAAAA,IAAI,EAAG,SAJkB;AAKzBC,EAAAA,MAAM,EAAG,SALgB;AAMzBC,EAAAA,WAAW,EAAG,CANW;AAOzBC,EAAAA,aAAa,EAAG,EAPS;AAQzBC,EAAAA,aAAa,EAAG,CARS;AASzBC,EAAAA,UAAU,EAAG,EATY;AAUzBC,EAAAA,aAAa,EAAE,GAVU;AAWzBC,EAAAA,SAAS,EAAG;AAXa,CAAjB,CAAZ;;AAeA,IAAIC,KAAK,GAAG,IAAIb,eAAMc,IAAV,CAAe;AACvBZ,EAAAA,CAAC,EAAG,CADmB;AAEvBC,EAAAA,CAAC,EAAG,CAFmB;AAGvBY,EAAAA,KAAK,EAAG,GAHe;AAIvBC,EAAAA,MAAM,EAAG,GAJc;AAKvBX,EAAAA,IAAI,EAAG,SALgB;AAMvBC,EAAAA,MAAM,EAAG,OANc;AAOvB;AACA;AACAM,EAAAA,SAAS,EAAG;AATW,CAAf,CAAZ;;AAYA,IAAIK,OAAO,GAAG,IAAIjB,eAAMkB,IAAV,CAAe;AACzBhB,EAAAA,CAAC,EAAG,EADqB;AAEzBC,EAAAA,CAAC,EAAG,EAFqB;AAGzBE,EAAAA,IAAI,EAAG,OAHkB;AAIzBc,EAAAA,IAAI,EAAG,EAJkB;AAKzBC,EAAAA,QAAQ,EAAG;AALc,CAAf,CAAd,EAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;AC/CA;;AACA;;;;;;;;;;IACqBC;AACjB,mBAAYC,KAAZ,EAAkBpB,CAAlB,EAAoBC,CAApB,EAAsBoB,GAAtB,EAA0B;AAAA;;AACtB,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKpB,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKgB,IAAL,GAAYI,GAAZ;AACA,SAAKC,IAAL,GAAY,KAAKC,OAAL,EAAZ;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,cAAL,GAAsB,KAAtB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,cAAL,GAAsB,KAAtB;AACA,SAAKC,OAAL,GAAgB,EAAhB;AACH;;;;WAED,mBAAS;AACL,UAAIC,OAAO,GAAG,IAAI/B,eAAMgC,KAAV,CAAgB;AAC1B9B,QAAAA,CAAC,EAAG,KAAKA,CADiB;AAE1BC,QAAAA,CAAC,EAAG,KAAKA;AAFiB,OAAhB,CAAd;AAKA4B,MAAAA,OAAO,CAACE,GAAR,CACI,IAAIjC,eAAMkC,GAAV,CAAc;AACV7B,QAAAA,IAAI,EAAG;AADG,OAAd,CADJ;AAMA0B,MAAAA,OAAO,CAACE,GAAR,CACI,IAAIjC,eAAMkB,IAAV,CAAe;AACXb,QAAAA,IAAI,EAAE,OADK;AAEXc,QAAAA,IAAI,EAAG,KAAKA,IAFD;AAGXgB,QAAAA,OAAO,EAAG;AAHC,OAAf,CADJ;AAOA,aAAOJ,OAAP;AACH;;;WAED,kBAAQ;AACJ,WAAKT,KAAL,CAAWW,GAAX,CAAe,KAAKT,IAApB;AACH;;;WAED,0BAAgB;AACZ;AAEA,UAAG,KAAKE,SAAL,KAAmB,KAAtB,EAA4B;AACxB,aAAKA,SAAL,GAAiB,IAAjB;AACA,aAAKF,IAAL,CAAUY,MAAV,GAAmB/B,IAAnB,CAAwB,KAAxB,EAFwB,CAGxB;;AACA,aAAKgC,aAAL;AACH,OALD,MAMI;AACA,aAAKX,SAAL,GAAiB,KAAjB;AACA,aAAKF,IAAL,CAAUY,MAAV,GAAmB/B,IAAnB,CAAwB,OAAxB;;AACAiC,sBAAOC,GAAP,CAAW,WAAX;;AACAD,sBAAOC,GAAP,CAAW,WAAX;;AACAD,sBAAOC,GAAP,CAAW,SAAX;AACH;;AAGD,WAAKjB,KAAL,CAAWkB,IAAX;AACH;;;WAID,yBAAe;AAAA;;AACX,UAAG,CAAC,KAAKd,SAAT,EAAoB;;AAEpBY,oBAAOG,EAAP,CAAU,WAAV,EAAsB,YAAM;AACxB;AACA,QAAA,KAAI,CAACd,cAAL,GAAsB,IAAtB;;AACA,QAAA,KAAI,CAACe,YAAL;AACH,OAJD;;AAKAJ,oBAAOG,EAAP,CAAU,SAAV,EAAoB,YAAM;AACtB,QAAA,KAAI,CAACd,cAAL,GAAsB,KAAtB;AACA,QAAA,KAAI,CAACE,cAAL,GAAsB,KAAtB;AAGH,OALD;;AAMAS,oBAAOG,EAAP,CAAU,WAAV,EAAsB,YAAM;AACxB,QAAA,KAAI,CAACZ,cAAL,GAAsB,IAAtB;;AACA,QAAA,KAAI,CAACc,QAAL;AACH,OAHD,EAdW,CAmBX;;AACH;;;WACD,wBAAc;AACV,UAAG,CAAC,KAAKhB,cAAT,EAAyB;;AACzB,UAAIiB,OAAO,GAAGN,cAAOO,kBAAP,EAAd;;AACA,UAAIC,QAAQ,GAAI,IAAI9C,eAAM+C,IAAV,CAAe;AAC3BC,QAAAA,MAAM,EAAG,CAACJ,OAAO,CAAC1C,CAAT,EAAW0C,OAAO,CAACzC,CAAnB,CADkB;AAE3BG,QAAAA,MAAM,EAAG,KAFkB;AAG3BC,QAAAA,WAAW,EAAG,CAHa;AAI3B0C,QAAAA,OAAO,EAAG;AAJiB,OAAf,CAAhB;AAMA,WAAKnB,OAAL,CAAaoB,IAAb,CAAkBJ,QAAlB;AACA,WAAKxB,KAAL,CAAWW,GAAX,CAAea,QAAf;AACA,WAAKtB,IAAL,CAAU2B,MAAV,CAAiB,KAAKrB,OAAL,CAAasB,MAAb,GAAsB,EAAvC;AACA,WAAKC,QAAL,CAAcF,MAAd,CAAqB,KAAKrB,OAAL,CAAasB,MAAb,GAAsB,EAA3C;AACH;;;WAED,oBAAU;AACN,UAAG,CAAC,KAAKzB,cAAT,EAA0B,OADpB,CAEN;;AACA,UAAIiB,OAAO,GAAGN,cAAOO,kBAAP,EAAd;;AACA,UAAIS,QAAQ,GAAG,KAAKxB,OAAL,CAAa,KAAKA,OAAL,CAAasB,MAAb,GAAsB,CAAnC,CAAf,CAJM,CAKN;;AACA,UAAIG,SAAS,GAAGD,QAAQ,CAACN,MAAT,GAAkBQ,MAAlB,CAAyB,CAACZ,OAAO,CAAC1C,CAAT,EAAW0C,OAAO,CAACzC,CAAnB,CAAzB,CAAhB;AACAmD,MAAAA,QAAQ,CAACN,MAAT,CAAgBO,SAAhB;AACA,WAAKjC,KAAL,CAAWmC,SAAX;AACH;;;WAED,sBAAavD,CAAb,EAAeC,CAAf,EAAiBuD,OAAjB,EAAyBC,MAAzB,EAAgCxC,IAAhC,EAAqC;AACjC,UAAIY,OAAO,GAAG,IAAI/B,eAAMgC,KAAV,CAAgB;AAC1B9B,QAAAA,CAAC,EAAGA,CADsB;AAE1BC,QAAAA,CAAC,EAAGA;AAFsB,OAAhB,CAAd;AAKA4B,MAAAA,OAAO,CAACE,GAAR,CACI,IAAIjC,eAAMkC,GAAV,CAAc;AACV7B,QAAAA,IAAI,EAAGqD;AADG,OAAd,CADJ;AAMA3B,MAAAA,OAAO,CAACE,GAAR,CACI,IAAIjC,eAAMkB,IAAV,CAAe;AACXb,QAAAA,IAAI,EAAEsD,MADK;AAEXxC,QAAAA,IAAI,EAAGA,IAFI;AAGXgB,QAAAA,OAAO,EAAG;AAHC,OAAf,CADJ;AAOA,WAAKb,KAAL,CAAWW,GAAX,CAAeF,OAAf;AACA,WAAKsB,QAAL,GAAgBtB,OAAhB;AACH;;;WAED,sBAAY;AACR;AACA,WAAKD,OAAL,CAAa8B,OAAb,CAAqB,UAAAC,GAAG,EAAI;AACxBA,QAAAA,GAAG,CAACC,OAAJ;AACH,OAFD;AAGA,WAAKhC,OAAL,GAAe,EAAf;AACA,WAAKR,KAAL,CAAWkB,IAAX,GANQ,CAOR;AACH;;;;;;;;;;;;;;;AC/IL;;AACA;;AACA;;;;AACO,IAAMF,MAAM,GAAG,IAAItC,eAAM+D,KAAV,CAAgB;AAClCC,EAAAA,SAAS,EAAG,YADsB;AAElCjD,EAAAA,KAAK,EAAG,GAF0B;AAGlCC,EAAAA,MAAM,EAAE;AAH0B,CAAhB,CAAf;;AAMP,IAAMM,KAAK,GAAG,IAAItB,eAAMiE,KAAV,CAAgB,EAAhB,CAAd;AAGA,IAAIC,SAAS,GAAG,IAAI7C,gBAAJ,CAAYC,KAAZ,EAAkB,GAAlB,EAAsB,EAAtB,EAAyB,MAAzB,CAAhB;AACA4C,SAAS,CAACC,MAAV;AACAD,SAAS,CAAC1C,IAAV,CAAeiB,EAAf,CAAkB,OAAlB,EAA0B,YAAU;AAACyB,EAAAA,SAAS,CAACE,cAAV;AAA4B,CAAjE;AAEAF,SAAS,CAACG,YAAV,CAAuB,GAAvB,EAA2B,EAA3B,EAA8B,OAA9B,EAAsC,OAAtC,EAA8C,OAA9C;AACAH,SAAS,CAACb,QAAV,CAAmBZ,EAAnB,CAAsB,OAAtB,EAA8B,YAAU;AACpCyB,EAAAA,SAAS,CAACI,UAAV;AACH,CAFD;AAKAhD,KAAK,CAACW,GAAN,CAAUlC,YAAV,EAAekB,eAAf,EAAuBJ,aAAvB;;AACAA,cAAMsC,MAAN,CAAa,CAAb;;AAEAb,MAAM,CAACL,GAAP,CAAWX,KAAX,GAGA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAeAvB,aAAK0C,EAAL,CAAQ,WAAR,EAAoB,YAAU;AAC1B;AACA,OAAKpC,IAAL,CAAU,OAAV;AACAiB,EAAAA,KAAK,CAACkB,IAAN;AACH,CAJD;;AAKAzC,aAAK0C,EAAL,CAAQ,UAAR,EAAmB,YAAU;AACzB;AACA,OAAKpC,IAAL,CAAU,SAAV;AACAiB,EAAAA,KAAK,CAACkB,IAAN;AACH,CAJD;;;ACxDA,IAAI+B,UAAU,GAAG,4BAAjB;AAEA,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcC,MAA9B;;AAEA,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1BJ,EAAAA,SAAS,CAACK,IAAV,CAAe,IAAf,EAAqBD,UAArB;AACA,OAAKE,GAAL,GAAW;AACTC,IAAAA,IAAI,EAAEN,MAAM,CAACC,MAAP,CAAcM,OADX;AAETC,IAAAA,gBAAgB,EAAE,EAFT;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,MAAM,EAAE,UAAUC,EAAV,EAAc;AACpB,WAAKH,gBAAL,CAAsB/B,IAAtB,CAA2BkC,EAAE,IAAI,YAAY,CAAE,CAA/C;AACD,KANQ;AAOTC,IAAAA,OAAO,EAAE,UAAUD,EAAV,EAAc;AACrB,WAAKF,iBAAL,CAAuBhC,IAAvB,CAA4BkC,EAA5B;AACD;AATQ,GAAX;AAYAX,EAAAA,MAAM,CAACC,MAAP,CAAcM,OAAd,GAAwB,IAAxB;AACD;;AAEDP,MAAM,CAACC,MAAP,CAAcC,MAAd,GAAuBA,MAAvB;AACA,IAAIW,aAAJ,EAAmBC,cAAnB;AAEA,IAAIC,MAAM,GAAGf,MAAM,CAACC,MAAP,CAAcc,MAA3B;;AACA,IAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAACC,eAApB,KAAwC,OAAOC,SAAP,KAAqB,WAAjE,EAA8E;AAC5E,MAAIC,QAAQ,GAAG,MAA4BC,QAAQ,CAACD,QAApD;AACA,MAAIE,QAAQ,GAAGD,QAAQ,CAACC,QAAT,KAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAAxD;AACA,MAAIC,EAAE,GAAG,IAAIJ,SAAJ,CAAcG,QAAQ,GAAG,KAAX,GAAmBF,QAAnB,GAA8B,GAA9B,aAA2D,GAAzE,CAAT;;AACAG,EAAAA,EAAE,CAACC,SAAH,GAAe,UAASC,KAAT,EAAgB;AAC7BV,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,cAAc,GAAG,EAAjB;AAEA,QAAIR,IAAI,GAAGkB,IAAI,CAACC,KAAL,CAAWF,KAAK,CAACjB,IAAjB,CAAX;;AAEA,QAAIA,IAAI,CAACoB,IAAL,KAAc,QAAlB,EAA4B;AAC1B,UAAIC,OAAO,GAAG,KAAd;AACArB,MAAAA,IAAI,CAACsB,MAAL,CAAYzC,OAAZ,CAAoB,UAAS0C,KAAT,EAAgB;AAClC,YAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,cAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBL,KAAK,CAACM,EAA7B,CAA9B;;AACA,cAAIJ,SAAJ,EAAe;AACbJ,YAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF,OAPD,EAF0B,CAW1B;;AACAA,MAAAA,OAAO,GAAGA,OAAO,IAAIrB,IAAI,CAACsB,MAAL,CAAYQ,KAAZ,CAAkB,UAASP,KAAT,EAAgB;AACrD,eAAOA,KAAK,CAACH,IAAN,KAAe,KAAf,IAAwBG,KAAK,CAACQ,SAAN,CAAgBC,EAA/C;AACD,OAFoB,CAArB;;AAIA,UAAIX,OAAJ,EAAa;AACXY,QAAAA,OAAO,CAACC,KAAR;AAEAlC,QAAAA,IAAI,CAACsB,MAAL,CAAYzC,OAAZ,CAAoB,UAAU0C,KAAV,EAAiB;AACnCY,UAAAA,QAAQ,CAACR,MAAM,CAACC,aAAR,EAAuBL,KAAvB,CAAR;AACD,SAFD;AAIAf,QAAAA,cAAc,CAAC3B,OAAf,CAAuB,UAAUuD,CAAV,EAAa;AAClCC,UAAAA,YAAY,CAACD,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAZ;AACD,SAFD;AAGD,OAVD,MAUO,IAAIvB,QAAQ,CAACyB,MAAb,EAAqB;AAAE;AAC5BzB,QAAAA,QAAQ,CAACyB,MAAT;AACD;AACF;;AAED,QAAItC,IAAI,CAACoB,IAAL,KAAc,QAAlB,EAA4B;AAC1BL,MAAAA,EAAE,CAACwB,KAAH;;AACAxB,MAAAA,EAAE,CAACyB,OAAH,GAAa,YAAY;AACvB3B,QAAAA,QAAQ,CAACyB,MAAT;AACD,OAFD;AAGD;;AAED,QAAItC,IAAI,CAACoB,IAAL,KAAc,gBAAlB,EAAoC;AAClCa,MAAAA,OAAO,CAACQ,GAAR,CAAY,2BAAZ;AAEAC,MAAAA,kBAAkB;AACnB;;AAED,QAAI1C,IAAI,CAACoB,IAAL,KAAc,OAAlB,EAA2B;AACzBa,MAAAA,OAAO,CAACU,KAAR,CAAc,kBAAkB3C,IAAI,CAAC2C,KAAL,CAAWzG,OAA7B,GAAuC,IAAvC,GAA8C8D,IAAI,CAAC2C,KAAL,CAAWC,KAAvE;AAEAF,MAAAA,kBAAkB;AAElB,UAAIG,OAAO,GAAGC,kBAAkB,CAAC9C,IAAD,CAAhC;AACA+C,MAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BJ,OAA1B;AACD;AACF,GA1DD;AA2DD;;AAED,SAASH,kBAAT,GAA8B;AAC5B,MAAIG,OAAO,GAAGE,QAAQ,CAACG,cAAT,CAAwB1D,UAAxB,CAAd;;AACA,MAAIqD,OAAJ,EAAa;AACXA,IAAAA,OAAO,CAACM,MAAR;AACD;AACF;;AAED,SAASL,kBAAT,CAA4B9C,IAA5B,EAAkC;AAChC,MAAI6C,OAAO,GAAGE,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAd;AACAP,EAAAA,OAAO,CAAChB,EAAR,GAAarC,UAAb,CAFgC,CAIhC;;AACA,MAAItD,OAAO,GAAG6G,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAd;AACA,MAAIC,UAAU,GAAGN,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAjB;AACAlH,EAAAA,OAAO,CAACoH,SAAR,GAAoBtD,IAAI,CAAC2C,KAAL,CAAWzG,OAA/B;AACAmH,EAAAA,UAAU,CAACC,SAAX,GAAuBtD,IAAI,CAAC2C,KAAL,CAAWC,KAAlC;AAEAC,EAAAA,OAAO,CAACU,SAAR,GACE,2NACE,mFADF,GAEE,yEAFF,GAGE,qEAHF,GAG0ErH,OAAO,CAACqH,SAHlF,GAG8F,QAH9F,GAIE,OAJF,GAIYF,UAAU,CAACE,SAJvB,GAImC,QAJnC,GAKA,QANF;AASA,SAAOV,OAAP;AAED;;AAED,SAASW,UAAT,CAAoB7D,MAApB,EAA4BkC,EAA5B,EAAgC;AAC9B,MAAI4B,OAAO,GAAG9D,MAAM,CAAC8D,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,CAAJ,EAAOC,CAAP,EAAUC,GAAV;;AAEA,OAAKF,CAAL,IAAUF,OAAV,EAAmB;AACjB,SAAKG,CAAL,IAAUH,OAAO,CAACE,CAAD,CAAP,CAAW,CAAX,CAAV,EAAyB;AACvBE,MAAAA,GAAG,GAAGJ,OAAO,CAACE,CAAD,CAAP,CAAW,CAAX,EAAcC,CAAd,CAAN;;AACA,UAAIC,GAAG,KAAKhC,EAAR,IAAeiC,KAAK,CAACC,OAAN,CAAcF,GAAd,KAAsBA,GAAG,CAACA,GAAG,CAACxF,MAAJ,GAAa,CAAd,CAAH,KAAwBwD,EAAjE,EAAsE;AACpE6B,QAAAA,OAAO,CAACvF,IAAR,CAAawF,CAAb;AACD;AACF;AACF;;AAED,MAAIhE,MAAM,CAACc,MAAX,EAAmB;AACjBiD,IAAAA,OAAO,GAAGA,OAAO,CAACjF,MAAR,CAAe+E,UAAU,CAAC7D,MAAM,CAACc,MAAR,EAAgBoB,EAAhB,CAAzB,CAAV;AACD;;AAED,SAAO6B,OAAP;AACD;;AAED,SAASvB,QAAT,CAAkBxC,MAAlB,EAA0B4B,KAA1B,EAAiC;AAC/B,MAAIkC,OAAO,GAAG9D,MAAM,CAAC8D,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAIA,OAAO,CAAClC,KAAK,CAACM,EAAP,CAAP,IAAqB,CAAClC,MAAM,CAACc,MAAjC,EAAyC;AACvC,QAAIJ,EAAE,GAAG,IAAI2D,QAAJ,CAAa,SAAb,EAAwB,QAAxB,EAAkC,SAAlC,EAA6CzC,KAAK,CAACQ,SAAN,CAAgBC,EAA7D,CAAT;AACAT,IAAAA,KAAK,CAACC,KAAN,GAAc,CAACiC,OAAO,CAAClC,KAAK,CAACM,EAAP,CAAtB;AACA4B,IAAAA,OAAO,CAAClC,KAAK,CAACM,EAAP,CAAP,GAAoB,CAACxB,EAAD,EAAKkB,KAAK,CAAC0C,IAAX,CAApB;AACD,GAJD,MAIO,IAAItE,MAAM,CAACc,MAAX,EAAmB;AACxB0B,IAAAA,QAAQ,CAACxC,MAAM,CAACc,MAAR,EAAgBc,KAAhB,CAAR;AACD;AACF;;AAED,SAASG,cAAT,CAAwB/B,MAAxB,EAAgCkC,EAAhC,EAAoC;AAClC,MAAI4B,OAAO,GAAG9D,MAAM,CAAC8D,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAI,CAACA,OAAO,CAAC5B,EAAD,CAAR,IAAgBlC,MAAM,CAACc,MAA3B,EAAmC;AACjC,WAAOiB,cAAc,CAAC/B,MAAM,CAACc,MAAR,EAAgBoB,EAAhB,CAArB;AACD;;AAED,MAAItB,aAAa,CAACsB,EAAD,CAAjB,EAAuB;AACrB;AACD;;AACDtB,EAAAA,aAAa,CAACsB,EAAD,CAAb,GAAoB,IAApB;AAEA,MAAIqC,MAAM,GAAGvE,MAAM,CAACwE,KAAP,CAAatC,EAAb,CAAb;AAEArB,EAAAA,cAAc,CAACrC,IAAf,CAAoB,CAACwB,MAAD,EAASkC,EAAT,CAApB;;AAEA,MAAIqC,MAAM,IAAIA,MAAM,CAACnE,GAAjB,IAAwBmE,MAAM,CAACnE,GAAP,CAAWG,gBAAX,CAA4B7B,MAAxD,EAAgE;AAC9D,WAAO,IAAP;AACD;;AAED,SAAOmF,UAAU,CAAC7B,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAAV,CAAqCuC,IAArC,CAA0C,UAAUvC,EAAV,EAAc;AAC7D,WAAOH,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAArB;AACD,GAFM,CAAP;AAGD;;AAED,SAASQ,YAAT,CAAsB1C,MAAtB,EAA8BkC,EAA9B,EAAkC;AAChC,MAAIqC,MAAM,GAAGvE,MAAM,CAACwE,KAAP,CAAatC,EAAb,CAAb;AACAlC,EAAAA,MAAM,CAACM,OAAP,GAAiB,EAAjB;;AACA,MAAIiE,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACnE,GAAP,CAAWC,IAAX,GAAkBL,MAAM,CAACM,OAAzB;AACD;;AAED,MAAIiE,MAAM,IAAIA,MAAM,CAACnE,GAAjB,IAAwBmE,MAAM,CAACnE,GAAP,CAAWI,iBAAX,CAA6B9B,MAAzD,EAAiE;AAC/D6F,IAAAA,MAAM,CAACnE,GAAP,CAAWI,iBAAX,CAA6BtB,OAA7B,CAAqC,UAAUwF,EAAV,EAAc;AACjDA,MAAAA,EAAE,CAAC1E,MAAM,CAACM,OAAR,CAAF;AACD,KAFD;AAGD;;AAED,SAAON,MAAM,CAACwE,KAAP,CAAatC,EAAb,CAAP;AACAlC,EAAAA,MAAM,CAACkC,EAAD,CAAN;AAEAqC,EAAAA,MAAM,GAAGvE,MAAM,CAACwE,KAAP,CAAatC,EAAb,CAAT;;AACA,MAAIqC,MAAM,IAAIA,MAAM,CAACnE,GAAjB,IAAwBmE,MAAM,CAACnE,GAAP,CAAWG,gBAAX,CAA4B7B,MAAxD,EAAgE;AAC9D6F,IAAAA,MAAM,CAACnE,GAAP,CAAWG,gBAAX,CAA4BrB,OAA5B,CAAoC,UAAUwF,EAAV,EAAc;AAChDA,MAAAA,EAAE;AACH,KAFD;;AAGA,WAAO,IAAP;AACD;AACF","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports._registerNode = exports._NODES_REGISTRY = exports.Konva = exports.glob = exports._parseUA = void 0;\r\nvar PI_OVER_180 = Math.PI / 180;\r\nfunction detectBrowser() {\r\n    return (typeof window !== 'undefined' &&\r\n        ({}.toString.call(window) === '[object Window]' ||\r\n            {}.toString.call(window) === '[object global]'));\r\n}\r\nvar _detectIE = function (ua) {\r\n    var msie = ua.indexOf('msie ');\r\n    if (msie > 0) {\r\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n    }\r\n    var trident = ua.indexOf('trident/');\r\n    if (trident > 0) {\r\n        var rv = ua.indexOf('rv:');\r\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\r\n    }\r\n    var edge = ua.indexOf('edge/');\r\n    if (edge > 0) {\r\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\r\n    }\r\n    return false;\r\n};\r\nvar _parseUA = function (userAgent) {\r\n    var ua = userAgent.toLowerCase(), match = /(chrome)[ /]([\\w.]+)/.exec(ua) ||\r\n        /(webkit)[ /]([\\w.]+)/.exec(ua) ||\r\n        /(opera)(?:.*version|)[ /]([\\w.]+)/.exec(ua) ||\r\n        /(msie) ([\\w.]+)/.exec(ua) ||\r\n        (ua.indexOf('compatible') < 0 &&\r\n            /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua)) ||\r\n        [], mobile = !!userAgent.match(/Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile/i), ieMobile = !!userAgent.match(/IEMobile/i);\r\n    return {\r\n        browser: match[1] || '',\r\n        version: match[2] || '0',\r\n        isIE: _detectIE(ua),\r\n        mobile: mobile,\r\n        ieMobile: ieMobile\r\n    };\r\n};\r\nexports._parseUA = _parseUA;\r\nexports.glob = typeof global !== 'undefined'\r\n    ? global\r\n    : typeof window !== 'undefined'\r\n        ? window\r\n        : typeof WorkerGlobalScope !== 'undefined'\r\n            ? self\r\n            : {};\r\nexports.Konva = {\r\n    _global: exports.glob,\r\n    version: '7.2.5',\r\n    isBrowser: detectBrowser(),\r\n    isUnminified: /param/.test(function (param) { }.toString()),\r\n    dblClickWindow: 400,\r\n    getAngle: function (angle) {\r\n        return exports.Konva.angleDeg ? angle * PI_OVER_180 : angle;\r\n    },\r\n    enableTrace: false,\r\n    _pointerEventsEnabled: false,\r\n    hitOnDragEnabled: false,\r\n    captureTouchEventsEnabled: false,\r\n    listenClickTap: false,\r\n    inDblClickWindow: false,\r\n    pixelRatio: undefined,\r\n    dragDistance: 3,\r\n    angleDeg: true,\r\n    showWarnings: true,\r\n    dragButtons: [0, 1],\r\n    isDragging: function () {\r\n        return exports.Konva['DD'].isDragging;\r\n    },\r\n    isDragReady: function () {\r\n        return !!exports.Konva['DD'].node;\r\n    },\r\n    UA: exports._parseUA((exports.glob.navigator && exports.glob.navigator.userAgent) || ''),\r\n    document: exports.glob.document,\r\n    _injectGlobal: function (Konva) {\r\n        exports.glob.Konva = Konva;\r\n    },\r\n    _parseUA: exports._parseUA\r\n};\r\nexports._NODES_REGISTRY = {};\r\nvar _registerNode = function (NodeClass) {\r\n    exports._NODES_REGISTRY[NodeClass.prototype.getClassName()] = NodeClass;\r\n    exports.Konva[NodeClass.prototype.getClassName()] = NodeClass;\r\n};\r\nexports._registerNode = _registerNode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Util = exports.Transform = exports.Collection = void 0;\r\nvar Global_1 = require(\"./Global\");\r\nvar Collection = (function () {\r\n    function Collection() {\r\n    }\r\n    Collection.toCollection = function (arr) {\r\n        var collection = new Collection(), len = arr.length, n;\r\n        for (n = 0; n < len; n++) {\r\n            collection.push(arr[n]);\r\n        }\r\n        return collection;\r\n    };\r\n    Collection._mapMethod = function (methodName) {\r\n        Collection.prototype[methodName] = function () {\r\n            var len = this.length, i;\r\n            var args = [].slice.call(arguments);\r\n            for (i = 0; i < len; i++) {\r\n                this[i][methodName].apply(this[i], args);\r\n            }\r\n            return this;\r\n        };\r\n    };\r\n    Collection.mapMethods = function (constructor) {\r\n        var prot = constructor.prototype;\r\n        for (var methodName in prot) {\r\n            Collection._mapMethod(methodName);\r\n        }\r\n    };\r\n    return Collection;\r\n}());\r\nexports.Collection = Collection;\r\nCollection.prototype = [];\r\nCollection.prototype.each = function (func) {\r\n    for (var n = 0; n < this.length; n++) {\r\n        func(this[n], n);\r\n    }\r\n};\r\nCollection.prototype.toArray = function () {\r\n    var arr = [], len = this.length, n;\r\n    for (n = 0; n < len; n++) {\r\n        arr.push(this[n]);\r\n    }\r\n    return arr;\r\n};\r\nvar Transform = (function () {\r\n    function Transform(m) {\r\n        if (m === void 0) { m = [1, 0, 0, 1, 0, 0]; }\r\n        this.dirty = false;\r\n        this.m = (m && m.slice()) || [1, 0, 0, 1, 0, 0];\r\n    }\r\n    Transform.prototype.reset = function () {\r\n        this.m[0] = 1;\r\n        this.m[1] = 0;\r\n        this.m[2] = 0;\r\n        this.m[3] = 1;\r\n        this.m[4] = 0;\r\n        this.m[5] = 0;\r\n    };\r\n    Transform.prototype.copy = function () {\r\n        return new Transform(this.m);\r\n    };\r\n    Transform.prototype.copyInto = function (tr) {\r\n        tr.m[0] = this.m[0];\r\n        tr.m[1] = this.m[1];\r\n        tr.m[2] = this.m[2];\r\n        tr.m[3] = this.m[3];\r\n        tr.m[4] = this.m[4];\r\n        tr.m[5] = this.m[5];\r\n    };\r\n    Transform.prototype.point = function (point) {\r\n        var m = this.m;\r\n        return {\r\n            x: m[0] * point.x + m[2] * point.y + m[4],\r\n            y: m[1] * point.x + m[3] * point.y + m[5],\r\n        };\r\n    };\r\n    Transform.prototype.translate = function (x, y) {\r\n        this.m[4] += this.m[0] * x + this.m[2] * y;\r\n        this.m[5] += this.m[1] * x + this.m[3] * y;\r\n        return this;\r\n    };\r\n    Transform.prototype.scale = function (sx, sy) {\r\n        this.m[0] *= sx;\r\n        this.m[1] *= sx;\r\n        this.m[2] *= sy;\r\n        this.m[3] *= sy;\r\n        return this;\r\n    };\r\n    Transform.prototype.rotate = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        var m11 = this.m[0] * c + this.m[2] * s;\r\n        var m12 = this.m[1] * c + this.m[3] * s;\r\n        var m21 = this.m[0] * -s + this.m[2] * c;\r\n        var m22 = this.m[1] * -s + this.m[3] * c;\r\n        this.m[0] = m11;\r\n        this.m[1] = m12;\r\n        this.m[2] = m21;\r\n        this.m[3] = m22;\r\n        return this;\r\n    };\r\n    Transform.prototype.getTranslation = function () {\r\n        return {\r\n            x: this.m[4],\r\n            y: this.m[5],\r\n        };\r\n    };\r\n    Transform.prototype.skew = function (sx, sy) {\r\n        var m11 = this.m[0] + this.m[2] * sy;\r\n        var m12 = this.m[1] + this.m[3] * sy;\r\n        var m21 = this.m[2] + this.m[0] * sx;\r\n        var m22 = this.m[3] + this.m[1] * sx;\r\n        this.m[0] = m11;\r\n        this.m[1] = m12;\r\n        this.m[2] = m21;\r\n        this.m[3] = m22;\r\n        return this;\r\n    };\r\n    Transform.prototype.multiply = function (matrix) {\r\n        var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\r\n        var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\r\n        var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\r\n        var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\r\n        var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\r\n        var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\r\n        this.m[0] = m11;\r\n        this.m[1] = m12;\r\n        this.m[2] = m21;\r\n        this.m[3] = m22;\r\n        this.m[4] = dx;\r\n        this.m[5] = dy;\r\n        return this;\r\n    };\r\n    Transform.prototype.invert = function () {\r\n        var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\r\n        var m0 = this.m[3] * d;\r\n        var m1 = -this.m[1] * d;\r\n        var m2 = -this.m[2] * d;\r\n        var m3 = this.m[0] * d;\r\n        var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\r\n        var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\r\n        this.m[0] = m0;\r\n        this.m[1] = m1;\r\n        this.m[2] = m2;\r\n        this.m[3] = m3;\r\n        this.m[4] = m4;\r\n        this.m[5] = m5;\r\n        return this;\r\n    };\r\n    Transform.prototype.getMatrix = function () {\r\n        return this.m;\r\n    };\r\n    Transform.prototype.setAbsolutePosition = function (x, y) {\r\n        var m0 = this.m[0], m1 = this.m[1], m2 = this.m[2], m3 = this.m[3], m4 = this.m[4], m5 = this.m[5], yt = (m0 * (y - m5) - m1 * (x - m4)) / (m0 * m3 - m1 * m2), xt = (x - m4 - m2 * yt) / m0;\r\n        return this.translate(xt, yt);\r\n    };\r\n    Transform.prototype.decompose = function () {\r\n        var a = this.m[0];\r\n        var b = this.m[1];\r\n        var c = this.m[2];\r\n        var d = this.m[3];\r\n        var e = this.m[4];\r\n        var f = this.m[5];\r\n        var delta = a * d - b * c;\r\n        var result = {\r\n            x: e,\r\n            y: f,\r\n            rotation: 0,\r\n            scaleX: 0,\r\n            scaleY: 0,\r\n            skewX: 0,\r\n            skewY: 0,\r\n        };\r\n        if (a != 0 || b != 0) {\r\n            var r = Math.sqrt(a * a + b * b);\r\n            result.rotation = b > 0 ? Math.acos(a / r) : -Math.acos(a / r);\r\n            result.scaleX = r;\r\n            result.scaleY = delta / r;\r\n            result.skewX = (a * c + b * d) / delta;\r\n            result.skewY = 0;\r\n        }\r\n        else if (c != 0 || d != 0) {\r\n            var s = Math.sqrt(c * c + d * d);\r\n            result.rotation =\r\n                Math.PI / 2 - (d > 0 ? Math.acos(-c / s) : -Math.acos(c / s));\r\n            result.scaleX = delta / s;\r\n            result.scaleY = s;\r\n            result.skewX = 0;\r\n            result.skewY = (a * c + b * d) / delta;\r\n        }\r\n        else {\r\n        }\r\n        result.rotation = exports.Util._getRotation(result.rotation);\r\n        return result;\r\n    };\r\n    return Transform;\r\n}());\r\nexports.Transform = Transform;\r\nvar OBJECT_ARRAY = '[object Array]', OBJECT_NUMBER = '[object Number]', OBJECT_STRING = '[object String]', OBJECT_BOOLEAN = '[object Boolean]', PI_OVER_DEG180 = Math.PI / 180, DEG180_OVER_PI = 180 / Math.PI, HASH = '#', EMPTY_STRING = '', ZERO = '0', KONVA_WARNING = 'Konva warning: ', KONVA_ERROR = 'Konva error: ', RGB_PAREN = 'rgb(', COLORS = {\r\n    aliceblue: [240, 248, 255],\r\n    antiquewhite: [250, 235, 215],\r\n    aqua: [0, 255, 255],\r\n    aquamarine: [127, 255, 212],\r\n    azure: [240, 255, 255],\r\n    beige: [245, 245, 220],\r\n    bisque: [255, 228, 196],\r\n    black: [0, 0, 0],\r\n    blanchedalmond: [255, 235, 205],\r\n    blue: [0, 0, 255],\r\n    blueviolet: [138, 43, 226],\r\n    brown: [165, 42, 42],\r\n    burlywood: [222, 184, 135],\r\n    cadetblue: [95, 158, 160],\r\n    chartreuse: [127, 255, 0],\r\n    chocolate: [210, 105, 30],\r\n    coral: [255, 127, 80],\r\n    cornflowerblue: [100, 149, 237],\r\n    cornsilk: [255, 248, 220],\r\n    crimson: [220, 20, 60],\r\n    cyan: [0, 255, 255],\r\n    darkblue: [0, 0, 139],\r\n    darkcyan: [0, 139, 139],\r\n    darkgoldenrod: [184, 132, 11],\r\n    darkgray: [169, 169, 169],\r\n    darkgreen: [0, 100, 0],\r\n    darkgrey: [169, 169, 169],\r\n    darkkhaki: [189, 183, 107],\r\n    darkmagenta: [139, 0, 139],\r\n    darkolivegreen: [85, 107, 47],\r\n    darkorange: [255, 140, 0],\r\n    darkorchid: [153, 50, 204],\r\n    darkred: [139, 0, 0],\r\n    darksalmon: [233, 150, 122],\r\n    darkseagreen: [143, 188, 143],\r\n    darkslateblue: [72, 61, 139],\r\n    darkslategray: [47, 79, 79],\r\n    darkslategrey: [47, 79, 79],\r\n    darkturquoise: [0, 206, 209],\r\n    darkviolet: [148, 0, 211],\r\n    deeppink: [255, 20, 147],\r\n    deepskyblue: [0, 191, 255],\r\n    dimgray: [105, 105, 105],\r\n    dimgrey: [105, 105, 105],\r\n    dodgerblue: [30, 144, 255],\r\n    firebrick: [178, 34, 34],\r\n    floralwhite: [255, 255, 240],\r\n    forestgreen: [34, 139, 34],\r\n    fuchsia: [255, 0, 255],\r\n    gainsboro: [220, 220, 220],\r\n    ghostwhite: [248, 248, 255],\r\n    gold: [255, 215, 0],\r\n    goldenrod: [218, 165, 32],\r\n    gray: [128, 128, 128],\r\n    green: [0, 128, 0],\r\n    greenyellow: [173, 255, 47],\r\n    grey: [128, 128, 128],\r\n    honeydew: [240, 255, 240],\r\n    hotpink: [255, 105, 180],\r\n    indianred: [205, 92, 92],\r\n    indigo: [75, 0, 130],\r\n    ivory: [255, 255, 240],\r\n    khaki: [240, 230, 140],\r\n    lavender: [230, 230, 250],\r\n    lavenderblush: [255, 240, 245],\r\n    lawngreen: [124, 252, 0],\r\n    lemonchiffon: [255, 250, 205],\r\n    lightblue: [173, 216, 230],\r\n    lightcoral: [240, 128, 128],\r\n    lightcyan: [224, 255, 255],\r\n    lightgoldenrodyellow: [250, 250, 210],\r\n    lightgray: [211, 211, 211],\r\n    lightgreen: [144, 238, 144],\r\n    lightgrey: [211, 211, 211],\r\n    lightpink: [255, 182, 193],\r\n    lightsalmon: [255, 160, 122],\r\n    lightseagreen: [32, 178, 170],\r\n    lightskyblue: [135, 206, 250],\r\n    lightslategray: [119, 136, 153],\r\n    lightslategrey: [119, 136, 153],\r\n    lightsteelblue: [176, 196, 222],\r\n    lightyellow: [255, 255, 224],\r\n    lime: [0, 255, 0],\r\n    limegreen: [50, 205, 50],\r\n    linen: [250, 240, 230],\r\n    magenta: [255, 0, 255],\r\n    maroon: [128, 0, 0],\r\n    mediumaquamarine: [102, 205, 170],\r\n    mediumblue: [0, 0, 205],\r\n    mediumorchid: [186, 85, 211],\r\n    mediumpurple: [147, 112, 219],\r\n    mediumseagreen: [60, 179, 113],\r\n    mediumslateblue: [123, 104, 238],\r\n    mediumspringgreen: [0, 250, 154],\r\n    mediumturquoise: [72, 209, 204],\r\n    mediumvioletred: [199, 21, 133],\r\n    midnightblue: [25, 25, 112],\r\n    mintcream: [245, 255, 250],\r\n    mistyrose: [255, 228, 225],\r\n    moccasin: [255, 228, 181],\r\n    navajowhite: [255, 222, 173],\r\n    navy: [0, 0, 128],\r\n    oldlace: [253, 245, 230],\r\n    olive: [128, 128, 0],\r\n    olivedrab: [107, 142, 35],\r\n    orange: [255, 165, 0],\r\n    orangered: [255, 69, 0],\r\n    orchid: [218, 112, 214],\r\n    palegoldenrod: [238, 232, 170],\r\n    palegreen: [152, 251, 152],\r\n    paleturquoise: [175, 238, 238],\r\n    palevioletred: [219, 112, 147],\r\n    papayawhip: [255, 239, 213],\r\n    peachpuff: [255, 218, 185],\r\n    peru: [205, 133, 63],\r\n    pink: [255, 192, 203],\r\n    plum: [221, 160, 203],\r\n    powderblue: [176, 224, 230],\r\n    purple: [128, 0, 128],\r\n    rebeccapurple: [102, 51, 153],\r\n    red: [255, 0, 0],\r\n    rosybrown: [188, 143, 143],\r\n    royalblue: [65, 105, 225],\r\n    saddlebrown: [139, 69, 19],\r\n    salmon: [250, 128, 114],\r\n    sandybrown: [244, 164, 96],\r\n    seagreen: [46, 139, 87],\r\n    seashell: [255, 245, 238],\r\n    sienna: [160, 82, 45],\r\n    silver: [192, 192, 192],\r\n    skyblue: [135, 206, 235],\r\n    slateblue: [106, 90, 205],\r\n    slategray: [119, 128, 144],\r\n    slategrey: [119, 128, 144],\r\n    snow: [255, 255, 250],\r\n    springgreen: [0, 255, 127],\r\n    steelblue: [70, 130, 180],\r\n    tan: [210, 180, 140],\r\n    teal: [0, 128, 128],\r\n    thistle: [216, 191, 216],\r\n    transparent: [255, 255, 255, 0],\r\n    tomato: [255, 99, 71],\r\n    turquoise: [64, 224, 208],\r\n    violet: [238, 130, 238],\r\n    wheat: [245, 222, 179],\r\n    white: [255, 255, 255],\r\n    whitesmoke: [245, 245, 245],\r\n    yellow: [255, 255, 0],\r\n    yellowgreen: [154, 205, 5],\r\n}, RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/, animQueue = [];\r\nexports.Util = {\r\n    _isElement: function (obj) {\r\n        return !!(obj && obj.nodeType == 1);\r\n    },\r\n    _isFunction: function (obj) {\r\n        return !!(obj && obj.constructor && obj.call && obj.apply);\r\n    },\r\n    _isPlainObject: function (obj) {\r\n        return !!obj && obj.constructor === Object;\r\n    },\r\n    _isArray: function (obj) {\r\n        return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\r\n    },\r\n    _isNumber: function (obj) {\r\n        return (Object.prototype.toString.call(obj) === OBJECT_NUMBER &&\r\n            !isNaN(obj) &&\r\n            isFinite(obj));\r\n    },\r\n    _isString: function (obj) {\r\n        return Object.prototype.toString.call(obj) === OBJECT_STRING;\r\n    },\r\n    _isBoolean: function (obj) {\r\n        return Object.prototype.toString.call(obj) === OBJECT_BOOLEAN;\r\n    },\r\n    isObject: function (val) {\r\n        return val instanceof Object;\r\n    },\r\n    isValidSelector: function (selector) {\r\n        if (typeof selector !== 'string') {\r\n            return false;\r\n        }\r\n        var firstChar = selector[0];\r\n        return (firstChar === '#' ||\r\n            firstChar === '.' ||\r\n            firstChar === firstChar.toUpperCase());\r\n    },\r\n    _sign: function (number) {\r\n        if (number === 0) {\r\n            return 1;\r\n        }\r\n        if (number > 0) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    },\r\n    requestAnimFrame: function (callback) {\r\n        animQueue.push(callback);\r\n        if (animQueue.length === 1) {\r\n            requestAnimationFrame(function () {\r\n                var queue = animQueue;\r\n                animQueue = [];\r\n                queue.forEach(function (cb) {\r\n                    cb();\r\n                });\r\n            });\r\n        }\r\n    },\r\n    createCanvasElement: function () {\r\n        var canvas = document.createElement('canvas');\r\n        try {\r\n            canvas.style = canvas.style || {};\r\n        }\r\n        catch (e) { }\r\n        return canvas;\r\n    },\r\n    createImageElement: function () {\r\n        return document.createElement('img');\r\n    },\r\n    _isInDocument: function (el) {\r\n        while ((el = el.parentNode)) {\r\n            if (el == document) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    _simplifyArray: function (arr) {\r\n        var retArr = [], len = arr.length, util = exports.Util, n, val;\r\n        for (n = 0; n < len; n++) {\r\n            val = arr[n];\r\n            if (util._isNumber(val)) {\r\n                val = Math.round(val * 1000) / 1000;\r\n            }\r\n            else if (!util._isString(val)) {\r\n                val = val.toString();\r\n            }\r\n            retArr.push(val);\r\n        }\r\n        return retArr;\r\n    },\r\n    _urlToImage: function (url, callback) {\r\n        var imageObj = new Global_1.glob.Image();\r\n        imageObj.onload = function () {\r\n            callback(imageObj);\r\n        };\r\n        imageObj.src = url;\r\n    },\r\n    _rgbToHex: function (r, g, b) {\r\n        return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\r\n    },\r\n    _hexToRgb: function (hex) {\r\n        hex = hex.replace(HASH, EMPTY_STRING);\r\n        var bigint = parseInt(hex, 16);\r\n        return {\r\n            r: (bigint >> 16) & 255,\r\n            g: (bigint >> 8) & 255,\r\n            b: bigint & 255,\r\n        };\r\n    },\r\n    getRandomColor: function () {\r\n        var randColor = ((Math.random() * 0xffffff) << 0).toString(16);\r\n        while (randColor.length < 6) {\r\n            randColor = ZERO + randColor;\r\n        }\r\n        return HASH + randColor;\r\n    },\r\n    get: function (val, def) {\r\n        if (val === undefined) {\r\n            return def;\r\n        }\r\n        else {\r\n            return val;\r\n        }\r\n    },\r\n    getRGB: function (color) {\r\n        var rgb;\r\n        if (color in COLORS) {\r\n            rgb = COLORS[color];\r\n            return {\r\n                r: rgb[0],\r\n                g: rgb[1],\r\n                b: rgb[2],\r\n            };\r\n        }\r\n        else if (color[0] === HASH) {\r\n            return this._hexToRgb(color.substring(1));\r\n        }\r\n        else if (color.substr(0, 4) === RGB_PAREN) {\r\n            rgb = RGB_REGEX.exec(color.replace(/ /g, ''));\r\n            return {\r\n                r: parseInt(rgb[1], 10),\r\n                g: parseInt(rgb[2], 10),\r\n                b: parseInt(rgb[3], 10),\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                r: 0,\r\n                g: 0,\r\n                b: 0,\r\n            };\r\n        }\r\n    },\r\n    colorToRGBA: function (str) {\r\n        str = str || 'black';\r\n        return (exports.Util._namedColorToRBA(str) ||\r\n            exports.Util._hex3ColorToRGBA(str) ||\r\n            exports.Util._hex6ColorToRGBA(str) ||\r\n            exports.Util._rgbColorToRGBA(str) ||\r\n            exports.Util._rgbaColorToRGBA(str) ||\r\n            exports.Util._hslColorToRGBA(str));\r\n    },\r\n    _namedColorToRBA: function (str) {\r\n        var c = COLORS[str.toLowerCase()];\r\n        if (!c) {\r\n            return null;\r\n        }\r\n        return {\r\n            r: c[0],\r\n            g: c[1],\r\n            b: c[2],\r\n            a: 1,\r\n        };\r\n    },\r\n    _rgbColorToRGBA: function (str) {\r\n        if (str.indexOf('rgb(') === 0) {\r\n            str = str.match(/rgb\\(([^)]+)\\)/)[1];\r\n            var parts = str.split(/ *, */).map(Number);\r\n            return {\r\n                r: parts[0],\r\n                g: parts[1],\r\n                b: parts[2],\r\n                a: 1,\r\n            };\r\n        }\r\n    },\r\n    _rgbaColorToRGBA: function (str) {\r\n        if (str.indexOf('rgba(') === 0) {\r\n            str = str.match(/rgba\\(([^)]+)\\)/)[1];\r\n            var parts = str.split(/ *, */).map(Number);\r\n            return {\r\n                r: parts[0],\r\n                g: parts[1],\r\n                b: parts[2],\r\n                a: parts[3],\r\n            };\r\n        }\r\n    },\r\n    _hex6ColorToRGBA: function (str) {\r\n        if (str[0] === '#' && str.length === 7) {\r\n            return {\r\n                r: parseInt(str.slice(1, 3), 16),\r\n                g: parseInt(str.slice(3, 5), 16),\r\n                b: parseInt(str.slice(5, 7), 16),\r\n                a: 1,\r\n            };\r\n        }\r\n    },\r\n    _hex3ColorToRGBA: function (str) {\r\n        if (str[0] === '#' && str.length === 4) {\r\n            return {\r\n                r: parseInt(str[1] + str[1], 16),\r\n                g: parseInt(str[2] + str[2], 16),\r\n                b: parseInt(str[3] + str[3], 16),\r\n                a: 1,\r\n            };\r\n        }\r\n    },\r\n    _hslColorToRGBA: function (str) {\r\n        if (/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.test(str)) {\r\n            var _a = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(str), _ = _a[0], hsl = _a.slice(1);\r\n            var h = Number(hsl[0]) / 360;\r\n            var s = Number(hsl[1]) / 100;\r\n            var l = Number(hsl[2]) / 100;\r\n            var t2 = void 0;\r\n            var t3 = void 0;\r\n            var val = void 0;\r\n            if (s === 0) {\r\n                val = l * 255;\r\n                return {\r\n                    r: Math.round(val),\r\n                    g: Math.round(val),\r\n                    b: Math.round(val),\r\n                    a: 1,\r\n                };\r\n            }\r\n            if (l < 0.5) {\r\n                t2 = l * (1 + s);\r\n            }\r\n            else {\r\n                t2 = l + s - l * s;\r\n            }\r\n            var t1 = 2 * l - t2;\r\n            var rgb = [0, 0, 0];\r\n            for (var i = 0; i < 3; i++) {\r\n                t3 = h + (1 / 3) * -(i - 1);\r\n                if (t3 < 0) {\r\n                    t3++;\r\n                }\r\n                if (t3 > 1) {\r\n                    t3--;\r\n                }\r\n                if (6 * t3 < 1) {\r\n                    val = t1 + (t2 - t1) * 6 * t3;\r\n                }\r\n                else if (2 * t3 < 1) {\r\n                    val = t2;\r\n                }\r\n                else if (3 * t3 < 2) {\r\n                    val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\r\n                }\r\n                else {\r\n                    val = t1;\r\n                }\r\n                rgb[i] = val * 255;\r\n            }\r\n            return {\r\n                r: Math.round(rgb[0]),\r\n                g: Math.round(rgb[1]),\r\n                b: Math.round(rgb[2]),\r\n                a: 1,\r\n            };\r\n        }\r\n    },\r\n    haveIntersection: function (r1, r2) {\r\n        return !(r2.x > r1.x + r1.width ||\r\n            r2.x + r2.width < r1.x ||\r\n            r2.y > r1.y + r1.height ||\r\n            r2.y + r2.height < r1.y);\r\n    },\r\n    cloneObject: function (obj) {\r\n        var retObj = {};\r\n        for (var key in obj) {\r\n            if (this._isPlainObject(obj[key])) {\r\n                retObj[key] = this.cloneObject(obj[key]);\r\n            }\r\n            else if (this._isArray(obj[key])) {\r\n                retObj[key] = this.cloneArray(obj[key]);\r\n            }\r\n            else {\r\n                retObj[key] = obj[key];\r\n            }\r\n        }\r\n        return retObj;\r\n    },\r\n    cloneArray: function (arr) {\r\n        return arr.slice(0);\r\n    },\r\n    _degToRad: function (deg) {\r\n        return deg * PI_OVER_DEG180;\r\n    },\r\n    _radToDeg: function (rad) {\r\n        return rad * DEG180_OVER_PI;\r\n    },\r\n    _getRotation: function (radians) {\r\n        return Global_1.Konva.angleDeg ? exports.Util._radToDeg(radians) : radians;\r\n    },\r\n    _capitalize: function (str) {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n    },\r\n    throw: function (str) {\r\n        throw new Error(KONVA_ERROR + str);\r\n    },\r\n    error: function (str) {\r\n        console.error(KONVA_ERROR + str);\r\n    },\r\n    warn: function (str) {\r\n        if (!Global_1.Konva.showWarnings) {\r\n            return;\r\n        }\r\n        console.warn(KONVA_WARNING + str);\r\n    },\r\n    extend: function (child, parent) {\r\n        function Ctor() {\r\n            this.constructor = child;\r\n        }\r\n        Ctor.prototype = parent.prototype;\r\n        var oldProto = child.prototype;\r\n        child.prototype = new Ctor();\r\n        for (var key in oldProto) {\r\n            if (oldProto.hasOwnProperty(key)) {\r\n                child.prototype[key] = oldProto[key];\r\n            }\r\n        }\r\n        child.__super__ = parent.prototype;\r\n        child.super = parent;\r\n    },\r\n    _getControlPoints: function (x0, y0, x1, y1, x2, y2, t) {\r\n        var d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)), d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)), fa = (t * d01) / (d01 + d12), fb = (t * d12) / (d01 + d12), p1x = x1 - fa * (x2 - x0), p1y = y1 - fa * (y2 - y0), p2x = x1 + fb * (x2 - x0), p2y = y1 + fb * (y2 - y0);\r\n        return [p1x, p1y, p2x, p2y];\r\n    },\r\n    _expandPoints: function (p, tension) {\r\n        var len = p.length, allPoints = [], n, cp;\r\n        for (n = 2; n < len - 2; n += 2) {\r\n            cp = exports.Util._getControlPoints(p[n - 2], p[n - 1], p[n], p[n + 1], p[n + 2], p[n + 3], tension);\r\n            if (isNaN(cp[0])) {\r\n                continue;\r\n            }\r\n            allPoints.push(cp[0]);\r\n            allPoints.push(cp[1]);\r\n            allPoints.push(p[n]);\r\n            allPoints.push(p[n + 1]);\r\n            allPoints.push(cp[2]);\r\n            allPoints.push(cp[3]);\r\n        }\r\n        return allPoints;\r\n    },\r\n    each: function (obj, func) {\r\n        for (var key in obj) {\r\n            func(key, obj[key]);\r\n        }\r\n    },\r\n    _inRange: function (val, left, right) {\r\n        return left <= val && val < right;\r\n    },\r\n    _getProjectionToSegment: function (x1, y1, x2, y2, x3, y3) {\r\n        var x, y, dist;\r\n        var pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\r\n        if (pd2 == 0) {\r\n            x = x1;\r\n            y = y1;\r\n            dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\r\n        }\r\n        else {\r\n            var u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\r\n            if (u < 0) {\r\n                x = x1;\r\n                y = y1;\r\n                dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\r\n            }\r\n            else if (u > 1.0) {\r\n                x = x2;\r\n                y = y2;\r\n                dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\r\n            }\r\n            else {\r\n                x = x1 + u * (x2 - x1);\r\n                y = y1 + u * (y2 - y1);\r\n                dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\r\n            }\r\n        }\r\n        return [x, y, dist];\r\n    },\r\n    _getProjectionToLine: function (pt, line, isClosed) {\r\n        var pc = exports.Util.cloneObject(pt);\r\n        var dist = Number.MAX_VALUE;\r\n        line.forEach(function (p1, i) {\r\n            if (!isClosed && i === line.length - 1) {\r\n                return;\r\n            }\r\n            var p2 = line[(i + 1) % line.length];\r\n            var proj = exports.Util._getProjectionToSegment(p1.x, p1.y, p2.x, p2.y, pt.x, pt.y);\r\n            var px = proj[0], py = proj[1], pdist = proj[2];\r\n            if (pdist < dist) {\r\n                pc.x = px;\r\n                pc.y = py;\r\n                dist = pdist;\r\n            }\r\n        });\r\n        return pc;\r\n    },\r\n    _prepareArrayForTween: function (startArray, endArray, isClosed) {\r\n        var n, start = [], end = [];\r\n        if (startArray.length > endArray.length) {\r\n            var temp = endArray;\r\n            endArray = startArray;\r\n            startArray = temp;\r\n        }\r\n        for (n = 0; n < startArray.length; n += 2) {\r\n            start.push({\r\n                x: startArray[n],\r\n                y: startArray[n + 1],\r\n            });\r\n        }\r\n        for (n = 0; n < endArray.length; n += 2) {\r\n            end.push({\r\n                x: endArray[n],\r\n                y: endArray[n + 1],\r\n            });\r\n        }\r\n        var newStart = [];\r\n        end.forEach(function (point) {\r\n            var pr = exports.Util._getProjectionToLine(point, start, isClosed);\r\n            newStart.push(pr.x);\r\n            newStart.push(pr.y);\r\n        });\r\n        return newStart;\r\n    },\r\n    _prepareToStringify: function (obj) {\r\n        var desc;\r\n        obj.visitedByCircularReferenceRemoval = true;\r\n        for (var key in obj) {\r\n            if (!(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')) {\r\n                continue;\r\n            }\r\n            desc = Object.getOwnPropertyDescriptor(obj, key);\r\n            if (obj[key].visitedByCircularReferenceRemoval ||\r\n                exports.Util._isElement(obj[key])) {\r\n                if (desc.configurable) {\r\n                    delete obj[key];\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n            else if (exports.Util._prepareToStringify(obj[key]) === null) {\r\n                if (desc.configurable) {\r\n                    delete obj[key];\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        delete obj.visitedByCircularReferenceRemoval;\r\n        return obj;\r\n    },\r\n    _assign: function (target, source) {\r\n        for (var key in source) {\r\n            target[key] = source[key];\r\n        }\r\n        return target;\r\n    },\r\n    _getFirstPointerId: function (evt) {\r\n        if (!evt.touches) {\r\n            return 999;\r\n        }\r\n        else {\r\n            return evt.changedTouches[0].identifier;\r\n        }\r\n    },\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getComponentValidator = exports.getBooleanValidator = exports.getNumberArrayValidator = exports.getFunctionValidator = exports.getStringOrGradientValidator = exports.getStringValidator = exports.getNumberOrAutoValidator = exports.getNumberOrArrayOfNumbersValidator = exports.getNumberValidator = exports.alphaComponent = exports.RGBComponent = void 0;\r\nvar Global_1 = require(\"./Global\");\r\nvar Util_1 = require(\"./Util\");\r\nfunction _formatValue(val) {\r\n    if (Util_1.Util._isString(val)) {\r\n        return '\"' + val + '\"';\r\n    }\r\n    if (Object.prototype.toString.call(val) === '[object Number]') {\r\n        return val;\r\n    }\r\n    if (Util_1.Util._isBoolean(val)) {\r\n        return val;\r\n    }\r\n    return Object.prototype.toString.call(val);\r\n}\r\nfunction RGBComponent(val) {\r\n    if (val > 255) {\r\n        return 255;\r\n    }\r\n    else if (val < 0) {\r\n        return 0;\r\n    }\r\n    return Math.round(val);\r\n}\r\nexports.RGBComponent = RGBComponent;\r\nfunction alphaComponent(val) {\r\n    if (val > 1) {\r\n        return 1;\r\n    }\r\n    else if (val < 0.0001) {\r\n        return 0.0001;\r\n    }\r\n    return val;\r\n}\r\nexports.alphaComponent = alphaComponent;\r\nfunction getNumberValidator() {\r\n    if (Global_1.Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            if (!Util_1.Util._isNumber(val)) {\r\n                Util_1.Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a number.');\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nexports.getNumberValidator = getNumberValidator;\r\nfunction getNumberOrArrayOfNumbersValidator(noOfElements) {\r\n    if (Global_1.Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            var isNumber = Util_1.Util._isNumber(val);\r\n            var isValidArray = Util_1.Util._isArray(val) && val.length == noOfElements;\r\n            if (!isNumber && !isValidArray) {\r\n                Util_1.Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a number or Array<number>(' + noOfElements + ')');\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nexports.getNumberOrArrayOfNumbersValidator = getNumberOrArrayOfNumbersValidator;\r\nfunction getNumberOrAutoValidator() {\r\n    if (Global_1.Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            var isNumber = Util_1.Util._isNumber(val);\r\n            var isAuto = val === 'auto';\r\n            if (!(isNumber || isAuto)) {\r\n                Util_1.Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a number or \"auto\".');\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nexports.getNumberOrAutoValidator = getNumberOrAutoValidator;\r\nfunction getStringValidator() {\r\n    if (Global_1.Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            if (!Util_1.Util._isString(val)) {\r\n                Util_1.Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a string.');\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nexports.getStringValidator = getStringValidator;\r\nfunction getStringOrGradientValidator() {\r\n    if (Global_1.Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            var isString = Util_1.Util._isString(val);\r\n            var isGradient = Object.prototype.toString.call(val) === '[object CanvasGradient]';\r\n            if (!(isString || isGradient)) {\r\n                Util_1.Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a string or a native gradient.');\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nexports.getStringOrGradientValidator = getStringOrGradientValidator;\r\nfunction getFunctionValidator() {\r\n    if (Global_1.Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            if (!Util_1.Util._isFunction(val)) {\r\n                Util_1.Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a function.');\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nexports.getFunctionValidator = getFunctionValidator;\r\nfunction getNumberArrayValidator() {\r\n    if (Global_1.Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            if (!Util_1.Util._isArray(val)) {\r\n                Util_1.Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a array of numbers.');\r\n            }\r\n            else {\r\n                val.forEach(function (item) {\r\n                    if (!Util_1.Util._isNumber(item)) {\r\n                        Util_1.Util.warn('\"' +\r\n                            attr +\r\n                            '\" attribute has non numeric element ' +\r\n                            item +\r\n                            '. Make sure that all elements are numbers.');\r\n                    }\r\n                });\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nexports.getNumberArrayValidator = getNumberArrayValidator;\r\nfunction getBooleanValidator() {\r\n    if (Global_1.Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            var isBool = val === true || val === false;\r\n            if (!isBool) {\r\n                Util_1.Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a boolean.');\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nexports.getBooleanValidator = getBooleanValidator;\r\nfunction getComponentValidator(components) {\r\n    if (Global_1.Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            if (!Util_1.Util.isObject(val)) {\r\n                Util_1.Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be an object with properties ' +\r\n                    components);\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nexports.getComponentValidator = getComponentValidator;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Factory = void 0;\r\nvar Util_1 = require(\"./Util\");\r\nvar Validators_1 = require(\"./Validators\");\r\nvar GET = 'get', SET = 'set';\r\nexports.Factory = {\r\n    addGetterSetter: function (constructor, attr, def, validator, after) {\r\n        exports.Factory.addGetter(constructor, attr, def);\r\n        exports.Factory.addSetter(constructor, attr, validator, after);\r\n        exports.Factory.addOverloadedGetterSetter(constructor, attr);\r\n    },\r\n    addGetter: function (constructor, attr, def) {\r\n        var method = GET + Util_1.Util._capitalize(attr);\r\n        constructor.prototype[method] =\r\n            constructor.prototype[method] ||\r\n                function () {\r\n                    var val = this.attrs[attr];\r\n                    return val === undefined ? def : val;\r\n                };\r\n    },\r\n    addSetter: function (constructor, attr, validator, after) {\r\n        var method = SET + Util_1.Util._capitalize(attr);\r\n        if (!constructor.prototype[method]) {\r\n            exports.Factory.overWriteSetter(constructor, attr, validator, after);\r\n        }\r\n    },\r\n    overWriteSetter: function (constructor, attr, validator, after) {\r\n        var method = SET + Util_1.Util._capitalize(attr);\r\n        constructor.prototype[method] = function (val) {\r\n            if (validator && val !== undefined && val !== null) {\r\n                val = validator.call(this, val, attr);\r\n            }\r\n            this._setAttr(attr, val);\r\n            if (after) {\r\n                after.call(this);\r\n            }\r\n            return this;\r\n        };\r\n    },\r\n    addComponentsGetterSetter: function (constructor, attr, components, validator, after) {\r\n        var len = components.length, capitalize = Util_1.Util._capitalize, getter = GET + capitalize(attr), setter = SET + capitalize(attr), n, component;\r\n        constructor.prototype[getter] = function () {\r\n            var ret = {};\r\n            for (n = 0; n < len; n++) {\r\n                component = components[n];\r\n                ret[component] = this.getAttr(attr + capitalize(component));\r\n            }\r\n            return ret;\r\n        };\r\n        var basicValidator = Validators_1.getComponentValidator(components);\r\n        constructor.prototype[setter] = function (val) {\r\n            var oldVal = this.attrs[attr], key;\r\n            if (validator) {\r\n                val = validator.call(this, val);\r\n            }\r\n            if (basicValidator) {\r\n                basicValidator.call(this, val, attr);\r\n            }\r\n            for (key in val) {\r\n                if (!val.hasOwnProperty(key)) {\r\n                    continue;\r\n                }\r\n                this._setAttr(attr + capitalize(key), val[key]);\r\n            }\r\n            this._fireChangeEvent(attr, oldVal, val);\r\n            if (after) {\r\n                after.call(this);\r\n            }\r\n            return this;\r\n        };\r\n        exports.Factory.addOverloadedGetterSetter(constructor, attr);\r\n    },\r\n    addOverloadedGetterSetter: function (constructor, attr) {\r\n        var capitalizedAttr = Util_1.Util._capitalize(attr), setter = SET + capitalizedAttr, getter = GET + capitalizedAttr;\r\n        constructor.prototype[attr] = function () {\r\n            if (arguments.length) {\r\n                this[setter](arguments[0]);\r\n                return this;\r\n            }\r\n            return this[getter]();\r\n        };\r\n    },\r\n    addDeprecatedGetterSetter: function (constructor, attr, def, validator) {\r\n        Util_1.Util.error('Adding deprecated ' + attr);\r\n        var method = GET + Util_1.Util._capitalize(attr);\r\n        var message = attr +\r\n            ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\r\n        constructor.prototype[method] = function () {\r\n            Util_1.Util.error(message);\r\n            var val = this.attrs[attr];\r\n            return val === undefined ? def : val;\r\n        };\r\n        exports.Factory.addSetter(constructor, attr, validator, function () {\r\n            Util_1.Util.error(message);\r\n        });\r\n        exports.Factory.addOverloadedGetterSetter(constructor, attr);\r\n    },\r\n    backCompat: function (constructor, methods) {\r\n        Util_1.Util.each(methods, function (oldMethodName, newMethodName) {\r\n            var method = constructor.prototype[newMethodName];\r\n            var oldGetter = GET + Util_1.Util._capitalize(oldMethodName);\r\n            var oldSetter = SET + Util_1.Util._capitalize(oldMethodName);\r\n            function deprecated() {\r\n                method.apply(this, arguments);\r\n                Util_1.Util.error('\"' +\r\n                    oldMethodName +\r\n                    '\" method is deprecated and will be removed soon. Use \"\"' +\r\n                    newMethodName +\r\n                    '\" instead.');\r\n            }\r\n            constructor.prototype[oldMethodName] = deprecated;\r\n            constructor.prototype[oldGetter] = deprecated;\r\n            constructor.prototype[oldSetter] = deprecated;\r\n        });\r\n    },\r\n    afterSetFilter: function () {\r\n        this._filterUpToDate = false;\r\n    },\r\n};\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HitContext = exports.SceneContext = exports.Context = void 0;\r\nvar Util_1 = require(\"./Util\");\r\nvar Global_1 = require(\"./Global\");\r\nvar COMMA = ',', OPEN_PAREN = '(', CLOSE_PAREN = ')', OPEN_PAREN_BRACKET = '([', CLOSE_BRACKET_PAREN = '])', SEMICOLON = ';', DOUBLE_PAREN = '()', EQUALS = '=', CONTEXT_METHODS = [\r\n    'arc',\r\n    'arcTo',\r\n    'beginPath',\r\n    'bezierCurveTo',\r\n    'clearRect',\r\n    'clip',\r\n    'closePath',\r\n    'createLinearGradient',\r\n    'createPattern',\r\n    'createRadialGradient',\r\n    'drawImage',\r\n    'ellipse',\r\n    'fill',\r\n    'fillText',\r\n    'getImageData',\r\n    'createImageData',\r\n    'lineTo',\r\n    'moveTo',\r\n    'putImageData',\r\n    'quadraticCurveTo',\r\n    'rect',\r\n    'restore',\r\n    'rotate',\r\n    'save',\r\n    'scale',\r\n    'setLineDash',\r\n    'setTransform',\r\n    'stroke',\r\n    'strokeText',\r\n    'transform',\r\n    'translate',\r\n];\r\nvar CONTEXT_PROPERTIES = [\r\n    'fillStyle',\r\n    'strokeStyle',\r\n    'shadowColor',\r\n    'shadowBlur',\r\n    'shadowOffsetX',\r\n    'shadowOffsetY',\r\n    'lineCap',\r\n    'lineDashOffset',\r\n    'lineJoin',\r\n    'lineWidth',\r\n    'miterLimit',\r\n    'font',\r\n    'textAlign',\r\n    'textBaseline',\r\n    'globalAlpha',\r\n    'globalCompositeOperation',\r\n    'imageSmoothingEnabled',\r\n];\r\nvar traceArrMax = 100;\r\nvar Context = (function () {\r\n    function Context(canvas) {\r\n        this.canvas = canvas;\r\n        this._context = canvas._canvas.getContext('2d');\r\n        if (Global_1.Konva.enableTrace) {\r\n            this.traceArr = [];\r\n            this._enableTrace();\r\n        }\r\n    }\r\n    Context.prototype.fillShape = function (shape) {\r\n        if (shape.fillEnabled()) {\r\n            this._fill(shape);\r\n        }\r\n    };\r\n    Context.prototype._fill = function (shape) {\r\n    };\r\n    Context.prototype.strokeShape = function (shape) {\r\n        if (shape.hasStroke()) {\r\n            this._stroke(shape);\r\n        }\r\n    };\r\n    Context.prototype._stroke = function (shape) {\r\n    };\r\n    Context.prototype.fillStrokeShape = function (shape) {\r\n        if (shape.attrs.fillAfterStrokeEnabled) {\r\n            this.strokeShape(shape);\r\n            this.fillShape(shape);\r\n        }\r\n        else {\r\n            this.fillShape(shape);\r\n            this.strokeShape(shape);\r\n        }\r\n    };\r\n    Context.prototype.getTrace = function (relaxed) {\r\n        var traceArr = this.traceArr, len = traceArr.length, str = '', n, trace, method, args;\r\n        for (n = 0; n < len; n++) {\r\n            trace = traceArr[n];\r\n            method = trace.method;\r\n            if (method) {\r\n                args = trace.args;\r\n                str += method;\r\n                if (relaxed) {\r\n                    str += DOUBLE_PAREN;\r\n                }\r\n                else {\r\n                    if (Util_1.Util._isArray(args[0])) {\r\n                        str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\r\n                    }\r\n                    else {\r\n                        str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                str += trace.property;\r\n                if (!relaxed) {\r\n                    str += EQUALS + trace.val;\r\n                }\r\n            }\r\n            str += SEMICOLON;\r\n        }\r\n        return str;\r\n    };\r\n    Context.prototype.clearTrace = function () {\r\n        this.traceArr = [];\r\n    };\r\n    Context.prototype._trace = function (str) {\r\n        var traceArr = this.traceArr, len;\r\n        traceArr.push(str);\r\n        len = traceArr.length;\r\n        if (len >= traceArrMax) {\r\n            traceArr.shift();\r\n        }\r\n    };\r\n    Context.prototype.reset = function () {\r\n        var pixelRatio = this.getCanvas().getPixelRatio();\r\n        this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\r\n    };\r\n    Context.prototype.getCanvas = function () {\r\n        return this.canvas;\r\n    };\r\n    Context.prototype.clear = function (bounds) {\r\n        var canvas = this.getCanvas();\r\n        if (bounds) {\r\n            this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\r\n        }\r\n        else {\r\n            this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\r\n        }\r\n    };\r\n    Context.prototype._applyLineCap = function (shape) {\r\n        var lineCap = shape.getLineCap();\r\n        if (lineCap) {\r\n            this.setAttr('lineCap', lineCap);\r\n        }\r\n    };\r\n    Context.prototype._applyOpacity = function (shape) {\r\n        var absOpacity = shape.getAbsoluteOpacity();\r\n        if (absOpacity !== 1) {\r\n            this.setAttr('globalAlpha', absOpacity);\r\n        }\r\n    };\r\n    Context.prototype._applyLineJoin = function (shape) {\r\n        var lineJoin = shape.attrs.lineJoin;\r\n        if (lineJoin) {\r\n            this.setAttr('lineJoin', lineJoin);\r\n        }\r\n    };\r\n    Context.prototype.setAttr = function (attr, val) {\r\n        this._context[attr] = val;\r\n    };\r\n    Context.prototype.arc = function (a0, a1, a2, a3, a4, a5) {\r\n        this._context.arc(a0, a1, a2, a3, a4, a5);\r\n    };\r\n    Context.prototype.arcTo = function (a0, a1, a2, a3, a4) {\r\n        this._context.arcTo(a0, a1, a2, a3, a4);\r\n    };\r\n    Context.prototype.beginPath = function () {\r\n        this._context.beginPath();\r\n    };\r\n    Context.prototype.bezierCurveTo = function (a0, a1, a2, a3, a4, a5) {\r\n        this._context.bezierCurveTo(a0, a1, a2, a3, a4, a5);\r\n    };\r\n    Context.prototype.clearRect = function (a0, a1, a2, a3) {\r\n        this._context.clearRect(a0, a1, a2, a3);\r\n    };\r\n    Context.prototype.clip = function () {\r\n        this._context.clip();\r\n    };\r\n    Context.prototype.closePath = function () {\r\n        this._context.closePath();\r\n    };\r\n    Context.prototype.createImageData = function (a0, a1) {\r\n        var a = arguments;\r\n        if (a.length === 2) {\r\n            return this._context.createImageData(a0, a1);\r\n        }\r\n        else if (a.length === 1) {\r\n            return this._context.createImageData(a0);\r\n        }\r\n    };\r\n    Context.prototype.createLinearGradient = function (a0, a1, a2, a3) {\r\n        return this._context.createLinearGradient(a0, a1, a2, a3);\r\n    };\r\n    Context.prototype.createPattern = function (a0, a1) {\r\n        return this._context.createPattern(a0, a1);\r\n    };\r\n    Context.prototype.createRadialGradient = function (a0, a1, a2, a3, a4, a5) {\r\n        return this._context.createRadialGradient(a0, a1, a2, a3, a4, a5);\r\n    };\r\n    Context.prototype.drawImage = function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\r\n        var a = arguments, _context = this._context;\r\n        if (a.length === 3) {\r\n            _context.drawImage(a0, a1, a2);\r\n        }\r\n        else if (a.length === 5) {\r\n            _context.drawImage(a0, a1, a2, a3, a4);\r\n        }\r\n        else if (a.length === 9) {\r\n            _context.drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8);\r\n        }\r\n    };\r\n    Context.prototype.ellipse = function (a0, a1, a2, a3, a4, a5, a6, a7) {\r\n        this._context.ellipse(a0, a1, a2, a3, a4, a5, a6, a7);\r\n    };\r\n    Context.prototype.isPointInPath = function (x, y) {\r\n        return this._context.isPointInPath(x, y);\r\n    };\r\n    Context.prototype.fill = function () {\r\n        this._context.fill();\r\n    };\r\n    Context.prototype.fillRect = function (x, y, width, height) {\r\n        this._context.fillRect(x, y, width, height);\r\n    };\r\n    Context.prototype.strokeRect = function (x, y, width, height) {\r\n        this._context.strokeRect(x, y, width, height);\r\n    };\r\n    Context.prototype.fillText = function (a0, a1, a2) {\r\n        this._context.fillText(a0, a1, a2);\r\n    };\r\n    Context.prototype.measureText = function (text) {\r\n        return this._context.measureText(text);\r\n    };\r\n    Context.prototype.getImageData = function (a0, a1, a2, a3) {\r\n        return this._context.getImageData(a0, a1, a2, a3);\r\n    };\r\n    Context.prototype.lineTo = function (a0, a1) {\r\n        this._context.lineTo(a0, a1);\r\n    };\r\n    Context.prototype.moveTo = function (a0, a1) {\r\n        this._context.moveTo(a0, a1);\r\n    };\r\n    Context.prototype.rect = function (a0, a1, a2, a3) {\r\n        this._context.rect(a0, a1, a2, a3);\r\n    };\r\n    Context.prototype.putImageData = function (a0, a1, a2) {\r\n        this._context.putImageData(a0, a1, a2);\r\n    };\r\n    Context.prototype.quadraticCurveTo = function (a0, a1, a2, a3) {\r\n        this._context.quadraticCurveTo(a0, a1, a2, a3);\r\n    };\r\n    Context.prototype.restore = function () {\r\n        this._context.restore();\r\n    };\r\n    Context.prototype.rotate = function (a0) {\r\n        this._context.rotate(a0);\r\n    };\r\n    Context.prototype.save = function () {\r\n        this._context.save();\r\n    };\r\n    Context.prototype.scale = function (a0, a1) {\r\n        this._context.scale(a0, a1);\r\n    };\r\n    Context.prototype.setLineDash = function (a0) {\r\n        if (this._context.setLineDash) {\r\n            this._context.setLineDash(a0);\r\n        }\r\n        else if ('mozDash' in this._context) {\r\n            this._context['mozDash'] = a0;\r\n        }\r\n        else if ('webkitLineDash' in this._context) {\r\n            this._context['webkitLineDash'] = a0;\r\n        }\r\n    };\r\n    Context.prototype.getLineDash = function () {\r\n        return this._context.getLineDash();\r\n    };\r\n    Context.prototype.setTransform = function (a0, a1, a2, a3, a4, a5) {\r\n        this._context.setTransform(a0, a1, a2, a3, a4, a5);\r\n    };\r\n    Context.prototype.stroke = function () {\r\n        this._context.stroke();\r\n    };\r\n    Context.prototype.strokeText = function (a0, a1, a2, a3) {\r\n        this._context.strokeText(a0, a1, a2, a3);\r\n    };\r\n    Context.prototype.transform = function (a0, a1, a2, a3, a4, a5) {\r\n        this._context.transform(a0, a1, a2, a3, a4, a5);\r\n    };\r\n    Context.prototype.translate = function (a0, a1) {\r\n        this._context.translate(a0, a1);\r\n    };\r\n    Context.prototype._enableTrace = function () {\r\n        var that = this, len = CONTEXT_METHODS.length, _simplifyArray = Util_1.Util._simplifyArray, origSetter = this.setAttr, n, args;\r\n        var func = function (methodName) {\r\n            var origMethod = that[methodName], ret;\r\n            that[methodName] = function () {\r\n                args = _simplifyArray(Array.prototype.slice.call(arguments, 0));\r\n                ret = origMethod.apply(that, arguments);\r\n                that._trace({\r\n                    method: methodName,\r\n                    args: args,\r\n                });\r\n                return ret;\r\n            };\r\n        };\r\n        for (n = 0; n < len; n++) {\r\n            func(CONTEXT_METHODS[n]);\r\n        }\r\n        that.setAttr = function () {\r\n            origSetter.apply(that, arguments);\r\n            var prop = arguments[0];\r\n            var val = arguments[1];\r\n            if (prop === 'shadowOffsetX' ||\r\n                prop === 'shadowOffsetY' ||\r\n                prop === 'shadowBlur') {\r\n                val = val / this.canvas.getPixelRatio();\r\n            }\r\n            that._trace({\r\n                property: prop,\r\n                val: val,\r\n            });\r\n        };\r\n    };\r\n    Context.prototype._applyGlobalCompositeOperation = function (node) {\r\n        var globalCompositeOperation = node.getGlobalCompositeOperation();\r\n        if (globalCompositeOperation !== 'source-over') {\r\n            this.setAttr('globalCompositeOperation', globalCompositeOperation);\r\n        }\r\n    };\r\n    return Context;\r\n}());\r\nexports.Context = Context;\r\nCONTEXT_PROPERTIES.forEach(function (prop) {\r\n    Object.defineProperty(Context.prototype, prop, {\r\n        get: function () {\r\n            return this._context[prop];\r\n        },\r\n        set: function (val) {\r\n            this._context[prop] = val;\r\n        },\r\n    });\r\n});\r\nvar SceneContext = (function (_super) {\r\n    __extends(SceneContext, _super);\r\n    function SceneContext() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SceneContext.prototype._fillColor = function (shape) {\r\n        var fill = shape.fill();\r\n        this.setAttr('fillStyle', fill);\r\n        shape._fillFunc(this);\r\n    };\r\n    SceneContext.prototype._fillPattern = function (shape) {\r\n        var fillPatternX = shape.getFillPatternX(), fillPatternY = shape.getFillPatternY(), fillPatternRotation = Global_1.Konva.getAngle(shape.getFillPatternRotation()), fillPatternOffsetX = shape.getFillPatternOffsetX(), fillPatternOffsetY = shape.getFillPatternOffsetY(), fillPatternScaleX = shape.getFillPatternScaleX(), fillPatternScaleY = shape.getFillPatternScaleY();\r\n        if (fillPatternX || fillPatternY) {\r\n            this.translate(fillPatternX || 0, fillPatternY || 0);\r\n        }\r\n        if (fillPatternRotation) {\r\n            this.rotate(fillPatternRotation);\r\n        }\r\n        if (fillPatternScaleX || fillPatternScaleY) {\r\n        }\r\n        if (fillPatternOffsetX || fillPatternOffsetY) {\r\n            this.translate(-1 * fillPatternOffsetX, -1 * fillPatternOffsetY);\r\n        }\r\n        this.setAttr('fillStyle', shape._getFillPattern());\r\n        shape._fillFunc(this);\r\n    };\r\n    SceneContext.prototype._fillLinearGradient = function (shape) {\r\n        var grd = shape._getLinearGradient();\r\n        if (grd) {\r\n            this.setAttr('fillStyle', grd);\r\n            shape._fillFunc(this);\r\n        }\r\n    };\r\n    SceneContext.prototype._fillRadialGradient = function (shape) {\r\n        var grd = shape._getRadialGradient();\r\n        if (grd) {\r\n            this.setAttr('fillStyle', grd);\r\n            shape._fillFunc(this);\r\n        }\r\n    };\r\n    SceneContext.prototype._fill = function (shape) {\r\n        var hasColor = shape.fill(), fillPriority = shape.getFillPriority();\r\n        if (hasColor && fillPriority === 'color') {\r\n            this._fillColor(shape);\r\n            return;\r\n        }\r\n        var hasPattern = shape.getFillPatternImage();\r\n        if (hasPattern && fillPriority === 'pattern') {\r\n            this._fillPattern(shape);\r\n            return;\r\n        }\r\n        var hasLinearGradient = shape.getFillLinearGradientColorStops();\r\n        if (hasLinearGradient && fillPriority === 'linear-gradient') {\r\n            this._fillLinearGradient(shape);\r\n            return;\r\n        }\r\n        var hasRadialGradient = shape.getFillRadialGradientColorStops();\r\n        if (hasRadialGradient && fillPriority === 'radial-gradient') {\r\n            this._fillRadialGradient(shape);\r\n            return;\r\n        }\r\n        if (hasColor) {\r\n            this._fillColor(shape);\r\n        }\r\n        else if (hasPattern) {\r\n            this._fillPattern(shape);\r\n        }\r\n        else if (hasLinearGradient) {\r\n            this._fillLinearGradient(shape);\r\n        }\r\n        else if (hasRadialGradient) {\r\n            this._fillRadialGradient(shape);\r\n        }\r\n    };\r\n    SceneContext.prototype._strokeLinearGradient = function (shape) {\r\n        var start = shape.getStrokeLinearGradientStartPoint(), end = shape.getStrokeLinearGradientEndPoint(), colorStops = shape.getStrokeLinearGradientColorStops(), grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\r\n        if (colorStops) {\r\n            for (var n = 0; n < colorStops.length; n += 2) {\r\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\r\n            }\r\n            this.setAttr('strokeStyle', grd);\r\n        }\r\n    };\r\n    SceneContext.prototype._stroke = function (shape) {\r\n        var dash = shape.dash(), strokeScaleEnabled = shape.getStrokeScaleEnabled();\r\n        if (shape.hasStroke()) {\r\n            if (!strokeScaleEnabled) {\r\n                this.save();\r\n                var pixelRatio = this.getCanvas().getPixelRatio();\r\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n            }\r\n            this._applyLineCap(shape);\r\n            if (dash && shape.dashEnabled()) {\r\n                this.setLineDash(dash);\r\n                this.setAttr('lineDashOffset', shape.dashOffset());\r\n            }\r\n            this.setAttr('lineWidth', shape.strokeWidth());\r\n            if (!shape.getShadowForStrokeEnabled()) {\r\n                this.setAttr('shadowColor', 'rgba(0,0,0,0)');\r\n            }\r\n            var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\r\n            if (hasLinearGradient) {\r\n                this._strokeLinearGradient(shape);\r\n            }\r\n            else {\r\n                this.setAttr('strokeStyle', shape.stroke());\r\n            }\r\n            shape._strokeFunc(this);\r\n            if (!strokeScaleEnabled) {\r\n                this.restore();\r\n            }\r\n        }\r\n    };\r\n    SceneContext.prototype._applyShadow = function (shape) {\r\n        var util = Util_1.Util, color = util.get(shape.getShadowRGBA(), 'black'), blur = util.get(shape.getShadowBlur(), 5), offset = util.get(shape.getShadowOffset(), {\r\n            x: 0,\r\n            y: 0,\r\n        }), scale = shape.getAbsoluteScale(), ratio = this.canvas.getPixelRatio(), scaleX = scale.x * ratio, scaleY = scale.y * ratio;\r\n        this.setAttr('shadowColor', color);\r\n        this.setAttr('shadowBlur', blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\r\n        this.setAttr('shadowOffsetX', offset.x * scaleX);\r\n        this.setAttr('shadowOffsetY', offset.y * scaleY);\r\n    };\r\n    return SceneContext;\r\n}(Context));\r\nexports.SceneContext = SceneContext;\r\nvar HitContext = (function (_super) {\r\n    __extends(HitContext, _super);\r\n    function HitContext() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    HitContext.prototype._fill = function (shape) {\r\n        this.save();\r\n        this.setAttr('fillStyle', shape.colorKey);\r\n        shape._fillFuncHit(this);\r\n        this.restore();\r\n    };\r\n    HitContext.prototype.strokeShape = function (shape) {\r\n        if (shape.hasHitStroke()) {\r\n            this._stroke(shape);\r\n        }\r\n    };\r\n    HitContext.prototype._stroke = function (shape) {\r\n        if (shape.hasHitStroke()) {\r\n            var strokeScaleEnabled = shape.getStrokeScaleEnabled();\r\n            if (!strokeScaleEnabled) {\r\n                this.save();\r\n                var pixelRatio = this.getCanvas().getPixelRatio();\r\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n            }\r\n            this._applyLineCap(shape);\r\n            var hitStrokeWidth = shape.hitStrokeWidth();\r\n            var strokeWidth = hitStrokeWidth === 'auto' ? shape.strokeWidth() : hitStrokeWidth;\r\n            this.setAttr('lineWidth', strokeWidth);\r\n            this.setAttr('strokeStyle', shape.colorKey);\r\n            shape._strokeFuncHit(this);\r\n            if (!strokeScaleEnabled) {\r\n                this.restore();\r\n            }\r\n        }\r\n    };\r\n    return HitContext;\r\n}(Context));\r\nexports.HitContext = HitContext;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HitCanvas = exports.SceneCanvas = exports.Canvas = void 0;\r\nvar Util_1 = require(\"./Util\");\r\nvar Context_1 = require(\"./Context\");\r\nvar Global_1 = require(\"./Global\");\r\nvar Factory_1 = require(\"./Factory\");\r\nvar Validators_1 = require(\"./Validators\");\r\nvar _pixelRatio;\r\nfunction getDevicePixelRatio() {\r\n    if (_pixelRatio) {\r\n        return _pixelRatio;\r\n    }\r\n    var canvas = Util_1.Util.createCanvasElement();\r\n    var context = canvas.getContext('2d');\r\n    _pixelRatio = (function () {\r\n        var devicePixelRatio = Global_1.Konva._global.devicePixelRatio || 1, backingStoreRatio = context.webkitBackingStorePixelRatio ||\r\n            context.mozBackingStorePixelRatio ||\r\n            context.msBackingStorePixelRatio ||\r\n            context.oBackingStorePixelRatio ||\r\n            context.backingStorePixelRatio ||\r\n            1;\r\n        return devicePixelRatio / backingStoreRatio;\r\n    })();\r\n    return _pixelRatio;\r\n}\r\nvar Canvas = (function () {\r\n    function Canvas(config) {\r\n        this.pixelRatio = 1;\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.isCache = false;\r\n        var conf = config || {};\r\n        var pixelRatio = conf.pixelRatio || Global_1.Konva.pixelRatio || getDevicePixelRatio();\r\n        this.pixelRatio = pixelRatio;\r\n        this._canvas = Util_1.Util.createCanvasElement();\r\n        this._canvas.style.padding = '0';\r\n        this._canvas.style.margin = '0';\r\n        this._canvas.style.border = '0';\r\n        this._canvas.style.background = 'transparent';\r\n        this._canvas.style.position = 'absolute';\r\n        this._canvas.style.top = '0';\r\n        this._canvas.style.left = '0';\r\n    }\r\n    Canvas.prototype.getContext = function () {\r\n        return this.context;\r\n    };\r\n    Canvas.prototype.getPixelRatio = function () {\r\n        return this.pixelRatio;\r\n    };\r\n    Canvas.prototype.setPixelRatio = function (pixelRatio) {\r\n        var previousRatio = this.pixelRatio;\r\n        this.pixelRatio = pixelRatio;\r\n        this.setSize(this.getWidth() / previousRatio, this.getHeight() / previousRatio);\r\n    };\r\n    Canvas.prototype.setWidth = function (width) {\r\n        this.width = this._canvas.width = width * this.pixelRatio;\r\n        this._canvas.style.width = width + 'px';\r\n        var pixelRatio = this.pixelRatio, _context = this.getContext()._context;\r\n        _context.scale(pixelRatio, pixelRatio);\r\n    };\r\n    Canvas.prototype.setHeight = function (height) {\r\n        this.height = this._canvas.height = height * this.pixelRatio;\r\n        this._canvas.style.height = height + 'px';\r\n        var pixelRatio = this.pixelRatio, _context = this.getContext()._context;\r\n        _context.scale(pixelRatio, pixelRatio);\r\n    };\r\n    Canvas.prototype.getWidth = function () {\r\n        return this.width;\r\n    };\r\n    Canvas.prototype.getHeight = function () {\r\n        return this.height;\r\n    };\r\n    Canvas.prototype.setSize = function (width, height) {\r\n        this.setWidth(width || 0);\r\n        this.setHeight(height || 0);\r\n    };\r\n    Canvas.prototype.toDataURL = function (mimeType, quality) {\r\n        try {\r\n            return this._canvas.toDataURL(mimeType, quality);\r\n        }\r\n        catch (e) {\r\n            try {\r\n                return this._canvas.toDataURL();\r\n            }\r\n            catch (err) {\r\n                Util_1.Util.error('Unable to get data URL. ' +\r\n                    err.message +\r\n                    ' For more info read https://konvajs.org/docs/posts/Tainted_Canvas.html.');\r\n                return '';\r\n            }\r\n        }\r\n    };\r\n    return Canvas;\r\n}());\r\nexports.Canvas = Canvas;\r\nFactory_1.Factory.addGetterSetter(Canvas, 'pixelRatio', undefined, Validators_1.getNumberValidator());\r\nvar SceneCanvas = (function (_super) {\r\n    __extends(SceneCanvas, _super);\r\n    function SceneCanvas(config) {\r\n        if (config === void 0) { config = { width: 0, height: 0 }; }\r\n        var _this = _super.call(this, config) || this;\r\n        _this.context = new Context_1.SceneContext(_this);\r\n        _this.setSize(config.width, config.height);\r\n        return _this;\r\n    }\r\n    return SceneCanvas;\r\n}(Canvas));\r\nexports.SceneCanvas = SceneCanvas;\r\nvar HitCanvas = (function (_super) {\r\n    __extends(HitCanvas, _super);\r\n    function HitCanvas(config) {\r\n        if (config === void 0) { config = { width: 0, height: 0 }; }\r\n        var _this = _super.call(this, config) || this;\r\n        _this.hitCanvas = true;\r\n        _this.context = new Context_1.HitContext(_this);\r\n        _this.setSize(config.width, config.height);\r\n        return _this;\r\n    }\r\n    return HitCanvas;\r\n}(Canvas));\r\nexports.HitCanvas = HitCanvas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DD = void 0;\r\nvar Global_1 = require(\"./Global\");\r\nvar Util_1 = require(\"./Util\");\r\nexports.DD = {\r\n    get isDragging() {\r\n        var flag = false;\r\n        exports.DD._dragElements.forEach(function (elem) {\r\n            if (elem.dragStatus === 'dragging') {\r\n                flag = true;\r\n            }\r\n        });\r\n        return flag;\r\n    },\r\n    justDragged: false,\r\n    get node() {\r\n        var node;\r\n        exports.DD._dragElements.forEach(function (elem) {\r\n            node = elem.node;\r\n        });\r\n        return node;\r\n    },\r\n    _dragElements: new Map(),\r\n    _drag: function (evt) {\r\n        var nodesToFireEvents = [];\r\n        exports.DD._dragElements.forEach(function (elem, key) {\r\n            var node = elem.node;\r\n            var stage = node.getStage();\r\n            stage.setPointersPositions(evt);\r\n            if (elem.pointerId === undefined) {\r\n                elem.pointerId = Util_1.Util._getFirstPointerId(evt);\r\n            }\r\n            var pos = stage._changedPointerPositions.find(function (pos) { return pos.id === elem.pointerId; });\r\n            if (!pos) {\r\n                return;\r\n            }\r\n            if (elem.dragStatus !== 'dragging') {\r\n                var dragDistance = node.dragDistance();\r\n                var distance = Math.max(Math.abs(pos.x - elem.startPointerPos.x), Math.abs(pos.y - elem.startPointerPos.y));\r\n                if (distance < dragDistance) {\r\n                    return;\r\n                }\r\n                node.startDrag({ evt: evt });\r\n                if (!node.isDragging()) {\r\n                    return;\r\n                }\r\n            }\r\n            node._setDragPosition(evt, elem);\r\n            nodesToFireEvents.push(node);\r\n        });\r\n        nodesToFireEvents.forEach(function (node) {\r\n            node.fire('dragmove', {\r\n                type: 'dragmove',\r\n                target: node,\r\n                evt: evt,\r\n            }, true);\r\n        });\r\n    },\r\n    _endDragBefore: function (evt) {\r\n        exports.DD._dragElements.forEach(function (elem, key) {\r\n            var node = elem.node;\r\n            var stage = node.getStage();\r\n            if (evt) {\r\n                stage.setPointersPositions(evt);\r\n            }\r\n            var pos = stage._changedPointerPositions.find(function (pos) { return pos.id === elem.pointerId; });\r\n            if (!pos) {\r\n                return;\r\n            }\r\n            if (elem.dragStatus === 'dragging' || elem.dragStatus === 'stopped') {\r\n                exports.DD.justDragged = true;\r\n                Global_1.Konva.listenClickTap = false;\r\n                elem.dragStatus = 'stopped';\r\n            }\r\n            var drawNode = elem.node.getLayer() ||\r\n                (elem.node instanceof Global_1.Konva['Stage'] && elem.node);\r\n            if (drawNode) {\r\n                drawNode.batchDraw();\r\n            }\r\n        });\r\n    },\r\n    _endDragAfter: function (evt) {\r\n        exports.DD._dragElements.forEach(function (elem, key) {\r\n            if (elem.dragStatus === 'stopped') {\r\n                elem.node.fire('dragend', {\r\n                    type: 'dragend',\r\n                    target: elem.node,\r\n                    evt: evt,\r\n                }, true);\r\n            }\r\n            if (elem.dragStatus !== 'dragging') {\r\n                exports.DD._dragElements.delete(key);\r\n            }\r\n        });\r\n    },\r\n};\r\nif (Global_1.Konva.isBrowser) {\r\n    window.addEventListener('mouseup', exports.DD._endDragBefore, true);\r\n    window.addEventListener('touchend', exports.DD._endDragBefore, true);\r\n    window.addEventListener('mousemove', exports.DD._drag);\r\n    window.addEventListener('touchmove', exports.DD._drag);\r\n    window.addEventListener('mouseup', exports.DD._endDragAfter, false);\r\n    window.addEventListener('touchend', exports.DD._endDragAfter, false);\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Node = exports._removeName = exports._addName = exports._removeId = exports.names = exports.ids = void 0;\r\nvar Util_1 = require(\"./Util\");\r\nvar Factory_1 = require(\"./Factory\");\r\nvar Canvas_1 = require(\"./Canvas\");\r\nvar Global_1 = require(\"./Global\");\r\nvar DragAndDrop_1 = require(\"./DragAndDrop\");\r\nvar Validators_1 = require(\"./Validators\");\r\nexports.ids = {};\r\nexports.names = {};\r\nvar _addId = function (node, id) {\r\n    if (!id) {\r\n        return;\r\n    }\r\n    exports.ids[id] = node;\r\n};\r\nvar _removeId = function (id, node) {\r\n    if (!id) {\r\n        return;\r\n    }\r\n    if (exports.ids[id] !== node) {\r\n        return;\r\n    }\r\n    delete exports.ids[id];\r\n};\r\nexports._removeId = _removeId;\r\nvar _addName = function (node, name) {\r\n    if (name) {\r\n        if (!exports.names[name]) {\r\n            exports.names[name] = [];\r\n        }\r\n        exports.names[name].push(node);\r\n    }\r\n};\r\nexports._addName = _addName;\r\nvar _removeName = function (name, _id) {\r\n    if (!name) {\r\n        return;\r\n    }\r\n    var nodes = exports.names[name];\r\n    if (!nodes) {\r\n        return;\r\n    }\r\n    for (var n = 0; n < nodes.length; n++) {\r\n        var no = nodes[n];\r\n        if (no._id === _id) {\r\n            nodes.splice(n, 1);\r\n        }\r\n    }\r\n    if (nodes.length === 0) {\r\n        delete exports.names[name];\r\n    }\r\n};\r\nexports._removeName = _removeName;\r\nvar ABSOLUTE_OPACITY = 'absoluteOpacity', ALL_LISTENERS = 'allEventListeners', ABSOLUTE_TRANSFORM = 'absoluteTransform', ABSOLUTE_SCALE = 'absoluteScale', CANVAS = 'canvas', CHANGE = 'Change', CHILDREN = 'children', KONVA = 'konva', LISTENING = 'listening', MOUSEENTER = 'mouseenter', MOUSELEAVE = 'mouseleave', NAME = 'name', SET = 'set', SHAPE = 'Shape', SPACE = ' ', STAGE = 'stage', TRANSFORM = 'transform', UPPER_STAGE = 'Stage', VISIBLE = 'visible', TRANSFORM_CHANGE_STR = [\r\n    'xChange.konva',\r\n    'yChange.konva',\r\n    'scaleXChange.konva',\r\n    'scaleYChange.konva',\r\n    'skewXChange.konva',\r\n    'skewYChange.konva',\r\n    'rotationChange.konva',\r\n    'offsetXChange.konva',\r\n    'offsetYChange.konva',\r\n    'transformsEnabledChange.konva',\r\n].join(SPACE), SCALE_CHANGE_STR = ['scaleXChange.konva', 'scaleYChange.konva'].join(SPACE);\r\nvar emptyChildren = new Util_1.Collection();\r\nvar idCounter = 1;\r\nvar Node = (function () {\r\n    function Node(config) {\r\n        this._id = idCounter++;\r\n        this.eventListeners = {};\r\n        this.attrs = {};\r\n        this.index = 0;\r\n        this._allEventListeners = null;\r\n        this.parent = null;\r\n        this._cache = new Map();\r\n        this._attachedDepsListeners = new Map();\r\n        this._lastPos = null;\r\n        this._batchingTransformChange = false;\r\n        this._needClearTransformCache = false;\r\n        this._filterUpToDate = false;\r\n        this._isUnderCache = false;\r\n        this.children = emptyChildren;\r\n        this._dragEventId = null;\r\n        this._shouldFireChangeEvents = false;\r\n        this.setAttrs(config);\r\n        this._shouldFireChangeEvents = true;\r\n    }\r\n    Node.prototype.hasChildren = function () {\r\n        return false;\r\n    };\r\n    Node.prototype.getChildren = function () {\r\n        return emptyChildren;\r\n    };\r\n    Node.prototype._clearCache = function (attr) {\r\n        if ((attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM) &&\r\n            this._cache.get(attr)) {\r\n            this._cache.get(attr).dirty = true;\r\n        }\r\n        else if (attr) {\r\n            this._cache.delete(attr);\r\n        }\r\n        else {\r\n            this._cache.clear();\r\n        }\r\n    };\r\n    Node.prototype._getCache = function (attr, privateGetter) {\r\n        var cache = this._cache.get(attr);\r\n        var isTransform = attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM;\r\n        var invalid = cache === undefined || (isTransform && cache.dirty === true);\r\n        if (invalid) {\r\n            cache = privateGetter.call(this);\r\n            this._cache.set(attr, cache);\r\n        }\r\n        return cache;\r\n    };\r\n    Node.prototype._calculate = function (name, deps, getter) {\r\n        var _this = this;\r\n        if (!this._attachedDepsListeners.get(name)) {\r\n            var depsString = deps.map(function (dep) { return dep + 'Change.konva'; }).join(SPACE);\r\n            this.on(depsString, function () {\r\n                _this._clearCache(name);\r\n            });\r\n            this._attachedDepsListeners.set(name, true);\r\n        }\r\n        return this._getCache(name, getter);\r\n    };\r\n    Node.prototype._getCanvasCache = function () {\r\n        return this._cache.get(CANVAS);\r\n    };\r\n    Node.prototype._clearSelfAndDescendantCache = function (attr, forceEvent) {\r\n        this._clearCache(attr);\r\n        if (forceEvent && attr === ABSOLUTE_TRANSFORM) {\r\n            this.fire('_clearTransformCache');\r\n        }\r\n        if (this.isCached()) {\r\n            return;\r\n        }\r\n        if (this.children) {\r\n            this.children.each(function (node) {\r\n                node._clearSelfAndDescendantCache(attr, true);\r\n            });\r\n        }\r\n    };\r\n    Node.prototype.clearCache = function () {\r\n        this._cache.delete(CANVAS);\r\n        this._clearSelfAndDescendantCache();\r\n        return this;\r\n    };\r\n    Node.prototype.cache = function (config) {\r\n        var conf = config || {};\r\n        var rect = {};\r\n        if (conf.x === undefined ||\r\n            conf.y === undefined ||\r\n            conf.width === undefined ||\r\n            conf.height === undefined) {\r\n            rect = this.getClientRect({\r\n                skipTransform: true,\r\n                relativeTo: this.getParent(),\r\n            });\r\n        }\r\n        var width = Math.ceil(conf.width || rect.width), height = Math.ceil(conf.height || rect.height), pixelRatio = conf.pixelRatio, x = conf.x === undefined ? rect.x : conf.x, y = conf.y === undefined ? rect.y : conf.y, offset = conf.offset || 0, drawBorder = conf.drawBorder || false;\r\n        if (!width || !height) {\r\n            Util_1.Util.error('Can not cache the node. Width or height of the node equals 0. Caching is skipped.');\r\n            return;\r\n        }\r\n        width += offset * 2;\r\n        height += offset * 2;\r\n        x -= offset;\r\n        y -= offset;\r\n        var cachedSceneCanvas = new Canvas_1.SceneCanvas({\r\n            pixelRatio: pixelRatio,\r\n            width: width,\r\n            height: height,\r\n        }), cachedFilterCanvas = new Canvas_1.SceneCanvas({\r\n            pixelRatio: pixelRatio,\r\n            width: 0,\r\n            height: 0,\r\n        }), cachedHitCanvas = new Canvas_1.HitCanvas({\r\n            pixelRatio: 1,\r\n            width: width,\r\n            height: height,\r\n        }), sceneContext = cachedSceneCanvas.getContext(), hitContext = cachedHitCanvas.getContext();\r\n        cachedHitCanvas.isCache = true;\r\n        cachedSceneCanvas.isCache = true;\r\n        this._cache.delete('canvas');\r\n        this._filterUpToDate = false;\r\n        if (conf.imageSmoothingEnabled === false) {\r\n            cachedSceneCanvas.getContext()._context.imageSmoothingEnabled = false;\r\n            cachedFilterCanvas.getContext()._context.imageSmoothingEnabled = false;\r\n        }\r\n        sceneContext.save();\r\n        hitContext.save();\r\n        sceneContext.translate(-x, -y);\r\n        hitContext.translate(-x, -y);\r\n        this._isUnderCache = true;\r\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\r\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\r\n        this.drawScene(cachedSceneCanvas, this);\r\n        this.drawHit(cachedHitCanvas, this);\r\n        this._isUnderCache = false;\r\n        sceneContext.restore();\r\n        hitContext.restore();\r\n        if (drawBorder) {\r\n            sceneContext.save();\r\n            sceneContext.beginPath();\r\n            sceneContext.rect(0, 0, width, height);\r\n            sceneContext.closePath();\r\n            sceneContext.setAttr('strokeStyle', 'red');\r\n            sceneContext.setAttr('lineWidth', 5);\r\n            sceneContext.stroke();\r\n            sceneContext.restore();\r\n        }\r\n        this._cache.set(CANVAS, {\r\n            scene: cachedSceneCanvas,\r\n            filter: cachedFilterCanvas,\r\n            hit: cachedHitCanvas,\r\n            x: x,\r\n            y: y,\r\n        });\r\n        return this;\r\n    };\r\n    Node.prototype.isCached = function () {\r\n        return this._cache.has('canvas');\r\n    };\r\n    Node.prototype.getClientRect = function (config) {\r\n        throw new Error('abstract \"getClientRect\" method call');\r\n    };\r\n    Node.prototype._transformedRect = function (rect, top) {\r\n        var points = [\r\n            { x: rect.x, y: rect.y },\r\n            { x: rect.x + rect.width, y: rect.y },\r\n            { x: rect.x + rect.width, y: rect.y + rect.height },\r\n            { x: rect.x, y: rect.y + rect.height },\r\n        ];\r\n        var minX, minY, maxX, maxY;\r\n        var trans = this.getAbsoluteTransform(top);\r\n        points.forEach(function (point) {\r\n            var transformed = trans.point(point);\r\n            if (minX === undefined) {\r\n                minX = maxX = transformed.x;\r\n                minY = maxY = transformed.y;\r\n            }\r\n            minX = Math.min(minX, transformed.x);\r\n            minY = Math.min(minY, transformed.y);\r\n            maxX = Math.max(maxX, transformed.x);\r\n            maxY = Math.max(maxY, transformed.y);\r\n        });\r\n        return {\r\n            x: minX,\r\n            y: minY,\r\n            width: maxX - minX,\r\n            height: maxY - minY,\r\n        };\r\n    };\r\n    Node.prototype._drawCachedSceneCanvas = function (context) {\r\n        context.save();\r\n        context._applyOpacity(this);\r\n        context._applyGlobalCompositeOperation(this);\r\n        var canvasCache = this._getCanvasCache();\r\n        context.translate(canvasCache.x, canvasCache.y);\r\n        var cacheCanvas = this._getCachedSceneCanvas();\r\n        var ratio = cacheCanvas.pixelRatio;\r\n        context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\r\n        context.restore();\r\n    };\r\n    Node.prototype._drawCachedHitCanvas = function (context) {\r\n        var canvasCache = this._getCanvasCache(), hitCanvas = canvasCache.hit;\r\n        context.save();\r\n        context.translate(canvasCache.x, canvasCache.y);\r\n        context.drawImage(hitCanvas._canvas, 0, 0);\r\n        context.restore();\r\n    };\r\n    Node.prototype._getCachedSceneCanvas = function () {\r\n        var filters = this.filters(), cachedCanvas = this._getCanvasCache(), sceneCanvas = cachedCanvas.scene, filterCanvas = cachedCanvas.filter, filterContext = filterCanvas.getContext(), len, imageData, n, filter;\r\n        if (filters) {\r\n            if (!this._filterUpToDate) {\r\n                var ratio = sceneCanvas.pixelRatio;\r\n                filterCanvas.setSize(sceneCanvas.width / sceneCanvas.pixelRatio, sceneCanvas.height / sceneCanvas.pixelRatio);\r\n                try {\r\n                    len = filters.length;\r\n                    filterContext.clear();\r\n                    filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\r\n                    imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\r\n                    for (n = 0; n < len; n++) {\r\n                        filter = filters[n];\r\n                        if (typeof filter !== 'function') {\r\n                            Util_1.Util.error('Filter should be type of function, but got ' +\r\n                                typeof filter +\r\n                                ' instead. Please check correct filters');\r\n                            continue;\r\n                        }\r\n                        filter.call(this, imageData);\r\n                        filterContext.putImageData(imageData, 0, 0);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    Util_1.Util.error('Unable to apply filter. ' +\r\n                        e.message +\r\n                        ' This post my help you https://konvajs.org/docs/posts/Tainted_Canvas.html.');\r\n                }\r\n                this._filterUpToDate = true;\r\n            }\r\n            return filterCanvas;\r\n        }\r\n        return sceneCanvas;\r\n    };\r\n    Node.prototype.on = function (evtStr, handler) {\r\n        this._cache && this._cache.delete(ALL_LISTENERS);\r\n        if (arguments.length === 3) {\r\n            return this._delegate.apply(this, arguments);\r\n        }\r\n        var events = evtStr.split(SPACE), len = events.length, n, event, parts, baseEvent, name;\r\n        for (n = 0; n < len; n++) {\r\n            event = events[n];\r\n            parts = event.split('.');\r\n            baseEvent = parts[0];\r\n            name = parts[1] || '';\r\n            if (!this.eventListeners[baseEvent]) {\r\n                this.eventListeners[baseEvent] = [];\r\n            }\r\n            this.eventListeners[baseEvent].push({\r\n                name: name,\r\n                handler: handler,\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    Node.prototype.off = function (evtStr, callback) {\r\n        var events = (evtStr || '').split(SPACE), len = events.length, n, t, event, parts, baseEvent, name;\r\n        this._cache && this._cache.delete(ALL_LISTENERS);\r\n        if (!evtStr) {\r\n            for (t in this.eventListeners) {\r\n                this._off(t);\r\n            }\r\n        }\r\n        for (n = 0; n < len; n++) {\r\n            event = events[n];\r\n            parts = event.split('.');\r\n            baseEvent = parts[0];\r\n            name = parts[1];\r\n            if (baseEvent) {\r\n                if (this.eventListeners[baseEvent]) {\r\n                    this._off(baseEvent, name, callback);\r\n                }\r\n            }\r\n            else {\r\n                for (t in this.eventListeners) {\r\n                    this._off(t, name, callback);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Node.prototype.dispatchEvent = function (evt) {\r\n        var e = {\r\n            target: this,\r\n            type: evt.type,\r\n            evt: evt,\r\n        };\r\n        this.fire(evt.type, e);\r\n        return this;\r\n    };\r\n    Node.prototype.addEventListener = function (type, handler) {\r\n        this.on(type, function (evt) {\r\n            handler.call(this, evt.evt);\r\n        });\r\n        return this;\r\n    };\r\n    Node.prototype.removeEventListener = function (type) {\r\n        this.off(type);\r\n        return this;\r\n    };\r\n    Node.prototype._delegate = function (event, selector, handler) {\r\n        var stopNode = this;\r\n        this.on(event, function (evt) {\r\n            var targets = evt.target.findAncestors(selector, true, stopNode);\r\n            for (var i = 0; i < targets.length; i++) {\r\n                evt = Util_1.Util.cloneObject(evt);\r\n                evt.currentTarget = targets[i];\r\n                handler.call(targets[i], evt);\r\n            }\r\n        });\r\n    };\r\n    Node.prototype.remove = function () {\r\n        if (this.isDragging()) {\r\n            this.stopDrag();\r\n        }\r\n        DragAndDrop_1.DD._dragElements.delete(this._id);\r\n        this._remove();\r\n        return this;\r\n    };\r\n    Node.prototype._clearCaches = function () {\r\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\r\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\r\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\r\n        this._clearSelfAndDescendantCache(STAGE);\r\n        this._clearSelfAndDescendantCache(VISIBLE);\r\n        this._clearSelfAndDescendantCache(LISTENING);\r\n    };\r\n    Node.prototype._remove = function () {\r\n        this._clearCaches();\r\n        var parent = this.getParent();\r\n        if (parent && parent.children) {\r\n            parent.children.splice(this.index, 1);\r\n            parent._setChildrenIndices();\r\n            this.parent = null;\r\n        }\r\n    };\r\n    Node.prototype.destroy = function () {\r\n        exports._removeId(this.id(), this);\r\n        var names = (this.name() || '').split(/\\s/g);\r\n        for (var i = 0; i < names.length; i++) {\r\n            var subname = names[i];\r\n            exports._removeName(subname, this._id);\r\n        }\r\n        this.remove();\r\n        return this;\r\n    };\r\n    Node.prototype.getAttr = function (attr) {\r\n        var method = 'get' + Util_1.Util._capitalize(attr);\r\n        if (Util_1.Util._isFunction(this[method])) {\r\n            return this[method]();\r\n        }\r\n        return this.attrs[attr];\r\n    };\r\n    Node.prototype.getAncestors = function () {\r\n        var parent = this.getParent(), ancestors = new Util_1.Collection();\r\n        while (parent) {\r\n            ancestors.push(parent);\r\n            parent = parent.getParent();\r\n        }\r\n        return ancestors;\r\n    };\r\n    Node.prototype.getAttrs = function () {\r\n        return this.attrs || {};\r\n    };\r\n    Node.prototype.setAttrs = function (config) {\r\n        var _this = this;\r\n        this._batchTransformChanges(function () {\r\n            var key, method;\r\n            if (!config) {\r\n                return _this;\r\n            }\r\n            for (key in config) {\r\n                if (key === CHILDREN) {\r\n                    continue;\r\n                }\r\n                method = SET + Util_1.Util._capitalize(key);\r\n                if (Util_1.Util._isFunction(_this[method])) {\r\n                    _this[method](config[key]);\r\n                }\r\n                else {\r\n                    _this._setAttr(key, config[key]);\r\n                }\r\n            }\r\n        });\r\n        return this;\r\n    };\r\n    Node.prototype.isListening = function () {\r\n        return this._getCache(LISTENING, this._isListening);\r\n    };\r\n    Node.prototype._isListening = function (relativeTo) {\r\n        var listening = this.listening();\r\n        if (!listening) {\r\n            return false;\r\n        }\r\n        var parent = this.getParent();\r\n        if (parent && parent !== relativeTo && this !== relativeTo) {\r\n            return parent._isListening(relativeTo);\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    };\r\n    Node.prototype.isVisible = function () {\r\n        return this._getCache(VISIBLE, this._isVisible);\r\n    };\r\n    Node.prototype._isVisible = function (relativeTo) {\r\n        var visible = this.visible();\r\n        if (!visible) {\r\n            return false;\r\n        }\r\n        var parent = this.getParent();\r\n        if (parent && parent !== relativeTo && this !== relativeTo) {\r\n            return parent._isVisible(relativeTo);\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    };\r\n    Node.prototype.shouldDrawHit = function (top, skipDragCheck) {\r\n        if (skipDragCheck === void 0) { skipDragCheck = false; }\r\n        if (top) {\r\n            return this._isVisible(top) && this._isListening(top);\r\n        }\r\n        var layer = this.getLayer();\r\n        var layerUnderDrag = false;\r\n        DragAndDrop_1.DD._dragElements.forEach(function (elem) {\r\n            if (elem.dragStatus !== 'dragging') {\r\n                return;\r\n            }\r\n            else if (elem.node.nodeType === 'Stage') {\r\n                layerUnderDrag = true;\r\n            }\r\n            else if (elem.node.getLayer() === layer) {\r\n                layerUnderDrag = true;\r\n            }\r\n        });\r\n        var dragSkip = !skipDragCheck && !Global_1.Konva.hitOnDragEnabled && layerUnderDrag;\r\n        return this.isListening() && this.isVisible() && !dragSkip;\r\n    };\r\n    Node.prototype.show = function () {\r\n        this.visible(true);\r\n        return this;\r\n    };\r\n    Node.prototype.hide = function () {\r\n        this.visible(false);\r\n        return this;\r\n    };\r\n    Node.prototype.getZIndex = function () {\r\n        return this.index || 0;\r\n    };\r\n    Node.prototype.getAbsoluteZIndex = function () {\r\n        var depth = this.getDepth(), that = this, index = 0, nodes, len, n, child;\r\n        function addChildren(children) {\r\n            nodes = [];\r\n            len = children.length;\r\n            for (n = 0; n < len; n++) {\r\n                child = children[n];\r\n                index++;\r\n                if (child.nodeType !== SHAPE) {\r\n                    nodes = nodes.concat(child.getChildren().toArray());\r\n                }\r\n                if (child._id === that._id) {\r\n                    n = len;\r\n                }\r\n            }\r\n            if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\r\n                addChildren(nodes);\r\n            }\r\n        }\r\n        if (that.nodeType !== UPPER_STAGE) {\r\n            addChildren(that.getStage().getChildren());\r\n        }\r\n        return index;\r\n    };\r\n    Node.prototype.getDepth = function () {\r\n        var depth = 0, parent = this.parent;\r\n        while (parent) {\r\n            depth++;\r\n            parent = parent.parent;\r\n        }\r\n        return depth;\r\n    };\r\n    Node.prototype._batchTransformChanges = function (func) {\r\n        this._batchingTransformChange = true;\r\n        func();\r\n        this._batchingTransformChange = false;\r\n        if (this._needClearTransformCache) {\r\n            this._clearCache(TRANSFORM);\r\n            this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM, true);\r\n        }\r\n        this._needClearTransformCache = false;\r\n    };\r\n    Node.prototype.setPosition = function (pos) {\r\n        var _this = this;\r\n        this._batchTransformChanges(function () {\r\n            _this.x(pos.x);\r\n            _this.y(pos.y);\r\n        });\r\n        return this;\r\n    };\r\n    Node.prototype.getPosition = function () {\r\n        return {\r\n            x: this.x(),\r\n            y: this.y(),\r\n        };\r\n    };\r\n    Node.prototype.getAbsolutePosition = function (top) {\r\n        var haveCachedParent = false;\r\n        var parent = this.parent;\r\n        while (parent) {\r\n            if (parent.isCached()) {\r\n                haveCachedParent = true;\r\n                break;\r\n            }\r\n            parent = parent.parent;\r\n        }\r\n        if (haveCachedParent && !top) {\r\n            top = true;\r\n        }\r\n        var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(), absoluteTransform = new Util_1.Transform(), offset = this.offset();\r\n        absoluteTransform.m = absoluteMatrix.slice();\r\n        absoluteTransform.translate(offset.x, offset.y);\r\n        return absoluteTransform.getTranslation();\r\n    };\r\n    Node.prototype.setAbsolutePosition = function (pos) {\r\n        var origTrans = this._clearTransform();\r\n        this.attrs.x = origTrans.x;\r\n        this.attrs.y = origTrans.y;\r\n        delete origTrans.x;\r\n        delete origTrans.y;\r\n        this._clearCache(TRANSFORM);\r\n        var it = this._getAbsoluteTransform().copy();\r\n        it.invert();\r\n        it.translate(pos.x, pos.y);\r\n        pos = {\r\n            x: this.attrs.x + it.getTranslation().x,\r\n            y: this.attrs.y + it.getTranslation().y,\r\n        };\r\n        this._setTransform(origTrans);\r\n        this.setPosition({ x: pos.x, y: pos.y });\r\n        this._clearCache(TRANSFORM);\r\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\r\n        return this;\r\n    };\r\n    Node.prototype._setTransform = function (trans) {\r\n        var key;\r\n        for (key in trans) {\r\n            this.attrs[key] = trans[key];\r\n        }\r\n    };\r\n    Node.prototype._clearTransform = function () {\r\n        var trans = {\r\n            x: this.x(),\r\n            y: this.y(),\r\n            rotation: this.rotation(),\r\n            scaleX: this.scaleX(),\r\n            scaleY: this.scaleY(),\r\n            offsetX: this.offsetX(),\r\n            offsetY: this.offsetY(),\r\n            skewX: this.skewX(),\r\n            skewY: this.skewY(),\r\n        };\r\n        this.attrs.x = 0;\r\n        this.attrs.y = 0;\r\n        this.attrs.rotation = 0;\r\n        this.attrs.scaleX = 1;\r\n        this.attrs.scaleY = 1;\r\n        this.attrs.offsetX = 0;\r\n        this.attrs.offsetY = 0;\r\n        this.attrs.skewX = 0;\r\n        this.attrs.skewY = 0;\r\n        return trans;\r\n    };\r\n    Node.prototype.move = function (change) {\r\n        var changeX = change.x, changeY = change.y, x = this.x(), y = this.y();\r\n        if (changeX !== undefined) {\r\n            x += changeX;\r\n        }\r\n        if (changeY !== undefined) {\r\n            y += changeY;\r\n        }\r\n        this.setPosition({ x: x, y: y });\r\n        return this;\r\n    };\r\n    Node.prototype._eachAncestorReverse = function (func, top) {\r\n        var family = [], parent = this.getParent(), len, n;\r\n        if (top && top._id === this._id) {\r\n            return;\r\n        }\r\n        family.unshift(this);\r\n        while (parent && (!top || parent._id !== top._id)) {\r\n            family.unshift(parent);\r\n            parent = parent.parent;\r\n        }\r\n        len = family.length;\r\n        for (n = 0; n < len; n++) {\r\n            func(family[n]);\r\n        }\r\n    };\r\n    Node.prototype.rotate = function (theta) {\r\n        this.rotation(this.rotation() + theta);\r\n        return this;\r\n    };\r\n    Node.prototype.moveToTop = function () {\r\n        if (!this.parent) {\r\n            Util_1.Util.warn('Node has no parent. moveToTop function is ignored.');\r\n            return false;\r\n        }\r\n        var index = this.index;\r\n        this.parent.children.splice(index, 1);\r\n        this.parent.children.push(this);\r\n        this.parent._setChildrenIndices();\r\n        return true;\r\n    };\r\n    Node.prototype.moveUp = function () {\r\n        if (!this.parent) {\r\n            Util_1.Util.warn('Node has no parent. moveUp function is ignored.');\r\n            return false;\r\n        }\r\n        var index = this.index, len = this.parent.getChildren().length;\r\n        if (index < len - 1) {\r\n            this.parent.children.splice(index, 1);\r\n            this.parent.children.splice(index + 1, 0, this);\r\n            this.parent._setChildrenIndices();\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Node.prototype.moveDown = function () {\r\n        if (!this.parent) {\r\n            Util_1.Util.warn('Node has no parent. moveDown function is ignored.');\r\n            return false;\r\n        }\r\n        var index = this.index;\r\n        if (index > 0) {\r\n            this.parent.children.splice(index, 1);\r\n            this.parent.children.splice(index - 1, 0, this);\r\n            this.parent._setChildrenIndices();\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Node.prototype.moveToBottom = function () {\r\n        if (!this.parent) {\r\n            Util_1.Util.warn('Node has no parent. moveToBottom function is ignored.');\r\n            return false;\r\n        }\r\n        var index = this.index;\r\n        if (index > 0) {\r\n            this.parent.children.splice(index, 1);\r\n            this.parent.children.unshift(this);\r\n            this.parent._setChildrenIndices();\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Node.prototype.setZIndex = function (zIndex) {\r\n        if (!this.parent) {\r\n            Util_1.Util.warn('Node has no parent. zIndex parameter is ignored.');\r\n            return this;\r\n        }\r\n        if (zIndex < 0 || zIndex >= this.parent.children.length) {\r\n            Util_1.Util.warn('Unexpected value ' +\r\n                zIndex +\r\n                ' for zIndex property. zIndex is just index of a node in children of its parent. Expected value is from 0 to ' +\r\n                (this.parent.children.length - 1) +\r\n                '.');\r\n        }\r\n        var index = this.index;\r\n        this.parent.children.splice(index, 1);\r\n        this.parent.children.splice(zIndex, 0, this);\r\n        this.parent._setChildrenIndices();\r\n        return this;\r\n    };\r\n    Node.prototype.getAbsoluteOpacity = function () {\r\n        return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\r\n    };\r\n    Node.prototype._getAbsoluteOpacity = function () {\r\n        var absOpacity = this.opacity();\r\n        var parent = this.getParent();\r\n        if (parent && !parent._isUnderCache) {\r\n            absOpacity *= parent.getAbsoluteOpacity();\r\n        }\r\n        return absOpacity;\r\n    };\r\n    Node.prototype.moveTo = function (newContainer) {\r\n        if (this.getParent() !== newContainer) {\r\n            this._remove();\r\n            newContainer.add(this);\r\n        }\r\n        return this;\r\n    };\r\n    Node.prototype.toObject = function () {\r\n        var obj = {}, attrs = this.getAttrs(), key, val, getter, defaultValue, nonPlainObject;\r\n        obj.attrs = {};\r\n        for (key in attrs) {\r\n            val = attrs[key];\r\n            nonPlainObject =\r\n                Util_1.Util.isObject(val) && !Util_1.Util._isPlainObject(val) && !Util_1.Util._isArray(val);\r\n            if (nonPlainObject) {\r\n                continue;\r\n            }\r\n            getter = typeof this[key] === 'function' && this[key];\r\n            delete attrs[key];\r\n            defaultValue = getter ? getter.call(this) : null;\r\n            attrs[key] = val;\r\n            if (defaultValue !== val) {\r\n                obj.attrs[key] = val;\r\n            }\r\n        }\r\n        obj.className = this.getClassName();\r\n        return Util_1.Util._prepareToStringify(obj);\r\n    };\r\n    Node.prototype.toJSON = function () {\r\n        return JSON.stringify(this.toObject());\r\n    };\r\n    Node.prototype.getParent = function () {\r\n        return this.parent;\r\n    };\r\n    Node.prototype.findAncestors = function (selector, includeSelf, stopNode) {\r\n        var res = [];\r\n        if (includeSelf && this._isMatch(selector)) {\r\n            res.push(this);\r\n        }\r\n        var ancestor = this.parent;\r\n        while (ancestor) {\r\n            if (ancestor === stopNode) {\r\n                return res;\r\n            }\r\n            if (ancestor._isMatch(selector)) {\r\n                res.push(ancestor);\r\n            }\r\n            ancestor = ancestor.parent;\r\n        }\r\n        return res;\r\n    };\r\n    Node.prototype.isAncestorOf = function (node) {\r\n        return false;\r\n    };\r\n    Node.prototype.findAncestor = function (selector, includeSelf, stopNode) {\r\n        return this.findAncestors(selector, includeSelf, stopNode)[0];\r\n    };\r\n    Node.prototype._isMatch = function (selector) {\r\n        if (!selector) {\r\n            return false;\r\n        }\r\n        if (typeof selector === 'function') {\r\n            return selector(this);\r\n        }\r\n        var selectorArr = selector.replace(/ /g, '').split(','), len = selectorArr.length, n, sel;\r\n        for (n = 0; n < len; n++) {\r\n            sel = selectorArr[n];\r\n            if (!Util_1.Util.isValidSelector(sel)) {\r\n                Util_1.Util.warn('Selector \"' +\r\n                    sel +\r\n                    '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\r\n                Util_1.Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\r\n                Util_1.Util.warn('Konva is awesome, right?');\r\n            }\r\n            if (sel.charAt(0) === '#') {\r\n                if (this.id() === sel.slice(1)) {\r\n                    return true;\r\n                }\r\n            }\r\n            else if (sel.charAt(0) === '.') {\r\n                if (this.hasName(sel.slice(1))) {\r\n                    return true;\r\n                }\r\n            }\r\n            else if (this.className === sel || this.nodeType === sel) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Node.prototype.getLayer = function () {\r\n        var parent = this.getParent();\r\n        return parent ? parent.getLayer() : null;\r\n    };\r\n    Node.prototype.getStage = function () {\r\n        return this._getCache(STAGE, this._getStage);\r\n    };\r\n    Node.prototype._getStage = function () {\r\n        var parent = this.getParent();\r\n        if (parent) {\r\n            return parent.getStage();\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    };\r\n    Node.prototype.fire = function (eventType, evt, bubble) {\r\n        if (evt === void 0) { evt = {}; }\r\n        evt.target = evt.target || this;\r\n        if (bubble) {\r\n            this._fireAndBubble(eventType, evt);\r\n        }\r\n        else {\r\n            this._fire(eventType, evt);\r\n        }\r\n        return this;\r\n    };\r\n    Node.prototype.getAbsoluteTransform = function (top) {\r\n        if (top) {\r\n            return this._getAbsoluteTransform(top);\r\n        }\r\n        else {\r\n            return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\r\n        }\r\n    };\r\n    Node.prototype._getAbsoluteTransform = function (top) {\r\n        var at;\r\n        if (top) {\r\n            at = new Util_1.Transform();\r\n            this._eachAncestorReverse(function (node) {\r\n                var transformsEnabled = node.transformsEnabled();\r\n                if (transformsEnabled === 'all') {\r\n                    at.multiply(node.getTransform());\r\n                }\r\n                else if (transformsEnabled === 'position') {\r\n                    at.translate(node.x() - node.offsetX(), node.y() - node.offsetY());\r\n                }\r\n            }, top);\r\n            return at;\r\n        }\r\n        else {\r\n            at = this._cache.get(ABSOLUTE_TRANSFORM) || new Util_1.Transform();\r\n            if (this.parent) {\r\n                this.parent.getAbsoluteTransform().copyInto(at);\r\n            }\r\n            else {\r\n                at.reset();\r\n            }\r\n            var transformsEnabled = this.transformsEnabled();\r\n            if (transformsEnabled === 'all') {\r\n                at.multiply(this.getTransform());\r\n            }\r\n            else if (transformsEnabled === 'position') {\r\n                var x = this.attrs.x || 0;\r\n                var y = this.attrs.y || 0;\r\n                var offsetX = this.attrs.offsetX || 0;\r\n                var offsetY = this.attrs.offsetY || 0;\r\n                at.translate(x - offsetX, y - offsetY);\r\n            }\r\n            at.dirty = false;\r\n            return at;\r\n        }\r\n    };\r\n    Node.prototype.getAbsoluteScale = function (top) {\r\n        var parent = this;\r\n        while (parent) {\r\n            if (parent._isUnderCache) {\r\n                top = parent;\r\n            }\r\n            parent = parent.getParent();\r\n        }\r\n        var transform = this.getAbsoluteTransform(top);\r\n        var attrs = transform.decompose();\r\n        return {\r\n            x: attrs.scaleX,\r\n            y: attrs.scaleY,\r\n        };\r\n    };\r\n    Node.prototype.getAbsoluteRotation = function () {\r\n        return this.getAbsoluteTransform().decompose().rotation;\r\n    };\r\n    Node.prototype.getTransform = function () {\r\n        return this._getCache(TRANSFORM, this._getTransform);\r\n    };\r\n    Node.prototype._getTransform = function () {\r\n        var _a, _b;\r\n        var m = this._cache.get(TRANSFORM) || new Util_1.Transform();\r\n        m.reset();\r\n        var x = this.x(), y = this.y(), rotation = Global_1.Konva.getAngle(this.rotation()), scaleX = (_a = this.attrs.scaleX) !== null && _a !== void 0 ? _a : 1, scaleY = (_b = this.attrs.scaleY) !== null && _b !== void 0 ? _b : 1, skewX = this.attrs.skewX || 0, skewY = this.attrs.skewY || 0, offsetX = this.attrs.offsetX || 0, offsetY = this.attrs.offsetY || 0;\r\n        if (x !== 0 || y !== 0) {\r\n            m.translate(x, y);\r\n        }\r\n        if (rotation !== 0) {\r\n            m.rotate(rotation);\r\n        }\r\n        if (skewX !== 0 || skewY !== 0) {\r\n            m.skew(skewX, skewY);\r\n        }\r\n        if (scaleX !== 1 || scaleY !== 1) {\r\n            m.scale(scaleX, scaleY);\r\n        }\r\n        if (offsetX !== 0 || offsetY !== 0) {\r\n            m.translate(-1 * offsetX, -1 * offsetY);\r\n        }\r\n        m.dirty = false;\r\n        return m;\r\n    };\r\n    Node.prototype.clone = function (obj) {\r\n        var attrs = Util_1.Util.cloneObject(this.attrs), key, allListeners, len, n, listener;\r\n        for (key in obj) {\r\n            attrs[key] = obj[key];\r\n        }\r\n        var node = new this.constructor(attrs);\r\n        for (key in this.eventListeners) {\r\n            allListeners = this.eventListeners[key];\r\n            len = allListeners.length;\r\n            for (n = 0; n < len; n++) {\r\n                listener = allListeners[n];\r\n                if (listener.name.indexOf(KONVA) < 0) {\r\n                    if (!node.eventListeners[key]) {\r\n                        node.eventListeners[key] = [];\r\n                    }\r\n                    node.eventListeners[key].push(listener);\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    Node.prototype._toKonvaCanvas = function (config) {\r\n        config = config || {};\r\n        var box = this.getClientRect();\r\n        var stage = this.getStage(), x = config.x !== undefined ? config.x : box.x, y = config.y !== undefined ? config.y : box.y, pixelRatio = config.pixelRatio || 1, canvas = new Canvas_1.SceneCanvas({\r\n            width: config.width || box.width || (stage ? stage.width() : 0),\r\n            height: config.height || box.height || (stage ? stage.height() : 0),\r\n            pixelRatio: pixelRatio,\r\n        }), context = canvas.getContext();\r\n        context.save();\r\n        if (x || y) {\r\n            context.translate(-1 * x, -1 * y);\r\n        }\r\n        this.drawScene(canvas);\r\n        context.restore();\r\n        return canvas;\r\n    };\r\n    Node.prototype.toCanvas = function (config) {\r\n        return this._toKonvaCanvas(config)._canvas;\r\n    };\r\n    Node.prototype.toDataURL = function (config) {\r\n        config = config || {};\r\n        var mimeType = config.mimeType || null, quality = config.quality || null;\r\n        var url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\r\n        if (config.callback) {\r\n            config.callback(url);\r\n        }\r\n        return url;\r\n    };\r\n    Node.prototype.toImage = function (config) {\r\n        if (!config || !config.callback) {\r\n            throw 'callback required for toImage method config argument';\r\n        }\r\n        var callback = config.callback;\r\n        delete config.callback;\r\n        Util_1.Util._urlToImage(this.toDataURL(config), function (img) {\r\n            callback(img);\r\n        });\r\n    };\r\n    Node.prototype.setSize = function (size) {\r\n        this.width(size.width);\r\n        this.height(size.height);\r\n        return this;\r\n    };\r\n    Node.prototype.getSize = function () {\r\n        return {\r\n            width: this.width(),\r\n            height: this.height(),\r\n        };\r\n    };\r\n    Node.prototype.getClassName = function () {\r\n        return this.className || this.nodeType;\r\n    };\r\n    Node.prototype.getType = function () {\r\n        return this.nodeType;\r\n    };\r\n    Node.prototype.getDragDistance = function () {\r\n        if (this.attrs.dragDistance !== undefined) {\r\n            return this.attrs.dragDistance;\r\n        }\r\n        else if (this.parent) {\r\n            return this.parent.getDragDistance();\r\n        }\r\n        else {\r\n            return Global_1.Konva.dragDistance;\r\n        }\r\n    };\r\n    Node.prototype._off = function (type, name, callback) {\r\n        var evtListeners = this.eventListeners[type], i, evtName, handler;\r\n        for (i = 0; i < evtListeners.length; i++) {\r\n            evtName = evtListeners[i].name;\r\n            handler = evtListeners[i].handler;\r\n            if ((evtName !== 'konva' || name === 'konva') &&\r\n                (!name || evtName === name) &&\r\n                (!callback || callback === handler)) {\r\n                evtListeners.splice(i, 1);\r\n                if (evtListeners.length === 0) {\r\n                    delete this.eventListeners[type];\r\n                    break;\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n    };\r\n    Node.prototype._fireChangeEvent = function (attr, oldVal, newVal) {\r\n        this._fire(attr + CHANGE, {\r\n            oldVal: oldVal,\r\n            newVal: newVal,\r\n        });\r\n    };\r\n    Node.prototype.setId = function (id) {\r\n        var oldId = this.id();\r\n        exports._removeId(oldId, this);\r\n        _addId(this, id);\r\n        this._setAttr('id', id);\r\n        return this;\r\n    };\r\n    Node.prototype.setName = function (name) {\r\n        var oldNames = (this.name() || '').split(/\\s/g);\r\n        var newNames = (name || '').split(/\\s/g);\r\n        var subname, i;\r\n        for (i = 0; i < oldNames.length; i++) {\r\n            subname = oldNames[i];\r\n            if (newNames.indexOf(subname) === -1 && subname) {\r\n                exports._removeName(subname, this._id);\r\n            }\r\n        }\r\n        for (i = 0; i < newNames.length; i++) {\r\n            subname = newNames[i];\r\n            if (oldNames.indexOf(subname) === -1 && subname) {\r\n                exports._addName(this, subname);\r\n            }\r\n        }\r\n        this._setAttr(NAME, name);\r\n        return this;\r\n    };\r\n    Node.prototype.addName = function (name) {\r\n        if (!this.hasName(name)) {\r\n            var oldName = this.name();\r\n            var newName = oldName ? oldName + ' ' + name : name;\r\n            this.setName(newName);\r\n        }\r\n        return this;\r\n    };\r\n    Node.prototype.hasName = function (name) {\r\n        if (!name) {\r\n            return false;\r\n        }\r\n        var fullName = this.name();\r\n        if (!fullName) {\r\n            return false;\r\n        }\r\n        var names = (fullName || '').split(/\\s/g);\r\n        return names.indexOf(name) !== -1;\r\n    };\r\n    Node.prototype.removeName = function (name) {\r\n        var names = (this.name() || '').split(/\\s/g);\r\n        var index = names.indexOf(name);\r\n        if (index !== -1) {\r\n            names.splice(index, 1);\r\n            this.setName(names.join(' '));\r\n        }\r\n        return this;\r\n    };\r\n    Node.prototype.setAttr = function (attr, val) {\r\n        var func = this[SET + Util_1.Util._capitalize(attr)];\r\n        if (Util_1.Util._isFunction(func)) {\r\n            func.call(this, val);\r\n        }\r\n        else {\r\n            this._setAttr(attr, val);\r\n        }\r\n        return this;\r\n    };\r\n    Node.prototype._setAttr = function (key, val, skipFire) {\r\n        if (skipFire === void 0) { skipFire = false; }\r\n        var oldVal = this.attrs[key];\r\n        if (oldVal === val && !Util_1.Util.isObject(val)) {\r\n            return;\r\n        }\r\n        if (val === undefined || val === null) {\r\n            delete this.attrs[key];\r\n        }\r\n        else {\r\n            this.attrs[key] = val;\r\n        }\r\n        if (this._shouldFireChangeEvents) {\r\n            this._fireChangeEvent(key, oldVal, val);\r\n        }\r\n    };\r\n    Node.prototype._setComponentAttr = function (key, component, val) {\r\n        var oldVal;\r\n        if (val !== undefined) {\r\n            oldVal = this.attrs[key];\r\n            if (!oldVal) {\r\n                this.attrs[key] = this.getAttr(key);\r\n            }\r\n            this.attrs[key][component] = val;\r\n            this._fireChangeEvent(key, oldVal, val);\r\n        }\r\n    };\r\n    Node.prototype._fireAndBubble = function (eventType, evt, compareShape) {\r\n        if (evt && this.nodeType === SHAPE) {\r\n            evt.target = this;\r\n        }\r\n        var shouldStop = (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\r\n            ((compareShape &&\r\n                (this === compareShape ||\r\n                    (this.isAncestorOf && this.isAncestorOf(compareShape)))) ||\r\n                (this.nodeType === 'Stage' && !compareShape));\r\n        if (!shouldStop) {\r\n            this._fire(eventType, evt);\r\n            var stopBubble = (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\r\n                compareShape &&\r\n                compareShape.isAncestorOf &&\r\n                compareShape.isAncestorOf(this) &&\r\n                !compareShape.isAncestorOf(this.parent);\r\n            if (((evt && !evt.cancelBubble) || !evt) &&\r\n                this.parent &&\r\n                this.parent.isListening() &&\r\n                !stopBubble) {\r\n                if (compareShape && compareShape.parent) {\r\n                    this._fireAndBubble.call(this.parent, eventType, evt, compareShape);\r\n                }\r\n                else {\r\n                    this._fireAndBubble.call(this.parent, eventType, evt);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Node.prototype._getProtoListeners = function (eventType) {\r\n        var listeners = this._cache.get(ALL_LISTENERS);\r\n        if (!listeners) {\r\n            listeners = {};\r\n            var obj = Object.getPrototypeOf(this);\r\n            while (obj) {\r\n                if (!obj.eventListeners) {\r\n                    obj = Object.getPrototypeOf(obj);\r\n                    continue;\r\n                }\r\n                for (var event in obj.eventListeners) {\r\n                    var newEvents = obj.eventListeners[event];\r\n                    var oldEvents = listeners[event] || [];\r\n                    listeners[event] = newEvents.concat(oldEvents);\r\n                }\r\n                obj = Object.getPrototypeOf(obj);\r\n            }\r\n            this._cache.set(ALL_LISTENERS, listeners);\r\n        }\r\n        return listeners[eventType];\r\n    };\r\n    Node.prototype._fire = function (eventType, evt) {\r\n        evt = evt || {};\r\n        evt.currentTarget = this;\r\n        evt.type = eventType;\r\n        var topListeners = this._getProtoListeners(eventType);\r\n        if (topListeners) {\r\n            for (var i = 0; i < topListeners.length; i++) {\r\n                topListeners[i].handler.call(this, evt);\r\n            }\r\n        }\r\n        var selfListeners = this.eventListeners[eventType];\r\n        if (selfListeners) {\r\n            for (var i = 0; i < selfListeners.length; i++) {\r\n                selfListeners[i].handler.call(this, evt);\r\n            }\r\n        }\r\n    };\r\n    Node.prototype.draw = function () {\r\n        this.drawScene();\r\n        this.drawHit();\r\n        return this;\r\n    };\r\n    Node.prototype._createDragElement = function (evt) {\r\n        var pointerId = evt ? evt.pointerId : undefined;\r\n        var stage = this.getStage();\r\n        var ap = this.getAbsolutePosition();\r\n        var pos = stage._getPointerById(pointerId) ||\r\n            stage._changedPointerPositions[0] ||\r\n            ap;\r\n        DragAndDrop_1.DD._dragElements.set(this._id, {\r\n            node: this,\r\n            startPointerPos: pos,\r\n            offset: {\r\n                x: pos.x - ap.x,\r\n                y: pos.y - ap.y,\r\n            },\r\n            dragStatus: 'ready',\r\n            pointerId: pointerId,\r\n        });\r\n    };\r\n    Node.prototype.startDrag = function (evt, bubbleEvent) {\r\n        if (bubbleEvent === void 0) { bubbleEvent = true; }\r\n        if (!DragAndDrop_1.DD._dragElements.has(this._id)) {\r\n            this._createDragElement(evt);\r\n        }\r\n        var elem = DragAndDrop_1.DD._dragElements.get(this._id);\r\n        elem.dragStatus = 'dragging';\r\n        this.fire('dragstart', {\r\n            type: 'dragstart',\r\n            target: this,\r\n            evt: evt && evt.evt,\r\n        }, bubbleEvent);\r\n    };\r\n    Node.prototype._setDragPosition = function (evt, elem) {\r\n        var pos = this.getStage()._getPointerById(elem.pointerId);\r\n        if (!pos) {\r\n            return;\r\n        }\r\n        var newNodePos = {\r\n            x: pos.x - elem.offset.x,\r\n            y: pos.y - elem.offset.y,\r\n        };\r\n        var dbf = this.dragBoundFunc();\r\n        if (dbf !== undefined) {\r\n            var bounded = dbf.call(this, newNodePos, evt);\r\n            if (!bounded) {\r\n                Util_1.Util.warn('dragBoundFunc did not return any value. That is unexpected behavior. You must return new absolute position from dragBoundFunc.');\r\n            }\r\n            else {\r\n                newNodePos = bounded;\r\n            }\r\n        }\r\n        if (!this._lastPos ||\r\n            this._lastPos.x !== newNodePos.x ||\r\n            this._lastPos.y !== newNodePos.y) {\r\n            this.setAbsolutePosition(newNodePos);\r\n            if (this.getLayer()) {\r\n                this.getLayer().batchDraw();\r\n            }\r\n            else if (this.getStage()) {\r\n                this.getStage().batchDraw();\r\n            }\r\n        }\r\n        this._lastPos = newNodePos;\r\n    };\r\n    Node.prototype.stopDrag = function (evt) {\r\n        var elem = DragAndDrop_1.DD._dragElements.get(this._id);\r\n        if (elem) {\r\n            elem.dragStatus = 'stopped';\r\n        }\r\n        DragAndDrop_1.DD._endDragBefore(evt);\r\n        DragAndDrop_1.DD._endDragAfter(evt);\r\n    };\r\n    Node.prototype.setDraggable = function (draggable) {\r\n        this._setAttr('draggable', draggable);\r\n        this._dragChange();\r\n    };\r\n    Node.prototype.isDragging = function () {\r\n        var elem = DragAndDrop_1.DD._dragElements.get(this._id);\r\n        return elem ? elem.dragStatus === 'dragging' : false;\r\n    };\r\n    Node.prototype._listenDrag = function () {\r\n        this._dragCleanup();\r\n        this.on('mousedown.konva touchstart.konva', function (evt) {\r\n            var _this = this;\r\n            var shouldCheckButton = evt.evt['button'] !== undefined;\r\n            var canDrag = !shouldCheckButton || Global_1.Konva.dragButtons.indexOf(evt.evt['button']) >= 0;\r\n            if (!canDrag) {\r\n                return;\r\n            }\r\n            if (this.isDragging()) {\r\n                return;\r\n            }\r\n            var hasDraggingChild = false;\r\n            DragAndDrop_1.DD._dragElements.forEach(function (elem) {\r\n                if (_this.isAncestorOf(elem.node)) {\r\n                    hasDraggingChild = true;\r\n                }\r\n            });\r\n            if (!hasDraggingChild) {\r\n                this._createDragElement(evt);\r\n            }\r\n        });\r\n    };\r\n    Node.prototype._dragChange = function () {\r\n        if (this.attrs.draggable) {\r\n            this._listenDrag();\r\n        }\r\n        else {\r\n            this._dragCleanup();\r\n            var stage = this.getStage();\r\n            if (!stage) {\r\n                return;\r\n            }\r\n            var dragElement = DragAndDrop_1.DD._dragElements.get(this._id);\r\n            var isDragging = dragElement && dragElement.dragStatus === 'dragging';\r\n            var isReady = dragElement && dragElement.dragStatus === 'ready';\r\n            if (isDragging) {\r\n                this.stopDrag();\r\n            }\r\n            else if (isReady) {\r\n                DragAndDrop_1.DD._dragElements.delete(this._id);\r\n            }\r\n        }\r\n    };\r\n    Node.prototype._dragCleanup = function () {\r\n        this.off('mousedown.konva');\r\n        this.off('touchstart.konva');\r\n    };\r\n    Node.create = function (data, container) {\r\n        if (Util_1.Util._isString(data)) {\r\n            data = JSON.parse(data);\r\n        }\r\n        return this._createNode(data, container);\r\n    };\r\n    Node._createNode = function (obj, container) {\r\n        var className = Node.prototype.getClassName.call(obj), children = obj.children, no, len, n;\r\n        if (container) {\r\n            obj.attrs.container = container;\r\n        }\r\n        if (!Global_1._NODES_REGISTRY[className]) {\r\n            Util_1.Util.warn('Can not find a node with class name \"' +\r\n                className +\r\n                '\". Fallback to \"Shape\".');\r\n            className = 'Shape';\r\n        }\r\n        var Class = Global_1._NODES_REGISTRY[className];\r\n        no = new Class(obj.attrs);\r\n        if (children) {\r\n            len = children.length;\r\n            for (n = 0; n < len; n++) {\r\n                no.add(Node._createNode(children[n]));\r\n            }\r\n        }\r\n        return no;\r\n    };\r\n    return Node;\r\n}());\r\nexports.Node = Node;\r\nNode.prototype.nodeType = 'Node';\r\nNode.prototype._attrsAffectingSize = [];\r\nNode.prototype.eventListeners = {};\r\nNode.prototype.on.call(Node.prototype, TRANSFORM_CHANGE_STR, function () {\r\n    if (this._batchingTransformChange) {\r\n        this._needClearTransformCache = true;\r\n        return;\r\n    }\r\n    this._clearCache(TRANSFORM);\r\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\r\n});\r\nNode.prototype.on.call(Node.prototype, 'visibleChange.konva', function () {\r\n    this._clearSelfAndDescendantCache(VISIBLE);\r\n});\r\nNode.prototype.on.call(Node.prototype, 'listeningChange.konva', function () {\r\n    this._clearSelfAndDescendantCache(LISTENING);\r\n});\r\nNode.prototype.on.call(Node.prototype, 'opacityChange.konva', function () {\r\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\r\n});\r\nvar addGetterSetter = Factory_1.Factory.addGetterSetter;\r\naddGetterSetter(Node, 'zIndex');\r\naddGetterSetter(Node, 'absolutePosition');\r\naddGetterSetter(Node, 'position');\r\naddGetterSetter(Node, 'x', 0, Validators_1.getNumberValidator());\r\naddGetterSetter(Node, 'y', 0, Validators_1.getNumberValidator());\r\naddGetterSetter(Node, 'globalCompositeOperation', 'source-over', Validators_1.getStringValidator());\r\naddGetterSetter(Node, 'opacity', 1, Validators_1.getNumberValidator());\r\naddGetterSetter(Node, 'name', '', Validators_1.getStringValidator());\r\naddGetterSetter(Node, 'id', '', Validators_1.getStringValidator());\r\naddGetterSetter(Node, 'rotation', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addComponentsGetterSetter(Node, 'scale', ['x', 'y']);\r\naddGetterSetter(Node, 'scaleX', 1, Validators_1.getNumberValidator());\r\naddGetterSetter(Node, 'scaleY', 1, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addComponentsGetterSetter(Node, 'skew', ['x', 'y']);\r\naddGetterSetter(Node, 'skewX', 0, Validators_1.getNumberValidator());\r\naddGetterSetter(Node, 'skewY', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addComponentsGetterSetter(Node, 'offset', ['x', 'y']);\r\naddGetterSetter(Node, 'offsetX', 0, Validators_1.getNumberValidator());\r\naddGetterSetter(Node, 'offsetY', 0, Validators_1.getNumberValidator());\r\naddGetterSetter(Node, 'dragDistance', null, Validators_1.getNumberValidator());\r\naddGetterSetter(Node, 'width', 0, Validators_1.getNumberValidator());\r\naddGetterSetter(Node, 'height', 0, Validators_1.getNumberValidator());\r\naddGetterSetter(Node, 'listening', true, Validators_1.getBooleanValidator());\r\naddGetterSetter(Node, 'preventDefault', true, Validators_1.getBooleanValidator());\r\naddGetterSetter(Node, 'filters', null, function (val) {\r\n    this._filterUpToDate = false;\r\n    return val;\r\n});\r\naddGetterSetter(Node, 'visible', true, Validators_1.getBooleanValidator());\r\naddGetterSetter(Node, 'transformsEnabled', 'all', Validators_1.getStringValidator());\r\naddGetterSetter(Node, 'size');\r\naddGetterSetter(Node, 'dragBoundFunc');\r\naddGetterSetter(Node, 'draggable', false, Validators_1.getBooleanValidator());\r\nFactory_1.Factory.backCompat(Node, {\r\n    rotateDeg: 'rotate',\r\n    setRotationDeg: 'setRotation',\r\n    getRotationDeg: 'getRotation',\r\n});\r\nUtil_1.Collection.mapMethods(Node);\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Container = void 0;\r\nvar Util_1 = require(\"./Util\");\r\nvar Factory_1 = require(\"./Factory\");\r\nvar Node_1 = require(\"./Node\");\r\nvar Validators_1 = require(\"./Validators\");\r\nvar Container = (function (_super) {\r\n    __extends(Container, _super);\r\n    function Container() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.children = new Util_1.Collection();\r\n        return _this;\r\n    }\r\n    Container.prototype.getChildren = function (filterFunc) {\r\n        if (!filterFunc) {\r\n            return this.children;\r\n        }\r\n        var results = new Util_1.Collection();\r\n        this.children.each(function (child) {\r\n            if (filterFunc(child)) {\r\n                results.push(child);\r\n            }\r\n        });\r\n        return results;\r\n    };\r\n    Container.prototype.hasChildren = function () {\r\n        return this.getChildren().length > 0;\r\n    };\r\n    Container.prototype.removeChildren = function () {\r\n        var child;\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            child = this.children[i];\r\n            child.parent = null;\r\n            child.index = 0;\r\n            child.remove();\r\n        }\r\n        this.children = new Util_1.Collection();\r\n        return this;\r\n    };\r\n    Container.prototype.destroyChildren = function () {\r\n        var child;\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            child = this.children[i];\r\n            child.parent = null;\r\n            child.index = 0;\r\n            child.destroy();\r\n        }\r\n        this.children = new Util_1.Collection();\r\n        return this;\r\n    };\r\n    Container.prototype.add = function () {\r\n        var children = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            children[_i] = arguments[_i];\r\n        }\r\n        if (arguments.length > 1) {\r\n            for (var i = 0; i < arguments.length; i++) {\r\n                this.add(arguments[i]);\r\n            }\r\n            return this;\r\n        }\r\n        var child = children[0];\r\n        if (child.getParent()) {\r\n            child.moveTo(this);\r\n            return this;\r\n        }\r\n        var _children = this.children;\r\n        this._validateAdd(child);\r\n        child._clearCaches();\r\n        child.index = _children.length;\r\n        child.parent = this;\r\n        _children.push(child);\r\n        this._fire('add', {\r\n            child: child,\r\n        });\r\n        return this;\r\n    };\r\n    Container.prototype.destroy = function () {\r\n        if (this.hasChildren()) {\r\n            this.destroyChildren();\r\n        }\r\n        _super.prototype.destroy.call(this);\r\n        return this;\r\n    };\r\n    Container.prototype.find = function (selector) {\r\n        return this._generalFind(selector, false);\r\n    };\r\n    Container.prototype.get = function (selector) {\r\n        Util_1.Util.warn('collection.get() method is deprecated. Please use collection.find() instead.');\r\n        return this.find(selector);\r\n    };\r\n    Container.prototype.findOne = function (selector) {\r\n        var result = this._generalFind(selector, true);\r\n        return result.length > 0 ? result[0] : undefined;\r\n    };\r\n    Container.prototype._generalFind = function (selector, findOne) {\r\n        var retArr = [];\r\n        this._descendants(function (node) {\r\n            var valid = node._isMatch(selector);\r\n            if (valid) {\r\n                retArr.push(node);\r\n            }\r\n            if (valid && findOne) {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return Util_1.Collection.toCollection(retArr);\r\n    };\r\n    Container.prototype._descendants = function (fn) {\r\n        var shouldStop = false;\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            var child = this.children[i];\r\n            shouldStop = fn(child);\r\n            if (shouldStop) {\r\n                return true;\r\n            }\r\n            if (!child.hasChildren()) {\r\n                continue;\r\n            }\r\n            shouldStop = child._descendants(fn);\r\n            if (shouldStop) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Container.prototype.toObject = function () {\r\n        var obj = Node_1.Node.prototype.toObject.call(this);\r\n        obj.children = [];\r\n        var children = this.getChildren();\r\n        var len = children.length;\r\n        for (var n = 0; n < len; n++) {\r\n            var child = children[n];\r\n            obj.children.push(child.toObject());\r\n        }\r\n        return obj;\r\n    };\r\n    Container.prototype.isAncestorOf = function (node) {\r\n        var parent = node.getParent();\r\n        while (parent) {\r\n            if (parent._id === this._id) {\r\n                return true;\r\n            }\r\n            parent = parent.getParent();\r\n        }\r\n        return false;\r\n    };\r\n    Container.prototype.clone = function (obj) {\r\n        var node = Node_1.Node.prototype.clone.call(this, obj);\r\n        this.getChildren().each(function (no) {\r\n            node.add(no.clone());\r\n        });\r\n        return node;\r\n    };\r\n    Container.prototype.getAllIntersections = function (pos) {\r\n        var arr = [];\r\n        this.find('Shape').each(function (shape) {\r\n            if (shape.isVisible() && shape.intersects(pos)) {\r\n                arr.push(shape);\r\n            }\r\n        });\r\n        return arr;\r\n    };\r\n    Container.prototype._setChildrenIndices = function () {\r\n        this.children.each(function (child, n) {\r\n            child.index = n;\r\n        });\r\n    };\r\n    Container.prototype.drawScene = function (can, top) {\r\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas()), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\r\n        var caching = canvas && canvas.isCache;\r\n        if (!this.isVisible() && !caching) {\r\n            return this;\r\n        }\r\n        if (cachedSceneCanvas) {\r\n            context.save();\r\n            var m = this.getAbsoluteTransform(top).getMatrix();\r\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n            this._drawCachedSceneCanvas(context);\r\n            context.restore();\r\n        }\r\n        else {\r\n            this._drawChildren('drawScene', canvas, top);\r\n        }\r\n        return this;\r\n    };\r\n    Container.prototype.drawHit = function (can, top) {\r\n        if (!this.shouldDrawHit(top)) {\r\n            return this;\r\n        }\r\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\r\n        if (cachedHitCanvas) {\r\n            context.save();\r\n            var m = this.getAbsoluteTransform(top).getMatrix();\r\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n            this._drawCachedHitCanvas(context);\r\n            context.restore();\r\n        }\r\n        else {\r\n            this._drawChildren('drawHit', canvas, top);\r\n        }\r\n        return this;\r\n    };\r\n    Container.prototype._drawChildren = function (drawMethod, canvas, top) {\r\n        var context = canvas && canvas.getContext(), clipWidth = this.clipWidth(), clipHeight = this.clipHeight(), clipFunc = this.clipFunc(), hasClip = (clipWidth && clipHeight) || clipFunc;\r\n        var selfCache = top === this;\r\n        if (hasClip) {\r\n            context.save();\r\n            var transform = this.getAbsoluteTransform(top);\r\n            var m = transform.getMatrix();\r\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n            context.beginPath();\r\n            if (clipFunc) {\r\n                clipFunc.call(this, context, this);\r\n            }\r\n            else {\r\n                var clipX = this.clipX();\r\n                var clipY = this.clipY();\r\n                context.rect(clipX, clipY, clipWidth, clipHeight);\r\n            }\r\n            context.clip();\r\n            m = transform.copy().invert().getMatrix();\r\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n        }\r\n        var hasComposition = !selfCache &&\r\n            this.globalCompositeOperation() !== 'source-over' &&\r\n            drawMethod === 'drawScene';\r\n        if (hasComposition) {\r\n            context.save();\r\n            context._applyGlobalCompositeOperation(this);\r\n        }\r\n        this.children.each(function (child) {\r\n            child[drawMethod](canvas, top);\r\n        });\r\n        if (hasComposition) {\r\n            context.restore();\r\n        }\r\n        if (hasClip) {\r\n            context.restore();\r\n        }\r\n    };\r\n    Container.prototype.getClientRect = function (config) {\r\n        config = config || {};\r\n        var skipTransform = config.skipTransform;\r\n        var relativeTo = config.relativeTo;\r\n        var minX, minY, maxX, maxY;\r\n        var selfRect = {\r\n            x: Infinity,\r\n            y: Infinity,\r\n            width: 0,\r\n            height: 0,\r\n        };\r\n        var that = this;\r\n        this.children.each(function (child) {\r\n            if (!child.visible()) {\r\n                return;\r\n            }\r\n            var rect = child.getClientRect({\r\n                relativeTo: that,\r\n                skipShadow: config.skipShadow,\r\n                skipStroke: config.skipStroke,\r\n            });\r\n            if (rect.width === 0 && rect.height === 0) {\r\n                return;\r\n            }\r\n            if (minX === undefined) {\r\n                minX = rect.x;\r\n                minY = rect.y;\r\n                maxX = rect.x + rect.width;\r\n                maxY = rect.y + rect.height;\r\n            }\r\n            else {\r\n                minX = Math.min(minX, rect.x);\r\n                minY = Math.min(minY, rect.y);\r\n                maxX = Math.max(maxX, rect.x + rect.width);\r\n                maxY = Math.max(maxY, rect.y + rect.height);\r\n            }\r\n        });\r\n        var shapes = this.find('Shape');\r\n        var hasVisible = false;\r\n        for (var i = 0; i < shapes.length; i++) {\r\n            var shape = shapes[i];\r\n            if (shape._isVisible(this)) {\r\n                hasVisible = true;\r\n                break;\r\n            }\r\n        }\r\n        if (hasVisible && minX !== undefined) {\r\n            selfRect = {\r\n                x: minX,\r\n                y: minY,\r\n                width: maxX - minX,\r\n                height: maxY - minY,\r\n            };\r\n        }\r\n        else {\r\n            selfRect = {\r\n                x: 0,\r\n                y: 0,\r\n                width: 0,\r\n                height: 0,\r\n            };\r\n        }\r\n        if (!skipTransform) {\r\n            return this._transformedRect(selfRect, relativeTo);\r\n        }\r\n        return selfRect;\r\n    };\r\n    return Container;\r\n}(Node_1.Node));\r\nexports.Container = Container;\r\nFactory_1.Factory.addComponentsGetterSetter(Container, 'clip', [\r\n    'x',\r\n    'y',\r\n    'width',\r\n    'height',\r\n]);\r\nFactory_1.Factory.addGetterSetter(Container, 'clipX', undefined, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Container, 'clipY', undefined, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Container, 'clipWidth', undefined, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Container, 'clipHeight', undefined, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Container, 'clipFunc');\r\nUtil_1.Collection.mapMethods(Container);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.releaseCapture = exports.setPointerCapture = exports.hasPointerCapture = exports.createEvent = exports.getCapturedShape = void 0;\r\nvar Global_1 = require(\"./Global\");\r\nvar Captures = new Map();\r\nvar SUPPORT_POINTER_EVENTS = Global_1.Konva._global['PointerEvent'] !== undefined;\r\nfunction getCapturedShape(pointerId) {\r\n    return Captures.get(pointerId);\r\n}\r\nexports.getCapturedShape = getCapturedShape;\r\nfunction createEvent(evt) {\r\n    return {\r\n        evt: evt,\r\n        pointerId: evt.pointerId\r\n    };\r\n}\r\nexports.createEvent = createEvent;\r\nfunction hasPointerCapture(pointerId, shape) {\r\n    return Captures.get(pointerId) === shape;\r\n}\r\nexports.hasPointerCapture = hasPointerCapture;\r\nfunction setPointerCapture(pointerId, shape) {\r\n    releaseCapture(pointerId);\r\n    var stage = shape.getStage();\r\n    if (!stage)\r\n        return;\r\n    Captures.set(pointerId, shape);\r\n    if (SUPPORT_POINTER_EVENTS) {\r\n        shape._fire('gotpointercapture', createEvent(new PointerEvent('gotpointercapture')));\r\n    }\r\n}\r\nexports.setPointerCapture = setPointerCapture;\r\nfunction releaseCapture(pointerId, target) {\r\n    var shape = Captures.get(pointerId);\r\n    if (!shape)\r\n        return;\r\n    var stage = shape.getStage();\r\n    if (stage && stage.content) {\r\n    }\r\n    Captures.delete(pointerId);\r\n    if (SUPPORT_POINTER_EVENTS) {\r\n        shape._fire('lostpointercapture', createEvent(new PointerEvent('lostpointercapture')));\r\n    }\r\n}\r\nexports.releaseCapture = releaseCapture;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Stage = exports.stages = void 0;\r\nvar Util_1 = require(\"./Util\");\r\nvar Factory_1 = require(\"./Factory\");\r\nvar Container_1 = require(\"./Container\");\r\nvar Global_1 = require(\"./Global\");\r\nvar Canvas_1 = require(\"./Canvas\");\r\nvar DragAndDrop_1 = require(\"./DragAndDrop\");\r\nvar Global_2 = require(\"./Global\");\r\nvar PointerEvents = require(\"./PointerEvents\");\r\nvar STAGE = 'Stage', STRING = 'string', PX = 'px', MOUSEOUT = 'mouseout', MOUSELEAVE = 'mouseleave', MOUSEOVER = 'mouseover', MOUSEENTER = 'mouseenter', MOUSEMOVE = 'mousemove', MOUSEDOWN = 'mousedown', MOUSEUP = 'mouseup', POINTERMOVE = 'pointermove', POINTERDOWN = 'pointerdown', POINTERUP = 'pointerup', POINTERCANCEL = 'pointercancel', LOSTPOINTERCAPTURE = 'lostpointercapture', CONTEXTMENU = 'contextmenu', CLICK = 'click', DBL_CLICK = 'dblclick', TOUCHSTART = 'touchstart', TOUCHEND = 'touchend', TAP = 'tap', DBL_TAP = 'dbltap', TOUCHMOVE = 'touchmove', WHEEL = 'wheel', CONTENT_MOUSEOUT = 'contentMouseout', CONTENT_MOUSEOVER = 'contentMouseover', CONTENT_MOUSEMOVE = 'contentMousemove', CONTENT_MOUSEDOWN = 'contentMousedown', CONTENT_MOUSEUP = 'contentMouseup', CONTENT_CONTEXTMENU = 'contentContextmenu', CONTENT_CLICK = 'contentClick', CONTENT_DBL_CLICK = 'contentDblclick', CONTENT_TOUCHSTART = 'contentTouchstart', CONTENT_TOUCHEND = 'contentTouchend', CONTENT_DBL_TAP = 'contentDbltap', CONTENT_TAP = 'contentTap', CONTENT_TOUCHMOVE = 'contentTouchmove', CONTENT_POINTERMOVE = 'contentPointermove', CONTENT_POINTERDOWN = 'contentPointerdown', CONTENT_POINTERUP = 'contentPointerup', CONTENT_WHEEL = 'contentWheel', RELATIVE = 'relative', KONVA_CONTENT = 'konvajs-content', SPACE = ' ', UNDERSCORE = '_', CONTAINER = 'container', MAX_LAYERS_NUMBER = 5, EMPTY_STRING = '', EVENTS = [\r\n    MOUSEENTER,\r\n    MOUSEDOWN,\r\n    MOUSEMOVE,\r\n    MOUSEUP,\r\n    MOUSELEAVE,\r\n    TOUCHSTART,\r\n    TOUCHMOVE,\r\n    TOUCHEND,\r\n    MOUSEOVER,\r\n    WHEEL,\r\n    CONTEXTMENU,\r\n    POINTERDOWN,\r\n    POINTERMOVE,\r\n    POINTERUP,\r\n    POINTERCANCEL,\r\n    LOSTPOINTERCAPTURE,\r\n], eventsLength = EVENTS.length;\r\nfunction addEvent(ctx, eventName) {\r\n    ctx.content.addEventListener(eventName, function (evt) {\r\n        ctx[UNDERSCORE + eventName](evt);\r\n    }, false);\r\n}\r\nvar NO_POINTERS_MESSAGE = \"Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);\";\r\nexports.stages = [];\r\nfunction checkNoClip(attrs) {\r\n    if (attrs === void 0) { attrs = {}; }\r\n    if (attrs.clipFunc || attrs.clipWidth || attrs.clipHeight) {\r\n        Util_1.Util.warn('Stage does not support clipping. Please use clip for Layers or Groups.');\r\n    }\r\n    return attrs;\r\n}\r\nvar Stage = (function (_super) {\r\n    __extends(Stage, _super);\r\n    function Stage(config) {\r\n        var _this = _super.call(this, checkNoClip(config)) || this;\r\n        _this._pointerPositions = [];\r\n        _this._changedPointerPositions = [];\r\n        _this._buildDOM();\r\n        _this._bindContentEvents();\r\n        exports.stages.push(_this);\r\n        _this.on('widthChange.konva heightChange.konva', _this._resizeDOM);\r\n        _this.on('visibleChange.konva', _this._checkVisibility);\r\n        _this.on('clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva', function () {\r\n            checkNoClip(_this.attrs);\r\n        });\r\n        _this._checkVisibility();\r\n        return _this;\r\n    }\r\n    Stage.prototype._validateAdd = function (child) {\r\n        var isLayer = child.getType() === 'Layer';\r\n        var isFastLayer = child.getType() === 'FastLayer';\r\n        var valid = isLayer || isFastLayer;\r\n        if (!valid) {\r\n            Util_1.Util.throw('You may only add layers to the stage.');\r\n        }\r\n    };\r\n    Stage.prototype._checkVisibility = function () {\r\n        if (!this.content) {\r\n            return;\r\n        }\r\n        var style = this.visible() ? '' : 'none';\r\n        this.content.style.display = style;\r\n    };\r\n    Stage.prototype.setContainer = function (container) {\r\n        if (typeof container === STRING) {\r\n            if (container.charAt(0) === '.') {\r\n                var className = container.slice(1);\r\n                container = document.getElementsByClassName(className)[0];\r\n            }\r\n            else {\r\n                var id;\r\n                if (container.charAt(0) !== '#') {\r\n                    id = container;\r\n                }\r\n                else {\r\n                    id = container.slice(1);\r\n                }\r\n                container = document.getElementById(id);\r\n            }\r\n            if (!container) {\r\n                throw 'Can not find container in document with id ' + id;\r\n            }\r\n        }\r\n        this._setAttr(CONTAINER, container);\r\n        if (this.content) {\r\n            if (this.content.parentElement) {\r\n                this.content.parentElement.removeChild(this.content);\r\n            }\r\n            container.appendChild(this.content);\r\n        }\r\n        return this;\r\n    };\r\n    Stage.prototype.shouldDrawHit = function () {\r\n        return true;\r\n    };\r\n    Stage.prototype.clear = function () {\r\n        var layers = this.children, len = layers.length, n;\r\n        for (n = 0; n < len; n++) {\r\n            layers[n].clear();\r\n        }\r\n        return this;\r\n    };\r\n    Stage.prototype.clone = function (obj) {\r\n        if (!obj) {\r\n            obj = {};\r\n        }\r\n        obj.container = document.createElement('div');\r\n        return Container_1.Container.prototype.clone.call(this, obj);\r\n    };\r\n    Stage.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n        var content = this.content;\r\n        if (content && Util_1.Util._isInDocument(content)) {\r\n            this.container().removeChild(content);\r\n        }\r\n        var index = exports.stages.indexOf(this);\r\n        if (index > -1) {\r\n            exports.stages.splice(index, 1);\r\n        }\r\n        return this;\r\n    };\r\n    Stage.prototype.getPointerPosition = function () {\r\n        var pos = this._pointerPositions[0] || this._changedPointerPositions[0];\r\n        if (!pos) {\r\n            Util_1.Util.warn(NO_POINTERS_MESSAGE);\r\n            return null;\r\n        }\r\n        return {\r\n            x: pos.x,\r\n            y: pos.y,\r\n        };\r\n    };\r\n    Stage.prototype._getPointerById = function (id) {\r\n        return this._pointerPositions.find(function (p) { return p.id === id; });\r\n    };\r\n    Stage.prototype.getPointersPositions = function () {\r\n        return this._pointerPositions;\r\n    };\r\n    Stage.prototype.getStage = function () {\r\n        return this;\r\n    };\r\n    Stage.prototype.getContent = function () {\r\n        return this.content;\r\n    };\r\n    Stage.prototype._toKonvaCanvas = function (config) {\r\n        config = config || {};\r\n        config.x = config.x || 0;\r\n        config.y = config.y || 0;\r\n        config.width = config.width || this.width();\r\n        config.height = config.height || this.height();\r\n        var canvas = new Canvas_1.SceneCanvas({\r\n            width: config.width,\r\n            height: config.height,\r\n            pixelRatio: config.pixelRatio || 1,\r\n        });\r\n        var _context = canvas.getContext()._context;\r\n        var layers = this.children;\r\n        if (config.x || config.y) {\r\n            _context.translate(-1 * config.x, -1 * config.y);\r\n        }\r\n        layers.each(function (layer) {\r\n            if (!layer.isVisible()) {\r\n                return;\r\n            }\r\n            var layerCanvas = layer._toKonvaCanvas(config);\r\n            _context.drawImage(layerCanvas._canvas, config.x, config.y, layerCanvas.getWidth() / layerCanvas.getPixelRatio(), layerCanvas.getHeight() / layerCanvas.getPixelRatio());\r\n        });\r\n        return canvas;\r\n    };\r\n    Stage.prototype.getIntersection = function (pos, selector) {\r\n        if (!pos) {\r\n            return null;\r\n        }\r\n        var layers = this.children, len = layers.length, end = len - 1, n, shape;\r\n        for (n = end; n >= 0; n--) {\r\n            shape = layers[n].getIntersection(pos, selector);\r\n            if (shape) {\r\n                return shape;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Stage.prototype._resizeDOM = function () {\r\n        var width = this.width();\r\n        var height = this.height();\r\n        if (this.content) {\r\n            this.content.style.width = width + PX;\r\n            this.content.style.height = height + PX;\r\n        }\r\n        this.bufferCanvas.setSize(width, height);\r\n        this.bufferHitCanvas.setSize(width, height);\r\n        this.children.each(function (layer) {\r\n            layer.setSize({ width: width, height: height });\r\n            layer.draw();\r\n        });\r\n    };\r\n    Stage.prototype.add = function (layer) {\r\n        if (arguments.length > 1) {\r\n            for (var i = 0; i < arguments.length; i++) {\r\n                this.add(arguments[i]);\r\n            }\r\n            return this;\r\n        }\r\n        _super.prototype.add.call(this, layer);\r\n        var length = this.children.length;\r\n        if (length > MAX_LAYERS_NUMBER) {\r\n            Util_1.Util.warn('The stage has ' +\r\n                length +\r\n                ' layers. Recommended maximum number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group.');\r\n        }\r\n        layer.setSize({ width: this.width(), height: this.height() });\r\n        layer.draw();\r\n        if (Global_1.Konva.isBrowser) {\r\n            this.content.appendChild(layer.canvas._canvas);\r\n        }\r\n        return this;\r\n    };\r\n    Stage.prototype.getParent = function () {\r\n        return null;\r\n    };\r\n    Stage.prototype.getLayer = function () {\r\n        return null;\r\n    };\r\n    Stage.prototype.hasPointerCapture = function (pointerId) {\r\n        return PointerEvents.hasPointerCapture(pointerId, this);\r\n    };\r\n    Stage.prototype.setPointerCapture = function (pointerId) {\r\n        PointerEvents.setPointerCapture(pointerId, this);\r\n    };\r\n    Stage.prototype.releaseCapture = function (pointerId) {\r\n        PointerEvents.releaseCapture(pointerId, this);\r\n    };\r\n    Stage.prototype.getLayers = function () {\r\n        return this.getChildren();\r\n    };\r\n    Stage.prototype._bindContentEvents = function () {\r\n        if (!Global_1.Konva.isBrowser) {\r\n            return;\r\n        }\r\n        for (var n = 0; n < eventsLength; n++) {\r\n            addEvent(this, EVENTS[n]);\r\n        }\r\n    };\r\n    Stage.prototype._mouseenter = function (evt) {\r\n        this.setPointersPositions(evt);\r\n        this._fire(MOUSEENTER, { evt: evt, target: this, currentTarget: this });\r\n    };\r\n    Stage.prototype._mouseover = function (evt) {\r\n        this.setPointersPositions(evt);\r\n        this._fire(CONTENT_MOUSEOVER, { evt: evt });\r\n        this._fire(MOUSEOVER, { evt: evt, target: this, currentTarget: this });\r\n    };\r\n    Stage.prototype._mouseleave = function (evt) {\r\n        var _a;\r\n        this.setPointersPositions(evt);\r\n        var targetShape = ((_a = this.targetShape) === null || _a === void 0 ? void 0 : _a.getStage()) ? this.targetShape : null;\r\n        var eventsEnabled = !DragAndDrop_1.DD.isDragging || Global_1.Konva.hitOnDragEnabled;\r\n        if (targetShape && eventsEnabled) {\r\n            targetShape._fireAndBubble(MOUSEOUT, { evt: evt });\r\n            targetShape._fireAndBubble(MOUSELEAVE, { evt: evt });\r\n            this._fire(MOUSELEAVE, { evt: evt, target: this, currentTarget: this });\r\n            this.targetShape = null;\r\n        }\r\n        else if (eventsEnabled) {\r\n            this._fire(MOUSELEAVE, {\r\n                evt: evt,\r\n                target: this,\r\n                currentTarget: this,\r\n            });\r\n            this._fire(MOUSEOUT, {\r\n                evt: evt,\r\n                target: this,\r\n                currentTarget: this,\r\n            });\r\n        }\r\n        this.pointerPos = undefined;\r\n        this._pointerPositions = [];\r\n        this._fire(CONTENT_MOUSEOUT, { evt: evt });\r\n    };\r\n    Stage.prototype._mousemove = function (evt) {\r\n        var _a;\r\n        if (Global_1.Konva.UA.ieMobile) {\r\n            return this._touchmove(evt);\r\n        }\r\n        this.setPointersPositions(evt);\r\n        var pointerId = Util_1.Util._getFirstPointerId(evt);\r\n        var shape;\r\n        var targetShape = ((_a = this.targetShape) === null || _a === void 0 ? void 0 : _a.getStage()) ? this.targetShape : null;\r\n        var eventsEnabled = !DragAndDrop_1.DD.isDragging || Global_1.Konva.hitOnDragEnabled;\r\n        if (eventsEnabled) {\r\n            shape = this.getIntersection(this.getPointerPosition());\r\n            if (shape && shape.isListening()) {\r\n                var differentTarget = targetShape !== shape;\r\n                if (eventsEnabled && differentTarget) {\r\n                    if (targetShape) {\r\n                        targetShape._fireAndBubble(MOUSEOUT, { evt: evt, pointerId: pointerId }, shape);\r\n                        targetShape._fireAndBubble(MOUSELEAVE, { evt: evt, pointerId: pointerId }, shape);\r\n                    }\r\n                    shape._fireAndBubble(MOUSEOVER, { evt: evt, pointerId: pointerId }, targetShape);\r\n                    shape._fireAndBubble(MOUSEENTER, { evt: evt, pointerId: pointerId }, targetShape);\r\n                    shape._fireAndBubble(MOUSEMOVE, { evt: evt, pointerId: pointerId });\r\n                    this.targetShape = shape;\r\n                }\r\n                else {\r\n                    shape._fireAndBubble(MOUSEMOVE, { evt: evt, pointerId: pointerId });\r\n                }\r\n            }\r\n            else {\r\n                if (targetShape && eventsEnabled) {\r\n                    targetShape._fireAndBubble(MOUSEOUT, { evt: evt, pointerId: pointerId });\r\n                    targetShape._fireAndBubble(MOUSELEAVE, { evt: evt, pointerId: pointerId });\r\n                    this._fire(MOUSEOVER, {\r\n                        evt: evt,\r\n                        target: this,\r\n                        currentTarget: this,\r\n                        pointerId: pointerId,\r\n                    });\r\n                    this.targetShape = null;\r\n                }\r\n                this._fire(MOUSEMOVE, {\r\n                    evt: evt,\r\n                    target: this,\r\n                    currentTarget: this,\r\n                    pointerId: pointerId,\r\n                });\r\n            }\r\n            this._fire(CONTENT_MOUSEMOVE, { evt: evt });\r\n        }\r\n        if (evt.cancelable) {\r\n            evt.preventDefault();\r\n        }\r\n    };\r\n    Stage.prototype._mousedown = function (evt) {\r\n        if (Global_1.Konva.UA.ieMobile) {\r\n            return this._touchstart(evt);\r\n        }\r\n        this.setPointersPositions(evt);\r\n        var pointerId = Util_1.Util._getFirstPointerId(evt);\r\n        var shape = this.getIntersection(this.getPointerPosition());\r\n        DragAndDrop_1.DD.justDragged = false;\r\n        Global_1.Konva.listenClickTap = true;\r\n        if (shape && shape.isListening()) {\r\n            this.clickStartShape = shape;\r\n            shape._fireAndBubble(MOUSEDOWN, { evt: evt, pointerId: pointerId });\r\n        }\r\n        else {\r\n            this._fire(MOUSEDOWN, {\r\n                evt: evt,\r\n                target: this,\r\n                currentTarget: this,\r\n                pointerId: pointerId,\r\n            });\r\n        }\r\n        this._fire(CONTENT_MOUSEDOWN, { evt: evt });\r\n    };\r\n    Stage.prototype._mouseup = function (evt) {\r\n        if (Global_1.Konva.UA.ieMobile) {\r\n            return this._touchend(evt);\r\n        }\r\n        this.setPointersPositions(evt);\r\n        var pointerId = Util_1.Util._getFirstPointerId(evt);\r\n        var shape = this.getIntersection(this.getPointerPosition()), clickStartShape = this.clickStartShape, clickEndShape = this.clickEndShape, fireDblClick = false;\r\n        if (Global_1.Konva.inDblClickWindow) {\r\n            fireDblClick = true;\r\n            clearTimeout(this.dblTimeout);\r\n        }\r\n        else if (!DragAndDrop_1.DD.justDragged) {\r\n            Global_1.Konva.inDblClickWindow = true;\r\n            clearTimeout(this.dblTimeout);\r\n        }\r\n        this.dblTimeout = setTimeout(function () {\r\n            Global_1.Konva.inDblClickWindow = false;\r\n        }, Global_1.Konva.dblClickWindow);\r\n        if (shape && shape.isListening()) {\r\n            this.clickEndShape = shape;\r\n            shape._fireAndBubble(MOUSEUP, { evt: evt, pointerId: pointerId });\r\n            if (Global_1.Konva.listenClickTap &&\r\n                clickStartShape &&\r\n                clickStartShape._id === shape._id) {\r\n                shape._fireAndBubble(CLICK, { evt: evt, pointerId: pointerId });\r\n                if (fireDblClick && clickEndShape && clickEndShape === shape) {\r\n                    shape._fireAndBubble(DBL_CLICK, { evt: evt, pointerId: pointerId });\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.clickEndShape = null;\r\n            this._fire(MOUSEUP, {\r\n                evt: evt,\r\n                target: this,\r\n                currentTarget: this,\r\n                pointerId: pointerId,\r\n            });\r\n            if (Global_1.Konva.listenClickTap) {\r\n                this._fire(CLICK, {\r\n                    evt: evt,\r\n                    target: this,\r\n                    currentTarget: this,\r\n                    pointerId: pointerId,\r\n                });\r\n            }\r\n            if (fireDblClick) {\r\n                this._fire(DBL_CLICK, {\r\n                    evt: evt,\r\n                    target: this,\r\n                    currentTarget: this,\r\n                    pointerId: pointerId,\r\n                });\r\n            }\r\n        }\r\n        this._fire(CONTENT_MOUSEUP, { evt: evt });\r\n        if (Global_1.Konva.listenClickTap) {\r\n            this._fire(CONTENT_CLICK, { evt: evt });\r\n            if (fireDblClick) {\r\n                this._fire(CONTENT_DBL_CLICK, { evt: evt });\r\n            }\r\n        }\r\n        Global_1.Konva.listenClickTap = false;\r\n        if (evt.cancelable) {\r\n            evt.preventDefault();\r\n        }\r\n    };\r\n    Stage.prototype._contextmenu = function (evt) {\r\n        this.setPointersPositions(evt);\r\n        var shape = this.getIntersection(this.getPointerPosition());\r\n        if (shape && shape.isListening()) {\r\n            shape._fireAndBubble(CONTEXTMENU, { evt: evt });\r\n        }\r\n        else {\r\n            this._fire(CONTEXTMENU, {\r\n                evt: evt,\r\n                target: this,\r\n                currentTarget: this,\r\n            });\r\n        }\r\n        this._fire(CONTENT_CONTEXTMENU, { evt: evt });\r\n    };\r\n    Stage.prototype._touchstart = function (evt) {\r\n        var _this = this;\r\n        this.setPointersPositions(evt);\r\n        var triggeredOnShape = false;\r\n        this._changedPointerPositions.forEach(function (pos) {\r\n            var shape = _this.getIntersection(pos);\r\n            Global_1.Konva.listenClickTap = true;\r\n            DragAndDrop_1.DD.justDragged = false;\r\n            var hasShape = shape && shape.isListening();\r\n            if (!hasShape) {\r\n                return;\r\n            }\r\n            if (Global_1.Konva.captureTouchEventsEnabled) {\r\n                shape.setPointerCapture(pos.id);\r\n            }\r\n            _this.tapStartShape = shape;\r\n            shape._fireAndBubble(TOUCHSTART, { evt: evt, pointerId: pos.id }, _this);\r\n            triggeredOnShape = true;\r\n            if (shape.isListening() && shape.preventDefault() && evt.cancelable) {\r\n                evt.preventDefault();\r\n            }\r\n        });\r\n        if (!triggeredOnShape) {\r\n            this._fire(TOUCHSTART, {\r\n                evt: evt,\r\n                target: this,\r\n                currentTarget: this,\r\n                pointerId: this._changedPointerPositions[0].id,\r\n            });\r\n        }\r\n        this._fire(CONTENT_TOUCHSTART, { evt: evt });\r\n    };\r\n    Stage.prototype._touchmove = function (evt) {\r\n        var _this = this;\r\n        this.setPointersPositions(evt);\r\n        var eventsEnabled = !DragAndDrop_1.DD.isDragging || Global_1.Konva.hitOnDragEnabled;\r\n        if (eventsEnabled) {\r\n            var triggeredOnShape = false;\r\n            var processedShapesIds = {};\r\n            this._changedPointerPositions.forEach(function (pos) {\r\n                var shape = PointerEvents.getCapturedShape(pos.id) || _this.getIntersection(pos);\r\n                var hasShape = shape && shape.isListening();\r\n                if (!hasShape) {\r\n                    return;\r\n                }\r\n                if (processedShapesIds[shape._id]) {\r\n                    return;\r\n                }\r\n                processedShapesIds[shape._id] = true;\r\n                shape._fireAndBubble(TOUCHMOVE, { evt: evt, pointerId: pos.id });\r\n                triggeredOnShape = true;\r\n                if (shape.isListening() && shape.preventDefault() && evt.cancelable) {\r\n                    evt.preventDefault();\r\n                }\r\n            });\r\n            if (!triggeredOnShape) {\r\n                this._fire(TOUCHMOVE, {\r\n                    evt: evt,\r\n                    target: this,\r\n                    currentTarget: this,\r\n                    pointerId: this._changedPointerPositions[0].id,\r\n                });\r\n            }\r\n            this._fire(CONTENT_TOUCHMOVE, { evt: evt });\r\n        }\r\n        if (DragAndDrop_1.DD.isDragging && DragAndDrop_1.DD.node.preventDefault() && evt.cancelable) {\r\n            evt.preventDefault();\r\n        }\r\n    };\r\n    Stage.prototype._touchend = function (evt) {\r\n        var _this = this;\r\n        this.setPointersPositions(evt);\r\n        var tapEndShape = this.tapEndShape, fireDblClick = false;\r\n        if (Global_1.Konva.inDblClickWindow) {\r\n            fireDblClick = true;\r\n            clearTimeout(this.dblTimeout);\r\n        }\r\n        else if (!DragAndDrop_1.DD.justDragged) {\r\n            Global_1.Konva.inDblClickWindow = true;\r\n            clearTimeout(this.dblTimeout);\r\n        }\r\n        this.dblTimeout = setTimeout(function () {\r\n            Global_1.Konva.inDblClickWindow = false;\r\n        }, Global_1.Konva.dblClickWindow);\r\n        var triggeredOnShape = false;\r\n        var processedShapesIds = {};\r\n        var tapTriggered = false;\r\n        var dblTapTriggered = false;\r\n        this._changedPointerPositions.forEach(function (pos) {\r\n            var shape = PointerEvents.getCapturedShape(pos.id) ||\r\n                _this.getIntersection(pos);\r\n            if (shape) {\r\n                shape.releaseCapture(pos.id);\r\n            }\r\n            var hasShape = shape && shape.isListening();\r\n            if (!hasShape) {\r\n                return;\r\n            }\r\n            if (processedShapesIds[shape._id]) {\r\n                return;\r\n            }\r\n            processedShapesIds[shape._id] = true;\r\n            _this.tapEndShape = shape;\r\n            shape._fireAndBubble(TOUCHEND, { evt: evt, pointerId: pos.id });\r\n            triggeredOnShape = true;\r\n            if (Global_1.Konva.listenClickTap && shape === _this.tapStartShape) {\r\n                tapTriggered = true;\r\n                shape._fireAndBubble(TAP, { evt: evt, pointerId: pos.id });\r\n                if (fireDblClick && tapEndShape && tapEndShape === shape) {\r\n                    dblTapTriggered = true;\r\n                    shape._fireAndBubble(DBL_TAP, { evt: evt, pointerId: pos.id });\r\n                }\r\n            }\r\n            if (shape.isListening() && shape.preventDefault() && evt.cancelable) {\r\n                evt.preventDefault();\r\n            }\r\n        });\r\n        if (!triggeredOnShape) {\r\n            this._fire(TOUCHEND, {\r\n                evt: evt,\r\n                target: this,\r\n                currentTarget: this,\r\n                pointerId: this._changedPointerPositions[0].id,\r\n            });\r\n        }\r\n        if (Global_1.Konva.listenClickTap && !tapTriggered) {\r\n            this.tapEndShape = null;\r\n            this._fire(TAP, {\r\n                evt: evt,\r\n                target: this,\r\n                currentTarget: this,\r\n                pointerId: this._changedPointerPositions[0].id,\r\n            });\r\n        }\r\n        if (fireDblClick && !dblTapTriggered) {\r\n            this._fire(DBL_TAP, {\r\n                evt: evt,\r\n                target: this,\r\n                currentTarget: this,\r\n                pointerId: this._changedPointerPositions[0].id,\r\n            });\r\n        }\r\n        this._fire(CONTENT_TOUCHEND, { evt: evt });\r\n        if (Global_1.Konva.listenClickTap) {\r\n            this._fire(CONTENT_TAP, { evt: evt });\r\n            if (fireDblClick) {\r\n                this._fire(CONTENT_DBL_TAP, { evt: evt });\r\n            }\r\n        }\r\n        if (this.preventDefault() && evt.cancelable) {\r\n            evt.preventDefault();\r\n        }\r\n        Global_1.Konva.listenClickTap = false;\r\n    };\r\n    Stage.prototype._wheel = function (evt) {\r\n        this.setPointersPositions(evt);\r\n        var shape = this.getIntersection(this.getPointerPosition());\r\n        if (shape && shape.isListening()) {\r\n            shape._fireAndBubble(WHEEL, { evt: evt });\r\n        }\r\n        else {\r\n            this._fire(WHEEL, {\r\n                evt: evt,\r\n                target: this,\r\n                currentTarget: this,\r\n            });\r\n        }\r\n        this._fire(CONTENT_WHEEL, { evt: evt });\r\n    };\r\n    Stage.prototype._pointerdown = function (evt) {\r\n        if (!Global_1.Konva._pointerEventsEnabled) {\r\n            return;\r\n        }\r\n        this.setPointersPositions(evt);\r\n        var shape = PointerEvents.getCapturedShape(evt.pointerId) ||\r\n            this.getIntersection(this.getPointerPosition());\r\n        if (shape) {\r\n            shape._fireAndBubble(POINTERDOWN, PointerEvents.createEvent(evt));\r\n        }\r\n    };\r\n    Stage.prototype._pointermove = function (evt) {\r\n        if (!Global_1.Konva._pointerEventsEnabled) {\r\n            return;\r\n        }\r\n        this.setPointersPositions(evt);\r\n        var shape = PointerEvents.getCapturedShape(evt.pointerId) ||\r\n            this.getIntersection(this.getPointerPosition());\r\n        if (shape) {\r\n            shape._fireAndBubble(POINTERMOVE, PointerEvents.createEvent(evt));\r\n        }\r\n    };\r\n    Stage.prototype._pointerup = function (evt) {\r\n        if (!Global_1.Konva._pointerEventsEnabled) {\r\n            return;\r\n        }\r\n        this.setPointersPositions(evt);\r\n        var shape = PointerEvents.getCapturedShape(evt.pointerId) ||\r\n            this.getIntersection(this.getPointerPosition());\r\n        if (shape) {\r\n            shape._fireAndBubble(POINTERUP, PointerEvents.createEvent(evt));\r\n        }\r\n        PointerEvents.releaseCapture(evt.pointerId);\r\n    };\r\n    Stage.prototype._pointercancel = function (evt) {\r\n        if (!Global_1.Konva._pointerEventsEnabled) {\r\n            return;\r\n        }\r\n        this.setPointersPositions(evt);\r\n        var shape = PointerEvents.getCapturedShape(evt.pointerId) ||\r\n            this.getIntersection(this.getPointerPosition());\r\n        if (shape) {\r\n            shape._fireAndBubble(POINTERUP, PointerEvents.createEvent(evt));\r\n        }\r\n        PointerEvents.releaseCapture(evt.pointerId);\r\n    };\r\n    Stage.prototype._lostpointercapture = function (evt) {\r\n        PointerEvents.releaseCapture(evt.pointerId);\r\n    };\r\n    Stage.prototype.setPointersPositions = function (evt) {\r\n        var _this = this;\r\n        var contentPosition = this._getContentPosition(), x = null, y = null;\r\n        evt = evt ? evt : window.event;\r\n        if (evt.touches !== undefined) {\r\n            this._pointerPositions = [];\r\n            this._changedPointerPositions = [];\r\n            Util_1.Collection.prototype.each.call(evt.touches, function (touch) {\r\n                _this._pointerPositions.push({\r\n                    id: touch.identifier,\r\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\r\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\r\n                });\r\n            });\r\n            Util_1.Collection.prototype.each.call(evt.changedTouches || evt.touches, function (touch) {\r\n                _this._changedPointerPositions.push({\r\n                    id: touch.identifier,\r\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\r\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            x = (evt.clientX - contentPosition.left) / contentPosition.scaleX;\r\n            y = (evt.clientY - contentPosition.top) / contentPosition.scaleY;\r\n            this.pointerPos = {\r\n                x: x,\r\n                y: y,\r\n            };\r\n            this._pointerPositions = [{ x: x, y: y, id: Util_1.Util._getFirstPointerId(evt) }];\r\n            this._changedPointerPositions = [\r\n                { x: x, y: y, id: Util_1.Util._getFirstPointerId(evt) },\r\n            ];\r\n        }\r\n    };\r\n    Stage.prototype._setPointerPosition = function (evt) {\r\n        Util_1.Util.warn('Method _setPointerPosition is deprecated. Use \"stage.setPointersPositions(event)\" instead.');\r\n        this.setPointersPositions(evt);\r\n    };\r\n    Stage.prototype._getContentPosition = function () {\r\n        if (!this.content || !this.content.getBoundingClientRect) {\r\n            return {\r\n                top: 0,\r\n                left: 0,\r\n                scaleX: 1,\r\n                scaleY: 1,\r\n            };\r\n        }\r\n        var rect = this.content.getBoundingClientRect();\r\n        return {\r\n            top: rect.top,\r\n            left: rect.left,\r\n            scaleX: rect.width / this.content.clientWidth || 1,\r\n            scaleY: rect.height / this.content.clientHeight || 1,\r\n        };\r\n    };\r\n    Stage.prototype._buildDOM = function () {\r\n        this.bufferCanvas = new Canvas_1.SceneCanvas({\r\n            width: this.width(),\r\n            height: this.height(),\r\n        });\r\n        this.bufferHitCanvas = new Canvas_1.HitCanvas({\r\n            pixelRatio: 1,\r\n            width: this.width(),\r\n            height: this.height(),\r\n        });\r\n        if (!Global_1.Konva.isBrowser) {\r\n            return;\r\n        }\r\n        var container = this.container();\r\n        if (!container) {\r\n            throw 'Stage has no container. A container is required.';\r\n        }\r\n        container.innerHTML = EMPTY_STRING;\r\n        this.content = document.createElement('div');\r\n        this.content.style.position = RELATIVE;\r\n        this.content.style.userSelect = 'none';\r\n        this.content.className = KONVA_CONTENT;\r\n        this.content.setAttribute('role', 'presentation');\r\n        container.appendChild(this.content);\r\n        this._resizeDOM();\r\n    };\r\n    Stage.prototype.cache = function () {\r\n        Util_1.Util.warn('Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.');\r\n        return this;\r\n    };\r\n    Stage.prototype.clearCache = function () {\r\n        return this;\r\n    };\r\n    Stage.prototype.batchDraw = function () {\r\n        this.children.each(function (layer) {\r\n            layer.batchDraw();\r\n        });\r\n        return this;\r\n    };\r\n    return Stage;\r\n}(Container_1.Container));\r\nexports.Stage = Stage;\r\nStage.prototype.nodeType = STAGE;\r\nGlobal_2._registerNode(Stage);\r\nFactory_1.Factory.addGetterSetter(Stage, 'container');\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Shape = exports.shapes = void 0;\r\nvar Util_1 = require(\"./Util\");\r\nvar Factory_1 = require(\"./Factory\");\r\nvar Node_1 = require(\"./Node\");\r\nvar Validators_1 = require(\"./Validators\");\r\nvar Global_1 = require(\"./Global\");\r\nvar PointerEvents = require(\"./PointerEvents\");\r\nvar HAS_SHADOW = 'hasShadow';\r\nvar SHADOW_RGBA = 'shadowRGBA';\r\nvar patternImage = 'patternImage';\r\nvar linearGradient = 'linearGradient';\r\nvar radialGradient = 'radialGradient';\r\nvar dummyContext;\r\nfunction getDummyContext() {\r\n    if (dummyContext) {\r\n        return dummyContext;\r\n    }\r\n    dummyContext = Util_1.Util.createCanvasElement().getContext('2d');\r\n    return dummyContext;\r\n}\r\nexports.shapes = {};\r\nfunction _fillFunc(context) {\r\n    context.fill();\r\n}\r\nfunction _strokeFunc(context) {\r\n    context.stroke();\r\n}\r\nfunction _fillFuncHit(context) {\r\n    context.fill();\r\n}\r\nfunction _strokeFuncHit(context) {\r\n    context.stroke();\r\n}\r\nfunction _clearHasShadowCache() {\r\n    this._clearCache(HAS_SHADOW);\r\n}\r\nfunction _clearGetShadowRGBACache() {\r\n    this._clearCache(SHADOW_RGBA);\r\n}\r\nfunction _clearFillPatternCache() {\r\n    this._clearCache(patternImage);\r\n}\r\nfunction _clearLinearGradientCache() {\r\n    this._clearCache(linearGradient);\r\n}\r\nfunction _clearRadialGradientCache() {\r\n    this._clearCache(radialGradient);\r\n}\r\nvar Shape = (function (_super) {\r\n    __extends(Shape, _super);\r\n    function Shape(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        var key;\r\n        while (true) {\r\n            key = Util_1.Util.getRandomColor();\r\n            if (key && !(key in exports.shapes)) {\r\n                break;\r\n            }\r\n        }\r\n        _this.colorKey = key;\r\n        exports.shapes[key] = _this;\r\n        return _this;\r\n    }\r\n    Shape.prototype.getContext = function () {\r\n        return this.getLayer().getContext();\r\n    };\r\n    Shape.prototype.getCanvas = function () {\r\n        return this.getLayer().getCanvas();\r\n    };\r\n    Shape.prototype.getSceneFunc = function () {\r\n        return this.attrs.sceneFunc || this['_sceneFunc'];\r\n    };\r\n    Shape.prototype.getHitFunc = function () {\r\n        return this.attrs.hitFunc || this['_hitFunc'];\r\n    };\r\n    Shape.prototype.hasShadow = function () {\r\n        return this._getCache(HAS_SHADOW, this._hasShadow);\r\n    };\r\n    Shape.prototype._hasShadow = function () {\r\n        return (this.shadowEnabled() &&\r\n            this.shadowOpacity() !== 0 &&\r\n            !!(this.shadowColor() ||\r\n                this.shadowBlur() ||\r\n                this.shadowOffsetX() ||\r\n                this.shadowOffsetY()));\r\n    };\r\n    Shape.prototype._getFillPattern = function () {\r\n        return this._getCache(patternImage, this.__getFillPattern);\r\n    };\r\n    Shape.prototype.__getFillPattern = function () {\r\n        if (this.fillPatternImage()) {\r\n            var ctx = getDummyContext();\r\n            var pattern = ctx.createPattern(this.fillPatternImage(), this.fillPatternRepeat() || 'repeat');\r\n            if (pattern && pattern.setTransform) {\r\n                pattern.setTransform({\r\n                    a: this.fillPatternScaleX(),\r\n                    b: 0,\r\n                    c: 0,\r\n                    d: this.fillPatternScaleY(),\r\n                    e: 0,\r\n                    f: 0,\r\n                });\r\n            }\r\n            return pattern;\r\n        }\r\n    };\r\n    Shape.prototype._getLinearGradient = function () {\r\n        return this._getCache(linearGradient, this.__getLinearGradient);\r\n    };\r\n    Shape.prototype.__getLinearGradient = function () {\r\n        var colorStops = this.fillLinearGradientColorStops();\r\n        if (colorStops) {\r\n            var ctx = getDummyContext();\r\n            var start = this.fillLinearGradientStartPoint();\r\n            var end = this.fillLinearGradientEndPoint();\r\n            var grd = ctx.createLinearGradient(start.x, start.y, end.x, end.y);\r\n            for (var n = 0; n < colorStops.length; n += 2) {\r\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\r\n            }\r\n            return grd;\r\n        }\r\n    };\r\n    Shape.prototype._getRadialGradient = function () {\r\n        return this._getCache(radialGradient, this.__getRadialGradient);\r\n    };\r\n    Shape.prototype.__getRadialGradient = function () {\r\n        var colorStops = this.fillRadialGradientColorStops();\r\n        if (colorStops) {\r\n            var ctx = getDummyContext();\r\n            var start = this.fillRadialGradientStartPoint();\r\n            var end = this.fillRadialGradientEndPoint();\r\n            var grd = ctx.createRadialGradient(start.x, start.y, this.fillRadialGradientStartRadius(), end.x, end.y, this.fillRadialGradientEndRadius());\r\n            for (var n = 0; n < colorStops.length; n += 2) {\r\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\r\n            }\r\n            return grd;\r\n        }\r\n    };\r\n    Shape.prototype.getShadowRGBA = function () {\r\n        return this._getCache(SHADOW_RGBA, this._getShadowRGBA);\r\n    };\r\n    Shape.prototype._getShadowRGBA = function () {\r\n        if (this.hasShadow()) {\r\n            var rgba = Util_1.Util.colorToRGBA(this.shadowColor());\r\n            return ('rgba(' +\r\n                rgba.r +\r\n                ',' +\r\n                rgba.g +\r\n                ',' +\r\n                rgba.b +\r\n                ',' +\r\n                rgba.a * (this.shadowOpacity() || 1) +\r\n                ')');\r\n        }\r\n    };\r\n    Shape.prototype.hasFill = function () {\r\n        var _this = this;\r\n        return this._calculate('hasFill', [\r\n            'fillEnabled',\r\n            'fill',\r\n            'fillPatternImage',\r\n            'fillLinearGradientColorStops',\r\n            'fillRadialGradientColorStops',\r\n        ], function () {\r\n            return (_this.fillEnabled() &&\r\n                !!(_this.fill() ||\r\n                    _this.fillPatternImage() ||\r\n                    _this.fillLinearGradientColorStops() ||\r\n                    _this.fillRadialGradientColorStops()));\r\n        });\r\n    };\r\n    Shape.prototype.hasStroke = function () {\r\n        var _this = this;\r\n        return this._calculate('hasStroke', [\r\n            'strokeEnabled',\r\n            'strokeWidth',\r\n            'stroke',\r\n            'strokeLinearGradientColorStops',\r\n        ], function () {\r\n            return (_this.strokeEnabled() &&\r\n                _this.strokeWidth() &&\r\n                !!(_this.stroke() || _this.strokeLinearGradientColorStops()));\r\n        });\r\n    };\r\n    Shape.prototype.hasHitStroke = function () {\r\n        var width = this.hitStrokeWidth();\r\n        if (width === 'auto') {\r\n            return this.hasStroke();\r\n        }\r\n        return this.strokeEnabled() && !!width;\r\n    };\r\n    Shape.prototype.intersects = function (point) {\r\n        var stage = this.getStage(), bufferHitCanvas = stage.bufferHitCanvas, p;\r\n        bufferHitCanvas.getContext().clear();\r\n        this.drawHit(bufferHitCanvas, null, true);\r\n        p = bufferHitCanvas.context.getImageData(Math.round(point.x), Math.round(point.y), 1, 1).data;\r\n        return p[3] > 0;\r\n    };\r\n    Shape.prototype.destroy = function () {\r\n        Node_1.Node.prototype.destroy.call(this);\r\n        delete exports.shapes[this.colorKey];\r\n        delete this.colorKey;\r\n        return this;\r\n    };\r\n    Shape.prototype._useBufferCanvas = function (forceFill) {\r\n        var _a;\r\n        if (!this.getStage()) {\r\n            return false;\r\n        }\r\n        var perfectDrawEnabled = (_a = this.attrs.perfectDrawEnabled) !== null && _a !== void 0 ? _a : true;\r\n        if (!perfectDrawEnabled) {\r\n            return false;\r\n        }\r\n        var hasFill = forceFill || this.hasFill();\r\n        var hasStroke = this.hasStroke();\r\n        var isTransparent = this.getAbsoluteOpacity() !== 1;\r\n        if (hasFill && hasStroke && isTransparent) {\r\n            return true;\r\n        }\r\n        var hasShadow = this.hasShadow();\r\n        var strokeForShadow = this.shadowForStrokeEnabled();\r\n        if (hasFill && hasStroke && hasShadow && strokeForShadow) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Shape.prototype.setStrokeHitEnabled = function (val) {\r\n        Util_1.Util.warn('strokeHitEnabled property is deprecated. Please use hitStrokeWidth instead.');\r\n        if (val) {\r\n            this.hitStrokeWidth('auto');\r\n        }\r\n        else {\r\n            this.hitStrokeWidth(0);\r\n        }\r\n    };\r\n    Shape.prototype.getStrokeHitEnabled = function () {\r\n        if (this.hitStrokeWidth() === 0) {\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    };\r\n    Shape.prototype.getSelfRect = function () {\r\n        var size = this.size();\r\n        return {\r\n            x: this._centroid ? -size.width / 2 : 0,\r\n            y: this._centroid ? -size.height / 2 : 0,\r\n            width: size.width,\r\n            height: size.height,\r\n        };\r\n    };\r\n    Shape.prototype.getClientRect = function (config) {\r\n        if (config === void 0) { config = {}; }\r\n        var skipTransform = config.skipTransform;\r\n        var relativeTo = config.relativeTo;\r\n        var fillRect = this.getSelfRect();\r\n        var applyStroke = !config.skipStroke && this.hasStroke();\r\n        var strokeWidth = (applyStroke && this.strokeWidth()) || 0;\r\n        var fillAndStrokeWidth = fillRect.width + strokeWidth;\r\n        var fillAndStrokeHeight = fillRect.height + strokeWidth;\r\n        var applyShadow = !config.skipShadow && this.hasShadow();\r\n        var shadowOffsetX = applyShadow ? this.shadowOffsetX() : 0;\r\n        var shadowOffsetY = applyShadow ? this.shadowOffsetY() : 0;\r\n        var preWidth = fillAndStrokeWidth + Math.abs(shadowOffsetX);\r\n        var preHeight = fillAndStrokeHeight + Math.abs(shadowOffsetY);\r\n        var blurRadius = (applyShadow && this.shadowBlur()) || 0;\r\n        var width = preWidth + blurRadius * 2;\r\n        var height = preHeight + blurRadius * 2;\r\n        var roundingOffset = 0;\r\n        if (Math.round(strokeWidth / 2) !== strokeWidth / 2) {\r\n            roundingOffset = 1;\r\n        }\r\n        var rect = {\r\n            width: width + roundingOffset,\r\n            height: height + roundingOffset,\r\n            x: -Math.round(strokeWidth / 2 + blurRadius) +\r\n                Math.min(shadowOffsetX, 0) +\r\n                fillRect.x,\r\n            y: -Math.round(strokeWidth / 2 + blurRadius) +\r\n                Math.min(shadowOffsetY, 0) +\r\n                fillRect.y,\r\n        };\r\n        if (!skipTransform) {\r\n            return this._transformedRect(rect, relativeTo);\r\n        }\r\n        return rect;\r\n    };\r\n    Shape.prototype.drawScene = function (can, top) {\r\n        var layer = this.getLayer(), canvas = can || layer.getCanvas(), context = canvas.getContext(), cachedCanvas = this._getCanvasCache(), drawFunc = this.getSceneFunc(), hasShadow = this.hasShadow(), stage, bufferCanvas, bufferContext;\r\n        var caching = canvas.isCache;\r\n        var skipBuffer = canvas.isCache;\r\n        var cachingSelf = top === this;\r\n        if (!this.isVisible() && !caching) {\r\n            return this;\r\n        }\r\n        if (cachedCanvas) {\r\n            context.save();\r\n            var m = this.getAbsoluteTransform(top).getMatrix();\r\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n            this._drawCachedSceneCanvas(context);\r\n            context.restore();\r\n            return this;\r\n        }\r\n        if (!drawFunc) {\r\n            return this;\r\n        }\r\n        context.save();\r\n        if (this._useBufferCanvas() && !skipBuffer) {\r\n            stage = this.getStage();\r\n            bufferCanvas = stage.bufferCanvas;\r\n            bufferContext = bufferCanvas.getContext();\r\n            bufferContext.clear();\r\n            bufferContext.save();\r\n            bufferContext._applyLineJoin(this);\r\n            var o = this.getAbsoluteTransform(top).getMatrix();\r\n            bufferContext.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\r\n            drawFunc.call(this, bufferContext, this);\r\n            bufferContext.restore();\r\n            var ratio = bufferCanvas.pixelRatio;\r\n            if (hasShadow) {\r\n                context._applyShadow(this);\r\n            }\r\n            context._applyOpacity(this);\r\n            context._applyGlobalCompositeOperation(this);\r\n            context.drawImage(bufferCanvas._canvas, 0, 0, bufferCanvas.width / ratio, bufferCanvas.height / ratio);\r\n        }\r\n        else {\r\n            context._applyLineJoin(this);\r\n            if (!cachingSelf) {\r\n                var o = this.getAbsoluteTransform(top).getMatrix();\r\n                context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\r\n                context._applyOpacity(this);\r\n                context._applyGlobalCompositeOperation(this);\r\n            }\r\n            if (hasShadow) {\r\n                context._applyShadow(this);\r\n            }\r\n            drawFunc.call(this, context, this);\r\n        }\r\n        context.restore();\r\n        return this;\r\n    };\r\n    Shape.prototype.drawHit = function (can, top, skipDragCheck) {\r\n        if (skipDragCheck === void 0) { skipDragCheck = false; }\r\n        if (!this.shouldDrawHit(top, skipDragCheck)) {\r\n            return this;\r\n        }\r\n        var layer = this.getLayer(), canvas = can || layer.hitCanvas, context = canvas && canvas.getContext(), drawFunc = this.hitFunc() || this.sceneFunc(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\r\n        if (!this.colorKey) {\r\n            console.log(this);\r\n            Util_1.Util.warn('Looks like your canvas has a destroyed shape in it. Do not reuse shape after you destroyed it. See the shape in logs above. If you want to reuse shape you should call remove() instead of destroy()');\r\n        }\r\n        if (cachedHitCanvas) {\r\n            context.save();\r\n            var m = this.getAbsoluteTransform(top).getMatrix();\r\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n            this._drawCachedHitCanvas(context);\r\n            context.restore();\r\n            return this;\r\n        }\r\n        if (!drawFunc) {\r\n            return this;\r\n        }\r\n        context.save();\r\n        context._applyLineJoin(this);\r\n        var selfCache = this === top;\r\n        if (!selfCache) {\r\n            var o = this.getAbsoluteTransform(top).getMatrix();\r\n            context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\r\n        }\r\n        drawFunc.call(this, context, this);\r\n        context.restore();\r\n        return this;\r\n    };\r\n    Shape.prototype.drawHitFromCache = function (alphaThreshold) {\r\n        if (alphaThreshold === void 0) { alphaThreshold = 0; }\r\n        var cachedCanvas = this._getCanvasCache(), sceneCanvas = this._getCachedSceneCanvas(), hitCanvas = cachedCanvas.hit, hitContext = hitCanvas.getContext(), hitWidth = hitCanvas.getWidth(), hitHeight = hitCanvas.getHeight(), hitImageData, hitData, len, rgbColorKey, i, alpha;\r\n        hitContext.clear();\r\n        hitContext.drawImage(sceneCanvas._canvas, 0, 0, hitWidth, hitHeight);\r\n        try {\r\n            hitImageData = hitContext.getImageData(0, 0, hitWidth, hitHeight);\r\n            hitData = hitImageData.data;\r\n            len = hitData.length;\r\n            rgbColorKey = Util_1.Util._hexToRgb(this.colorKey);\r\n            for (i = 0; i < len; i += 4) {\r\n                alpha = hitData[i + 3];\r\n                if (alpha > alphaThreshold) {\r\n                    hitData[i] = rgbColorKey.r;\r\n                    hitData[i + 1] = rgbColorKey.g;\r\n                    hitData[i + 2] = rgbColorKey.b;\r\n                    hitData[i + 3] = 255;\r\n                }\r\n                else {\r\n                    hitData[i + 3] = 0;\r\n                }\r\n            }\r\n            hitContext.putImageData(hitImageData, 0, 0);\r\n        }\r\n        catch (e) {\r\n            Util_1.Util.error('Unable to draw hit graph from cached scene canvas. ' + e.message);\r\n        }\r\n        return this;\r\n    };\r\n    Shape.prototype.hasPointerCapture = function (pointerId) {\r\n        return PointerEvents.hasPointerCapture(pointerId, this);\r\n    };\r\n    Shape.prototype.setPointerCapture = function (pointerId) {\r\n        PointerEvents.setPointerCapture(pointerId, this);\r\n    };\r\n    Shape.prototype.releaseCapture = function (pointerId) {\r\n        PointerEvents.releaseCapture(pointerId, this);\r\n    };\r\n    return Shape;\r\n}(Node_1.Node));\r\nexports.Shape = Shape;\r\nShape.prototype._fillFunc = _fillFunc;\r\nShape.prototype._strokeFunc = _strokeFunc;\r\nShape.prototype._fillFuncHit = _fillFuncHit;\r\nShape.prototype._strokeFuncHit = _strokeFuncHit;\r\nShape.prototype._centroid = false;\r\nShape.prototype.nodeType = 'Shape';\r\nGlobal_1._registerNode(Shape);\r\nShape.prototype.eventListeners = {};\r\nShape.prototype.on.call(Shape.prototype, 'shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearHasShadowCache);\r\nShape.prototype.on.call(Shape.prototype, 'shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearGetShadowRGBACache);\r\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillPatternImageChange.konva fillPatternRepeatChange.konva fillPatternScaleXChange.konva fillPatternScaleYChange.konva', _clearFillPatternCache);\r\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillLinearGradientColorStopsChange.konva fillLinearGradientStartPointXChange.konva fillLinearGradientStartPointYChange.konva fillLinearGradientEndPointXChange.konva fillLinearGradientEndPointYChange.konva', _clearLinearGradientCache);\r\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillRadialGradientColorStopsChange.konva fillRadialGradientStartPointXChange.konva fillRadialGradientStartPointYChange.konva fillRadialGradientEndPointXChange.konva fillRadialGradientEndPointYChange.konva fillRadialGradientStartRadiusChange.konva fillRadialGradientEndRadiusChange.konva', _clearRadialGradientCache);\r\nFactory_1.Factory.addGetterSetter(Shape, 'stroke', undefined, Validators_1.getStringOrGradientValidator());\r\nFactory_1.Factory.addGetterSetter(Shape, 'strokeWidth', 2, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillAfterStrokeEnabled', false);\r\nFactory_1.Factory.addGetterSetter(Shape, 'hitStrokeWidth', 'auto', Validators_1.getNumberOrAutoValidator());\r\nFactory_1.Factory.addGetterSetter(Shape, 'strokeHitEnabled', true, Validators_1.getBooleanValidator());\r\nFactory_1.Factory.addGetterSetter(Shape, 'perfectDrawEnabled', true, Validators_1.getBooleanValidator());\r\nFactory_1.Factory.addGetterSetter(Shape, 'shadowForStrokeEnabled', true, Validators_1.getBooleanValidator());\r\nFactory_1.Factory.addGetterSetter(Shape, 'lineJoin');\r\nFactory_1.Factory.addGetterSetter(Shape, 'lineCap');\r\nFactory_1.Factory.addGetterSetter(Shape, 'sceneFunc');\r\nFactory_1.Factory.addGetterSetter(Shape, 'hitFunc');\r\nFactory_1.Factory.addGetterSetter(Shape, 'dash');\r\nFactory_1.Factory.addGetterSetter(Shape, 'dashOffset', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Shape, 'shadowColor', undefined, Validators_1.getStringValidator());\r\nFactory_1.Factory.addGetterSetter(Shape, 'shadowBlur', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Shape, 'shadowOpacity', 1, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'shadowOffset', ['x', 'y']);\r\nFactory_1.Factory.addGetterSetter(Shape, 'shadowOffsetX', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Shape, 'shadowOffsetY', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternImage');\r\nFactory_1.Factory.addGetterSetter(Shape, 'fill', undefined, Validators_1.getStringOrGradientValidator());\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternX', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternY', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientColorStops');\r\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientColorStops');\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientStartRadius', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientEndRadius', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientColorStops');\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternRepeat', 'repeat');\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillEnabled', true);\r\nFactory_1.Factory.addGetterSetter(Shape, 'strokeEnabled', true);\r\nFactory_1.Factory.addGetterSetter(Shape, 'shadowEnabled', true);\r\nFactory_1.Factory.addGetterSetter(Shape, 'dashEnabled', true);\r\nFactory_1.Factory.addGetterSetter(Shape, 'strokeScaleEnabled', true);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillPriority', 'color');\r\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillPatternOffset', ['x', 'y']);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternOffsetX', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternOffsetY', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillPatternScale', ['x', 'y']);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternScaleX', 1, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternScaleY', 1, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillLinearGradientStartPoint', [\r\n    'x',\r\n    'y',\r\n]);\r\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'strokeLinearGradientStartPoint', [\r\n    'x',\r\n    'y',\r\n]);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientStartPointX', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientStartPointX', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientStartPointY', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientStartPointY', 0);\r\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillLinearGradientEndPoint', [\r\n    'x',\r\n    'y',\r\n]);\r\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'strokeLinearGradientEndPoint', [\r\n    'x',\r\n    'y',\r\n]);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientEndPointX', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientEndPointX', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientEndPointY', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientEndPointY', 0);\r\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillRadialGradientStartPoint', [\r\n    'x',\r\n    'y',\r\n]);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientStartPointX', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientStartPointY', 0);\r\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillRadialGradientEndPoint', [\r\n    'x',\r\n    'y',\r\n]);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientEndPointX', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientEndPointY', 0);\r\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternRotation', 0);\r\nFactory_1.Factory.backCompat(Shape, {\r\n    dashArray: 'dash',\r\n    getDashArray: 'getDash',\r\n    setDashArray: 'getDash',\r\n    drawFunc: 'sceneFunc',\r\n    getDrawFunc: 'getSceneFunc',\r\n    setDrawFunc: 'setSceneFunc',\r\n    drawHitFunc: 'hitFunc',\r\n    getDrawHitFunc: 'getHitFunc',\r\n    setDrawHitFunc: 'setHitFunc',\r\n});\r\nUtil_1.Collection.mapMethods(Shape);\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Layer = void 0;\r\nvar Util_1 = require(\"./Util\");\r\nvar Container_1 = require(\"./Container\");\r\nvar Node_1 = require(\"./Node\");\r\nvar Factory_1 = require(\"./Factory\");\r\nvar Canvas_1 = require(\"./Canvas\");\r\nvar Validators_1 = require(\"./Validators\");\r\nvar Shape_1 = require(\"./Shape\");\r\nvar Global_1 = require(\"./Global\");\r\nvar HASH = '#', BEFORE_DRAW = 'beforeDraw', DRAW = 'draw', INTERSECTION_OFFSETS = [\r\n    { x: 0, y: 0 },\r\n    { x: -1, y: -1 },\r\n    { x: 1, y: -1 },\r\n    { x: 1, y: 1 },\r\n    { x: -1, y: 1 },\r\n], INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\r\nvar Layer = (function (_super) {\r\n    __extends(Layer, _super);\r\n    function Layer(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.canvas = new Canvas_1.SceneCanvas();\r\n        _this.hitCanvas = new Canvas_1.HitCanvas({\r\n            pixelRatio: 1,\r\n        });\r\n        _this._waitingForDraw = false;\r\n        _this.on('visibleChange.konva', _this._checkVisibility);\r\n        _this._checkVisibility();\r\n        _this.on('imageSmoothingEnabledChange.konva', _this._setSmoothEnabled);\r\n        _this._setSmoothEnabled();\r\n        return _this;\r\n    }\r\n    Layer.prototype.createPNGStream = function () {\r\n        var c = this.canvas._canvas;\r\n        return c.createPNGStream();\r\n    };\r\n    Layer.prototype.getCanvas = function () {\r\n        return this.canvas;\r\n    };\r\n    Layer.prototype.getHitCanvas = function () {\r\n        return this.hitCanvas;\r\n    };\r\n    Layer.prototype.getContext = function () {\r\n        return this.getCanvas().getContext();\r\n    };\r\n    Layer.prototype.clear = function (bounds) {\r\n        this.getContext().clear(bounds);\r\n        this.getHitCanvas().getContext().clear(bounds);\r\n        return this;\r\n    };\r\n    Layer.prototype.setZIndex = function (index) {\r\n        _super.prototype.setZIndex.call(this, index);\r\n        var stage = this.getStage();\r\n        if (stage) {\r\n            stage.content.removeChild(this.getCanvas()._canvas);\r\n            if (index < stage.children.length - 1) {\r\n                stage.content.insertBefore(this.getCanvas()._canvas, stage.children[index + 1].getCanvas()._canvas);\r\n            }\r\n            else {\r\n                stage.content.appendChild(this.getCanvas()._canvas);\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Layer.prototype.moveToTop = function () {\r\n        Node_1.Node.prototype.moveToTop.call(this);\r\n        var stage = this.getStage();\r\n        if (stage) {\r\n            stage.content.removeChild(this.getCanvas()._canvas);\r\n            stage.content.appendChild(this.getCanvas()._canvas);\r\n        }\r\n        return true;\r\n    };\r\n    Layer.prototype.moveUp = function () {\r\n        var moved = Node_1.Node.prototype.moveUp.call(this);\r\n        if (!moved) {\r\n            return false;\r\n        }\r\n        var stage = this.getStage();\r\n        if (!stage) {\r\n            return false;\r\n        }\r\n        stage.content.removeChild(this.getCanvas()._canvas);\r\n        if (this.index < stage.children.length - 1) {\r\n            stage.content.insertBefore(this.getCanvas()._canvas, stage.children[this.index + 1].getCanvas()._canvas);\r\n        }\r\n        else {\r\n            stage.content.appendChild(this.getCanvas()._canvas);\r\n        }\r\n        return true;\r\n    };\r\n    Layer.prototype.moveDown = function () {\r\n        if (Node_1.Node.prototype.moveDown.call(this)) {\r\n            var stage = this.getStage();\r\n            if (stage) {\r\n                var children = stage.children;\r\n                stage.content.removeChild(this.getCanvas()._canvas);\r\n                stage.content.insertBefore(this.getCanvas()._canvas, children[this.index + 1].getCanvas()._canvas);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Layer.prototype.moveToBottom = function () {\r\n        if (Node_1.Node.prototype.moveToBottom.call(this)) {\r\n            var stage = this.getStage();\r\n            if (stage) {\r\n                var children = stage.children;\r\n                stage.content.removeChild(this.getCanvas()._canvas);\r\n                stage.content.insertBefore(this.getCanvas()._canvas, children[1].getCanvas()._canvas);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Layer.prototype.getLayer = function () {\r\n        return this;\r\n    };\r\n    Layer.prototype.remove = function () {\r\n        var _canvas = this.getCanvas()._canvas;\r\n        Node_1.Node.prototype.remove.call(this);\r\n        if (_canvas && _canvas.parentNode && Util_1.Util._isInDocument(_canvas)) {\r\n            _canvas.parentNode.removeChild(_canvas);\r\n        }\r\n        return this;\r\n    };\r\n    Layer.prototype.getStage = function () {\r\n        return this.parent;\r\n    };\r\n    Layer.prototype.setSize = function (_a) {\r\n        var width = _a.width, height = _a.height;\r\n        this.canvas.setSize(width, height);\r\n        this.hitCanvas.setSize(width, height);\r\n        this._setSmoothEnabled();\r\n        return this;\r\n    };\r\n    Layer.prototype._validateAdd = function (child) {\r\n        var type = child.getType();\r\n        if (type !== 'Group' && type !== 'Shape') {\r\n            Util_1.Util.throw('You may only add groups and shapes to a layer.');\r\n        }\r\n    };\r\n    Layer.prototype._toKonvaCanvas = function (config) {\r\n        config = config || {};\r\n        config.width = config.width || this.getWidth();\r\n        config.height = config.height || this.getHeight();\r\n        config.x = config.x !== undefined ? config.x : this.x();\r\n        config.y = config.y !== undefined ? config.y : this.y();\r\n        return Node_1.Node.prototype._toKonvaCanvas.call(this, config);\r\n    };\r\n    Layer.prototype._checkVisibility = function () {\r\n        var visible = this.visible();\r\n        if (visible) {\r\n            this.canvas._canvas.style.display = 'block';\r\n        }\r\n        else {\r\n            this.canvas._canvas.style.display = 'none';\r\n        }\r\n    };\r\n    Layer.prototype._setSmoothEnabled = function () {\r\n        this.getContext()._context.imageSmoothingEnabled = this.imageSmoothingEnabled();\r\n    };\r\n    Layer.prototype.getWidth = function () {\r\n        if (this.parent) {\r\n            return this.parent.width();\r\n        }\r\n    };\r\n    Layer.prototype.setWidth = function () {\r\n        Util_1.Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\r\n    };\r\n    Layer.prototype.getHeight = function () {\r\n        if (this.parent) {\r\n            return this.parent.height();\r\n        }\r\n    };\r\n    Layer.prototype.setHeight = function () {\r\n        Util_1.Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\r\n    };\r\n    Layer.prototype.batchDraw = function () {\r\n        var _this = this;\r\n        if (!this._waitingForDraw) {\r\n            this._waitingForDraw = true;\r\n            Util_1.Util.requestAnimFrame(function () {\r\n                _this.draw();\r\n                _this._waitingForDraw = false;\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    Layer.prototype.getIntersection = function (pos, selector) {\r\n        if (!this.isListening() || !this.isVisible()) {\r\n            return null;\r\n        }\r\n        var spiralSearchDistance = 1;\r\n        var continueSearch = false;\r\n        while (true) {\r\n            for (var i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\r\n                var intersectionOffset = INTERSECTION_OFFSETS[i];\r\n                var obj = this._getIntersection({\r\n                    x: pos.x + intersectionOffset.x * spiralSearchDistance,\r\n                    y: pos.y + intersectionOffset.y * spiralSearchDistance,\r\n                });\r\n                var shape = obj.shape;\r\n                if (shape && selector) {\r\n                    return shape.findAncestor(selector, true);\r\n                }\r\n                else if (shape) {\r\n                    return shape;\r\n                }\r\n                continueSearch = !!obj.antialiased;\r\n                if (!obj.antialiased) {\r\n                    break;\r\n                }\r\n            }\r\n            if (continueSearch) {\r\n                spiralSearchDistance += 1;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    Layer.prototype._getIntersection = function (pos) {\r\n        var ratio = this.hitCanvas.pixelRatio;\r\n        var p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data;\r\n        var p3 = p[3];\r\n        if (p3 === 255) {\r\n            var colorKey = Util_1.Util._rgbToHex(p[0], p[1], p[2]);\r\n            var shape = Shape_1.shapes[HASH + colorKey];\r\n            if (shape) {\r\n                return {\r\n                    shape: shape,\r\n                };\r\n            }\r\n            return {\r\n                antialiased: true,\r\n            };\r\n        }\r\n        else if (p3 > 0) {\r\n            return {\r\n                antialiased: true,\r\n            };\r\n        }\r\n        return {};\r\n    };\r\n    Layer.prototype.drawScene = function (can, top) {\r\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());\r\n        this._fire(BEFORE_DRAW, {\r\n            node: this,\r\n        });\r\n        if (this.clearBeforeDraw()) {\r\n            canvas.getContext().clear();\r\n        }\r\n        Container_1.Container.prototype.drawScene.call(this, canvas, top);\r\n        this._fire(DRAW, {\r\n            node: this,\r\n        });\r\n        return this;\r\n    };\r\n    Layer.prototype.drawHit = function (can, top) {\r\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas);\r\n        if (layer && layer.clearBeforeDraw()) {\r\n            layer.getHitCanvas().getContext().clear();\r\n        }\r\n        Container_1.Container.prototype.drawHit.call(this, canvas, top);\r\n        return this;\r\n    };\r\n    Layer.prototype.enableHitGraph = function () {\r\n        this.hitGraphEnabled(true);\r\n        return this;\r\n    };\r\n    Layer.prototype.disableHitGraph = function () {\r\n        this.hitGraphEnabled(false);\r\n        return this;\r\n    };\r\n    Layer.prototype.setHitGraphEnabled = function (val) {\r\n        Util_1.Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\r\n        this.listening(val);\r\n    };\r\n    Layer.prototype.getHitGraphEnabled = function (val) {\r\n        Util_1.Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\r\n        return this.listening();\r\n    };\r\n    Layer.prototype.toggleHitCanvas = function () {\r\n        if (!this.parent) {\r\n            return;\r\n        }\r\n        var parent = this.parent;\r\n        var added = !!this.hitCanvas._canvas.parentNode;\r\n        if (added) {\r\n            parent.content.removeChild(this.hitCanvas._canvas);\r\n        }\r\n        else {\r\n            parent.content.appendChild(this.hitCanvas._canvas);\r\n        }\r\n    };\r\n    return Layer;\r\n}(Container_1.Container));\r\nexports.Layer = Layer;\r\nLayer.prototype.nodeType = 'Layer';\r\nGlobal_1._registerNode(Layer);\r\nFactory_1.Factory.addGetterSetter(Layer, 'imageSmoothingEnabled', true);\r\nFactory_1.Factory.addGetterSetter(Layer, 'clearBeforeDraw', true);\r\nFactory_1.Factory.addGetterSetter(Layer, 'hitGraphEnabled', true, Validators_1.getBooleanValidator());\r\nUtil_1.Collection.mapMethods(Layer);\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FastLayer = void 0;\r\nvar Util_1 = require(\"./Util\");\r\nvar Layer_1 = require(\"./Layer\");\r\nvar Global_1 = require(\"./Global\");\r\nvar FastLayer = (function (_super) {\r\n    __extends(FastLayer, _super);\r\n    function FastLayer(attrs) {\r\n        var _this = _super.call(this, attrs) || this;\r\n        _this.listening(false);\r\n        Util_1.Util.warn('Konva.Fast layer is deprecated. Please use \"new Konva.Layer({ listening: false })\" instead.');\r\n        return _this;\r\n    }\r\n    return FastLayer;\r\n}(Layer_1.Layer));\r\nexports.FastLayer = FastLayer;\r\nFastLayer.prototype.nodeType = 'FastLayer';\r\nGlobal_1._registerNode(FastLayer);\r\nUtil_1.Collection.mapMethods(FastLayer);\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Group = void 0;\r\nvar Util_1 = require(\"./Util\");\r\nvar Container_1 = require(\"./Container\");\r\nvar Global_1 = require(\"./Global\");\r\nvar Group = (function (_super) {\r\n    __extends(Group, _super);\r\n    function Group() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Group.prototype._validateAdd = function (child) {\r\n        var type = child.getType();\r\n        if (type !== 'Group' && type !== 'Shape') {\r\n            Util_1.Util.throw('You may only add groups and shapes to groups.');\r\n        }\r\n    };\r\n    return Group;\r\n}(Container_1.Container));\r\nexports.Group = Group;\r\nGroup.prototype.nodeType = 'Group';\r\nGlobal_1._registerNode(Group);\r\nUtil_1.Collection.mapMethods(Group);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Animation = void 0;\r\nvar Global_1 = require(\"./Global\");\r\nvar now = (function () {\r\n    if (Global_1.glob.performance && Global_1.glob.performance.now) {\r\n        return function () {\r\n            return Global_1.glob.performance.now();\r\n        };\r\n    }\r\n    return function () {\r\n        return new Date().getTime();\r\n    };\r\n})();\r\nvar Animation = (function () {\r\n    function Animation(func, layers) {\r\n        this.id = Animation.animIdCounter++;\r\n        this.frame = {\r\n            time: 0,\r\n            timeDiff: 0,\r\n            lastTime: now(),\r\n            frameRate: 0\r\n        };\r\n        this.func = func;\r\n        this.setLayers(layers);\r\n    }\r\n    Animation.prototype.setLayers = function (layers) {\r\n        var lays = [];\r\n        if (!layers) {\r\n            lays = [];\r\n        }\r\n        else if (layers.length > 0) {\r\n            lays = layers;\r\n        }\r\n        else {\r\n            lays = [layers];\r\n        }\r\n        this.layers = lays;\r\n        return this;\r\n    };\r\n    Animation.prototype.getLayers = function () {\r\n        return this.layers;\r\n    };\r\n    Animation.prototype.addLayer = function (layer) {\r\n        var layers = this.layers, len = layers.length, n;\r\n        for (n = 0; n < len; n++) {\r\n            if (layers[n]._id === layer._id) {\r\n                return false;\r\n            }\r\n        }\r\n        this.layers.push(layer);\r\n        return true;\r\n    };\r\n    Animation.prototype.isRunning = function () {\r\n        var a = Animation, animations = a.animations, len = animations.length, n;\r\n        for (n = 0; n < len; n++) {\r\n            if (animations[n].id === this.id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Animation.prototype.start = function () {\r\n        this.stop();\r\n        this.frame.timeDiff = 0;\r\n        this.frame.lastTime = now();\r\n        Animation._addAnimation(this);\r\n        return this;\r\n    };\r\n    Animation.prototype.stop = function () {\r\n        Animation._removeAnimation(this);\r\n        return this;\r\n    };\r\n    Animation.prototype._updateFrameObject = function (time) {\r\n        this.frame.timeDiff = time - this.frame.lastTime;\r\n        this.frame.lastTime = time;\r\n        this.frame.time += this.frame.timeDiff;\r\n        this.frame.frameRate = 1000 / this.frame.timeDiff;\r\n    };\r\n    Animation._addAnimation = function (anim) {\r\n        this.animations.push(anim);\r\n        this._handleAnimation();\r\n    };\r\n    Animation._removeAnimation = function (anim) {\r\n        var id = anim.id, animations = this.animations, len = animations.length, n;\r\n        for (n = 0; n < len; n++) {\r\n            if (animations[n].id === id) {\r\n                this.animations.splice(n, 1);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    Animation._runFrames = function () {\r\n        var layerHash = {}, animations = this.animations, anim, layers, func, n, i, layersLen, layer, key, needRedraw;\r\n        for (n = 0; n < animations.length; n++) {\r\n            anim = animations[n];\r\n            layers = anim.layers;\r\n            func = anim.func;\r\n            anim._updateFrameObject(now());\r\n            layersLen = layers.length;\r\n            if (func) {\r\n                needRedraw = func.call(anim, anim.frame) !== false;\r\n            }\r\n            else {\r\n                needRedraw = true;\r\n            }\r\n            if (!needRedraw) {\r\n                continue;\r\n            }\r\n            for (i = 0; i < layersLen; i++) {\r\n                layer = layers[i];\r\n                if (layer._id !== undefined) {\r\n                    layerHash[layer._id] = layer;\r\n                }\r\n            }\r\n        }\r\n        for (key in layerHash) {\r\n            if (!layerHash.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            layerHash[key].draw();\r\n        }\r\n    };\r\n    Animation._animationLoop = function () {\r\n        var Anim = Animation;\r\n        if (Anim.animations.length) {\r\n            Anim._runFrames();\r\n            requestAnimationFrame(Anim._animationLoop);\r\n        }\r\n        else {\r\n            Anim.animRunning = false;\r\n        }\r\n    };\r\n    Animation._handleAnimation = function () {\r\n        if (!this.animRunning) {\r\n            this.animRunning = true;\r\n            requestAnimationFrame(this._animationLoop);\r\n        }\r\n    };\r\n    Animation.animations = [];\r\n    Animation.animIdCounter = 0;\r\n    Animation.animRunning = false;\r\n    return Animation;\r\n}());\r\nexports.Animation = Animation;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Easings = exports.Tween = void 0;\r\nvar Util_1 = require(\"./Util\");\r\nvar Animation_1 = require(\"./Animation\");\r\nvar Node_1 = require(\"./Node\");\r\nvar Global_1 = require(\"./Global\");\r\nvar blacklist = {\r\n    node: 1,\r\n    duration: 1,\r\n    easing: 1,\r\n    onFinish: 1,\r\n    yoyo: 1,\r\n}, PAUSED = 1, PLAYING = 2, REVERSING = 3, idCounter = 0, colorAttrs = ['fill', 'stroke', 'shadowColor'];\r\nvar TweenEngine = (function () {\r\n    function TweenEngine(prop, propFunc, func, begin, finish, duration, yoyo) {\r\n        this.prop = prop;\r\n        this.propFunc = propFunc;\r\n        this.begin = begin;\r\n        this._pos = begin;\r\n        this.duration = duration;\r\n        this._change = 0;\r\n        this.prevPos = 0;\r\n        this.yoyo = yoyo;\r\n        this._time = 0;\r\n        this._position = 0;\r\n        this._startTime = 0;\r\n        this._finish = 0;\r\n        this.func = func;\r\n        this._change = finish - this.begin;\r\n        this.pause();\r\n    }\r\n    TweenEngine.prototype.fire = function (str) {\r\n        var handler = this[str];\r\n        if (handler) {\r\n            handler();\r\n        }\r\n    };\r\n    TweenEngine.prototype.setTime = function (t) {\r\n        if (t > this.duration) {\r\n            if (this.yoyo) {\r\n                this._time = this.duration;\r\n                this.reverse();\r\n            }\r\n            else {\r\n                this.finish();\r\n            }\r\n        }\r\n        else if (t < 0) {\r\n            if (this.yoyo) {\r\n                this._time = 0;\r\n                this.play();\r\n            }\r\n            else {\r\n                this.reset();\r\n            }\r\n        }\r\n        else {\r\n            this._time = t;\r\n            this.update();\r\n        }\r\n    };\r\n    TweenEngine.prototype.getTime = function () {\r\n        return this._time;\r\n    };\r\n    TweenEngine.prototype.setPosition = function (p) {\r\n        this.prevPos = this._pos;\r\n        this.propFunc(p);\r\n        this._pos = p;\r\n    };\r\n    TweenEngine.prototype.getPosition = function (t) {\r\n        if (t === undefined) {\r\n            t = this._time;\r\n        }\r\n        return this.func(t, this.begin, this._change, this.duration);\r\n    };\r\n    TweenEngine.prototype.play = function () {\r\n        this.state = PLAYING;\r\n        this._startTime = this.getTimer() - this._time;\r\n        this.onEnterFrame();\r\n        this.fire('onPlay');\r\n    };\r\n    TweenEngine.prototype.reverse = function () {\r\n        this.state = REVERSING;\r\n        this._time = this.duration - this._time;\r\n        this._startTime = this.getTimer() - this._time;\r\n        this.onEnterFrame();\r\n        this.fire('onReverse');\r\n    };\r\n    TweenEngine.prototype.seek = function (t) {\r\n        this.pause();\r\n        this._time = t;\r\n        this.update();\r\n        this.fire('onSeek');\r\n    };\r\n    TweenEngine.prototype.reset = function () {\r\n        this.pause();\r\n        this._time = 0;\r\n        this.update();\r\n        this.fire('onReset');\r\n    };\r\n    TweenEngine.prototype.finish = function () {\r\n        this.pause();\r\n        this._time = this.duration;\r\n        this.update();\r\n        this.fire('onFinish');\r\n    };\r\n    TweenEngine.prototype.update = function () {\r\n        this.setPosition(this.getPosition(this._time));\r\n        this.fire('onUpdate');\r\n    };\r\n    TweenEngine.prototype.onEnterFrame = function () {\r\n        var t = this.getTimer() - this._startTime;\r\n        if (this.state === PLAYING) {\r\n            this.setTime(t);\r\n        }\r\n        else if (this.state === REVERSING) {\r\n            this.setTime(this.duration - t);\r\n        }\r\n    };\r\n    TweenEngine.prototype.pause = function () {\r\n        this.state = PAUSED;\r\n        this.fire('onPause');\r\n    };\r\n    TweenEngine.prototype.getTimer = function () {\r\n        return new Date().getTime();\r\n    };\r\n    return TweenEngine;\r\n}());\r\nvar Tween = (function () {\r\n    function Tween(config) {\r\n        var that = this, node = config.node, nodeId = node._id, duration, easing = config.easing || exports.Easings.Linear, yoyo = !!config.yoyo, key;\r\n        if (typeof config.duration === 'undefined') {\r\n            duration = 0.3;\r\n        }\r\n        else if (config.duration === 0) {\r\n            duration = 0.001;\r\n        }\r\n        else {\r\n            duration = config.duration;\r\n        }\r\n        this.node = node;\r\n        this._id = idCounter++;\r\n        var layers = node.getLayer() ||\r\n            (node instanceof Global_1.Konva['Stage'] ? node.getLayers() : null);\r\n        if (!layers) {\r\n            Util_1.Util.error('Tween constructor have `node` that is not in a layer. Please add node into layer first.');\r\n        }\r\n        this.anim = new Animation_1.Animation(function () {\r\n            that.tween.onEnterFrame();\r\n        }, layers);\r\n        this.tween = new TweenEngine(key, function (i) {\r\n            that._tweenFunc(i);\r\n        }, easing, 0, 1, duration * 1000, yoyo);\r\n        this._addListeners();\r\n        if (!Tween.attrs[nodeId]) {\r\n            Tween.attrs[nodeId] = {};\r\n        }\r\n        if (!Tween.attrs[nodeId][this._id]) {\r\n            Tween.attrs[nodeId][this._id] = {};\r\n        }\r\n        if (!Tween.tweens[nodeId]) {\r\n            Tween.tweens[nodeId] = {};\r\n        }\r\n        for (key in config) {\r\n            if (blacklist[key] === undefined) {\r\n                this._addAttr(key, config[key]);\r\n            }\r\n        }\r\n        this.reset();\r\n        this.onFinish = config.onFinish;\r\n        this.onReset = config.onReset;\r\n        this.onUpdate = config.onUpdate;\r\n    }\r\n    Tween.prototype._addAttr = function (key, end) {\r\n        var node = this.node, nodeId = node._id, start, diff, tweenId, n, len, trueEnd, trueStart, endRGBA;\r\n        tweenId = Tween.tweens[nodeId][key];\r\n        if (tweenId) {\r\n            delete Tween.attrs[nodeId][tweenId][key];\r\n        }\r\n        start = node.getAttr(key);\r\n        if (Util_1.Util._isArray(end)) {\r\n            diff = [];\r\n            len = Math.max(end.length, start.length);\r\n            if (key === 'points' && end.length !== start.length) {\r\n                if (end.length > start.length) {\r\n                    trueStart = start;\r\n                    start = Util_1.Util._prepareArrayForTween(start, end, node.closed());\r\n                }\r\n                else {\r\n                    trueEnd = end;\r\n                    end = Util_1.Util._prepareArrayForTween(end, start, node.closed());\r\n                }\r\n            }\r\n            if (key.indexOf('fill') === 0) {\r\n                for (n = 0; n < len; n++) {\r\n                    if (n % 2 === 0) {\r\n                        diff.push(end[n] - start[n]);\r\n                    }\r\n                    else {\r\n                        var startRGBA = Util_1.Util.colorToRGBA(start[n]);\r\n                        endRGBA = Util_1.Util.colorToRGBA(end[n]);\r\n                        start[n] = startRGBA;\r\n                        diff.push({\r\n                            r: endRGBA.r - startRGBA.r,\r\n                            g: endRGBA.g - startRGBA.g,\r\n                            b: endRGBA.b - startRGBA.b,\r\n                            a: endRGBA.a - startRGBA.a,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (n = 0; n < len; n++) {\r\n                    diff.push(end[n] - start[n]);\r\n                }\r\n            }\r\n        }\r\n        else if (colorAttrs.indexOf(key) !== -1) {\r\n            start = Util_1.Util.colorToRGBA(start);\r\n            endRGBA = Util_1.Util.colorToRGBA(end);\r\n            diff = {\r\n                r: endRGBA.r - start.r,\r\n                g: endRGBA.g - start.g,\r\n                b: endRGBA.b - start.b,\r\n                a: endRGBA.a - start.a,\r\n            };\r\n        }\r\n        else {\r\n            diff = end - start;\r\n        }\r\n        Tween.attrs[nodeId][this._id][key] = {\r\n            start: start,\r\n            diff: diff,\r\n            end: end,\r\n            trueEnd: trueEnd,\r\n            trueStart: trueStart,\r\n        };\r\n        Tween.tweens[nodeId][key] = this._id;\r\n    };\r\n    Tween.prototype._tweenFunc = function (i) {\r\n        var node = this.node, attrs = Tween.attrs[node._id][this._id], key, attr, start, diff, newVal, n, len, end;\r\n        for (key in attrs) {\r\n            attr = attrs[key];\r\n            start = attr.start;\r\n            diff = attr.diff;\r\n            end = attr.end;\r\n            if (Util_1.Util._isArray(start)) {\r\n                newVal = [];\r\n                len = Math.max(start.length, end.length);\r\n                if (key.indexOf('fill') === 0) {\r\n                    for (n = 0; n < len; n++) {\r\n                        if (n % 2 === 0) {\r\n                            newVal.push((start[n] || 0) + diff[n] * i);\r\n                        }\r\n                        else {\r\n                            newVal.push('rgba(' +\r\n                                Math.round(start[n].r + diff[n].r * i) +\r\n                                ',' +\r\n                                Math.round(start[n].g + diff[n].g * i) +\r\n                                ',' +\r\n                                Math.round(start[n].b + diff[n].b * i) +\r\n                                ',' +\r\n                                (start[n].a + diff[n].a * i) +\r\n                                ')');\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    for (n = 0; n < len; n++) {\r\n                        newVal.push((start[n] || 0) + diff[n] * i);\r\n                    }\r\n                }\r\n            }\r\n            else if (colorAttrs.indexOf(key) !== -1) {\r\n                newVal =\r\n                    'rgba(' +\r\n                        Math.round(start.r + diff.r * i) +\r\n                        ',' +\r\n                        Math.round(start.g + diff.g * i) +\r\n                        ',' +\r\n                        Math.round(start.b + diff.b * i) +\r\n                        ',' +\r\n                        (start.a + diff.a * i) +\r\n                        ')';\r\n            }\r\n            else {\r\n                newVal = start + diff * i;\r\n            }\r\n            node.setAttr(key, newVal);\r\n        }\r\n    };\r\n    Tween.prototype._addListeners = function () {\r\n        var _this = this;\r\n        this.tween.onPlay = function () {\r\n            _this.anim.start();\r\n        };\r\n        this.tween.onReverse = function () {\r\n            _this.anim.start();\r\n        };\r\n        this.tween.onPause = function () {\r\n            _this.anim.stop();\r\n        };\r\n        this.tween.onFinish = function () {\r\n            var node = _this.node;\r\n            var attrs = Tween.attrs[node._id][_this._id];\r\n            if (attrs.points && attrs.points.trueEnd) {\r\n                node.setAttr('points', attrs.points.trueEnd);\r\n            }\r\n            if (_this.onFinish) {\r\n                _this.onFinish.call(_this);\r\n            }\r\n        };\r\n        this.tween.onReset = function () {\r\n            var node = _this.node;\r\n            var attrs = Tween.attrs[node._id][_this._id];\r\n            if (attrs.points && attrs.points.trueStart) {\r\n                node.points(attrs.points.trueStart);\r\n            }\r\n            if (_this.onReset) {\r\n                _this.onReset();\r\n            }\r\n        };\r\n        this.tween.onUpdate = function () {\r\n            if (_this.onUpdate) {\r\n                _this.onUpdate.call(_this);\r\n            }\r\n        };\r\n    };\r\n    Tween.prototype.play = function () {\r\n        this.tween.play();\r\n        return this;\r\n    };\r\n    Tween.prototype.reverse = function () {\r\n        this.tween.reverse();\r\n        return this;\r\n    };\r\n    Tween.prototype.reset = function () {\r\n        this.tween.reset();\r\n        return this;\r\n    };\r\n    Tween.prototype.seek = function (t) {\r\n        this.tween.seek(t * 1000);\r\n        return this;\r\n    };\r\n    Tween.prototype.pause = function () {\r\n        this.tween.pause();\r\n        return this;\r\n    };\r\n    Tween.prototype.finish = function () {\r\n        this.tween.finish();\r\n        return this;\r\n    };\r\n    Tween.prototype.destroy = function () {\r\n        var nodeId = this.node._id, thisId = this._id, attrs = Tween.tweens[nodeId], key;\r\n        this.pause();\r\n        for (key in attrs) {\r\n            delete Tween.tweens[nodeId][key];\r\n        }\r\n        delete Tween.attrs[nodeId][thisId];\r\n    };\r\n    Tween.attrs = {};\r\n    Tween.tweens = {};\r\n    return Tween;\r\n}());\r\nexports.Tween = Tween;\r\nNode_1.Node.prototype.to = function (params) {\r\n    var onFinish = params.onFinish;\r\n    params.node = this;\r\n    params.onFinish = function () {\r\n        this.destroy();\r\n        if (onFinish) {\r\n            onFinish();\r\n        }\r\n    };\r\n    var tween = new Tween(params);\r\n    tween.play();\r\n};\r\nexports.Easings = {\r\n    BackEaseIn: function (t, b, c, d) {\r\n        var s = 1.70158;\r\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n    },\r\n    BackEaseOut: function (t, b, c, d) {\r\n        var s = 1.70158;\r\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n    },\r\n    BackEaseInOut: function (t, b, c, d) {\r\n        var s = 1.70158;\r\n        if ((t /= d / 2) < 1) {\r\n            return (c / 2) * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\r\n        }\r\n        return (c / 2) * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\r\n    },\r\n    ElasticEaseIn: function (t, b, c, d, a, p) {\r\n        var s = 0;\r\n        if (t === 0) {\r\n            return b;\r\n        }\r\n        if ((t /= d) === 1) {\r\n            return b + c;\r\n        }\r\n        if (!p) {\r\n            p = d * 0.3;\r\n        }\r\n        if (!a || a < Math.abs(c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        }\r\n        else {\r\n            s = (p / (2 * Math.PI)) * Math.asin(c / a);\r\n        }\r\n        return (-(a *\r\n            Math.pow(2, 10 * (t -= 1)) *\r\n            Math.sin(((t * d - s) * (2 * Math.PI)) / p)) + b);\r\n    },\r\n    ElasticEaseOut: function (t, b, c, d, a, p) {\r\n        var s = 0;\r\n        if (t === 0) {\r\n            return b;\r\n        }\r\n        if ((t /= d) === 1) {\r\n            return b + c;\r\n        }\r\n        if (!p) {\r\n            p = d * 0.3;\r\n        }\r\n        if (!a || a < Math.abs(c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        }\r\n        else {\r\n            s = (p / (2 * Math.PI)) * Math.asin(c / a);\r\n        }\r\n        return (a * Math.pow(2, -10 * t) * Math.sin(((t * d - s) * (2 * Math.PI)) / p) +\r\n            c +\r\n            b);\r\n    },\r\n    ElasticEaseInOut: function (t, b, c, d, a, p) {\r\n        var s = 0;\r\n        if (t === 0) {\r\n            return b;\r\n        }\r\n        if ((t /= d / 2) === 2) {\r\n            return b + c;\r\n        }\r\n        if (!p) {\r\n            p = d * (0.3 * 1.5);\r\n        }\r\n        if (!a || a < Math.abs(c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        }\r\n        else {\r\n            s = (p / (2 * Math.PI)) * Math.asin(c / a);\r\n        }\r\n        if (t < 1) {\r\n            return (-0.5 *\r\n                (a *\r\n                    Math.pow(2, 10 * (t -= 1)) *\r\n                    Math.sin(((t * d - s) * (2 * Math.PI)) / p)) +\r\n                b);\r\n        }\r\n        return (a *\r\n            Math.pow(2, -10 * (t -= 1)) *\r\n            Math.sin(((t * d - s) * (2 * Math.PI)) / p) *\r\n            0.5 +\r\n            c +\r\n            b);\r\n    },\r\n    BounceEaseOut: function (t, b, c, d) {\r\n        if ((t /= d) < 1 / 2.75) {\r\n            return c * (7.5625 * t * t) + b;\r\n        }\r\n        else if (t < 2 / 2.75) {\r\n            return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\r\n        }\r\n        else if (t < 2.5 / 2.75) {\r\n            return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\r\n        }\r\n        else {\r\n            return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\r\n        }\r\n    },\r\n    BounceEaseIn: function (t, b, c, d) {\r\n        return c - exports.Easings.BounceEaseOut(d - t, 0, c, d) + b;\r\n    },\r\n    BounceEaseInOut: function (t, b, c, d) {\r\n        if (t < d / 2) {\r\n            return exports.Easings.BounceEaseIn(t * 2, 0, c, d) * 0.5 + b;\r\n        }\r\n        else {\r\n            return exports.Easings.BounceEaseOut(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\r\n        }\r\n    },\r\n    EaseIn: function (t, b, c, d) {\r\n        return c * (t /= d) * t + b;\r\n    },\r\n    EaseOut: function (t, b, c, d) {\r\n        return -c * (t /= d) * (t - 2) + b;\r\n    },\r\n    EaseInOut: function (t, b, c, d) {\r\n        if ((t /= d / 2) < 1) {\r\n            return (c / 2) * t * t + b;\r\n        }\r\n        return (-c / 2) * (--t * (t - 2) - 1) + b;\r\n    },\r\n    StrongEaseIn: function (t, b, c, d) {\r\n        return c * (t /= d) * t * t * t * t + b;\r\n    },\r\n    StrongEaseOut: function (t, b, c, d) {\r\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n    },\r\n    StrongEaseInOut: function (t, b, c, d) {\r\n        if ((t /= d / 2) < 1) {\r\n            return (c / 2) * t * t * t * t * t + b;\r\n        }\r\n        return (c / 2) * ((t -= 2) * t * t * t * t + 2) + b;\r\n    },\r\n    Linear: function (t, b, c, d) {\r\n        return (c * t) / d + b;\r\n    },\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Konva = void 0;\r\nvar Global_1 = require(\"./Global\");\r\nvar Util_1 = require(\"./Util\");\r\nvar Node_1 = require(\"./Node\");\r\nvar Container_1 = require(\"./Container\");\r\nvar Stage_1 = require(\"./Stage\");\r\nvar Layer_1 = require(\"./Layer\");\r\nvar FastLayer_1 = require(\"./FastLayer\");\r\nvar Group_1 = require(\"./Group\");\r\nvar DragAndDrop_1 = require(\"./DragAndDrop\");\r\nvar Shape_1 = require(\"./Shape\");\r\nvar Animation_1 = require(\"./Animation\");\r\nvar Tween_1 = require(\"./Tween\");\r\nvar Context_1 = require(\"./Context\");\r\nvar Canvas_1 = require(\"./Canvas\");\r\nexports.Konva = Util_1.Util._assign(Global_1.Konva, {\r\n    Collection: Util_1.Collection,\r\n    Util: Util_1.Util,\r\n    Transform: Util_1.Transform,\r\n    Node: Node_1.Node,\r\n    ids: Node_1.ids,\r\n    names: Node_1.names,\r\n    Container: Container_1.Container,\r\n    Stage: Stage_1.Stage,\r\n    stages: Stage_1.stages,\r\n    Layer: Layer_1.Layer,\r\n    FastLayer: FastLayer_1.FastLayer,\r\n    Group: Group_1.Group,\r\n    DD: DragAndDrop_1.DD,\r\n    Shape: Shape_1.Shape,\r\n    shapes: Shape_1.shapes,\r\n    Animation: Animation_1.Animation,\r\n    Tween: Tween_1.Tween,\r\n    Easings: Tween_1.Easings,\r\n    Context: Context_1.Context,\r\n    Canvas: Canvas_1.Canvas\r\n});\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Arc = void 0;\r\nvar Util_1 = require(\"../Util\");\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Shape_1 = require(\"../Shape\");\r\nvar Global_1 = require(\"../Global\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Global_2 = require(\"../Global\");\r\nvar Arc = (function (_super) {\r\n    __extends(Arc, _super);\r\n    function Arc() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Arc.prototype._sceneFunc = function (context) {\r\n        var angle = Global_1.Konva.getAngle(this.angle()), clockwise = this.clockwise();\r\n        context.beginPath();\r\n        context.arc(0, 0, this.outerRadius(), 0, angle, clockwise);\r\n        context.arc(0, 0, this.innerRadius(), angle, 0, !clockwise);\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    };\r\n    Arc.prototype.getWidth = function () {\r\n        return this.outerRadius() * 2;\r\n    };\r\n    Arc.prototype.getHeight = function () {\r\n        return this.outerRadius() * 2;\r\n    };\r\n    Arc.prototype.setWidth = function (width) {\r\n        this.outerRadius(width / 2);\r\n    };\r\n    Arc.prototype.setHeight = function (height) {\r\n        this.outerRadius(height / 2);\r\n    };\r\n    return Arc;\r\n}(Shape_1.Shape));\r\nexports.Arc = Arc;\r\nArc.prototype._centroid = true;\r\nArc.prototype.className = 'Arc';\r\nArc.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\r\nGlobal_2._registerNode(Arc);\r\nFactory_1.Factory.addGetterSetter(Arc, 'innerRadius', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Arc, 'outerRadius', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Arc, 'angle', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Arc, 'clockwise', false, Validators_1.getBooleanValidator());\r\nUtil_1.Collection.mapMethods(Arc);\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Line = void 0;\r\nvar Util_1 = require(\"../Util\");\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Shape_1 = require(\"../Shape\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Global_1 = require(\"../Global\");\r\nvar Line = (function (_super) {\r\n    __extends(Line, _super);\r\n    function Line(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.on('pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva', function () {\r\n            this._clearCache('tensionPoints');\r\n        });\r\n        return _this;\r\n    }\r\n    Line.prototype._sceneFunc = function (context) {\r\n        var points = this.points(), length = points.length, tension = this.tension(), closed = this.closed(), bezier = this.bezier(), tp, len, n;\r\n        if (!length) {\r\n            return;\r\n        }\r\n        context.beginPath();\r\n        context.moveTo(points[0], points[1]);\r\n        if (tension !== 0 && length > 4) {\r\n            tp = this.getTensionPoints();\r\n            len = tp.length;\r\n            n = closed ? 0 : 4;\r\n            if (!closed) {\r\n                context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\r\n            }\r\n            while (n < len - 2) {\r\n                context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);\r\n            }\r\n            if (!closed) {\r\n                context.quadraticCurveTo(tp[len - 2], tp[len - 1], points[length - 2], points[length - 1]);\r\n            }\r\n        }\r\n        else if (bezier) {\r\n            n = 2;\r\n            while (n < length) {\r\n                context.bezierCurveTo(points[n++], points[n++], points[n++], points[n++], points[n++], points[n++]);\r\n            }\r\n        }\r\n        else {\r\n            for (n = 2; n < length; n += 2) {\r\n                context.lineTo(points[n], points[n + 1]);\r\n            }\r\n        }\r\n        if (closed) {\r\n            context.closePath();\r\n            context.fillStrokeShape(this);\r\n        }\r\n        else {\r\n            context.strokeShape(this);\r\n        }\r\n    };\r\n    Line.prototype.getTensionPoints = function () {\r\n        return this._getCache('tensionPoints', this._getTensionPoints);\r\n    };\r\n    Line.prototype._getTensionPoints = function () {\r\n        if (this.closed()) {\r\n            return this._getTensionPointsClosed();\r\n        }\r\n        else {\r\n            return Util_1.Util._expandPoints(this.points(), this.tension());\r\n        }\r\n    };\r\n    Line.prototype._getTensionPointsClosed = function () {\r\n        var p = this.points(), len = p.length, tension = this.tension(), firstControlPoints = Util_1.Util._getControlPoints(p[len - 2], p[len - 1], p[0], p[1], p[2], p[3], tension), lastControlPoints = Util_1.Util._getControlPoints(p[len - 4], p[len - 3], p[len - 2], p[len - 1], p[0], p[1], tension), middle = Util_1.Util._expandPoints(p, tension), tp = [firstControlPoints[2], firstControlPoints[3]]\r\n            .concat(middle)\r\n            .concat([\r\n            lastControlPoints[0],\r\n            lastControlPoints[1],\r\n            p[len - 2],\r\n            p[len - 1],\r\n            lastControlPoints[2],\r\n            lastControlPoints[3],\r\n            firstControlPoints[0],\r\n            firstControlPoints[1],\r\n            p[0],\r\n            p[1]\r\n        ]);\r\n        return tp;\r\n    };\r\n    Line.prototype.getWidth = function () {\r\n        return this.getSelfRect().width;\r\n    };\r\n    Line.prototype.getHeight = function () {\r\n        return this.getSelfRect().height;\r\n    };\r\n    Line.prototype.getSelfRect = function () {\r\n        var points = this.points();\r\n        if (points.length < 4) {\r\n            return {\r\n                x: points[0] || 0,\r\n                y: points[1] || 0,\r\n                width: 0,\r\n                height: 0\r\n            };\r\n        }\r\n        if (this.tension() !== 0) {\r\n            points = __spreadArrays([\r\n                points[0],\r\n                points[1]\r\n            ], this._getTensionPoints(), [\r\n                points[points.length - 2],\r\n                points[points.length - 1]\r\n            ]);\r\n        }\r\n        else {\r\n            points = this.points();\r\n        }\r\n        var minX = points[0];\r\n        var maxX = points[0];\r\n        var minY = points[1];\r\n        var maxY = points[1];\r\n        var x, y;\r\n        for (var i = 0; i < points.length / 2; i++) {\r\n            x = points[i * 2];\r\n            y = points[i * 2 + 1];\r\n            minX = Math.min(minX, x);\r\n            maxX = Math.max(maxX, x);\r\n            minY = Math.min(minY, y);\r\n            maxY = Math.max(maxY, y);\r\n        }\r\n        return {\r\n            x: minX,\r\n            y: minY,\r\n            width: maxX - minX,\r\n            height: maxY - minY\r\n        };\r\n    };\r\n    return Line;\r\n}(Shape_1.Shape));\r\nexports.Line = Line;\r\nLine.prototype.className = 'Line';\r\nLine.prototype._attrsAffectingSize = ['points', 'bezier', 'tension'];\r\nGlobal_1._registerNode(Line);\r\nFactory_1.Factory.addGetterSetter(Line, 'closed', false);\r\nFactory_1.Factory.addGetterSetter(Line, 'bezier', false);\r\nFactory_1.Factory.addGetterSetter(Line, 'tension', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Line, 'points', [], Validators_1.getNumberArrayValidator());\r\nUtil_1.Collection.mapMethods(Line);\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Arrow = void 0;\r\nvar Util_1 = require(\"../Util\");\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Line_1 = require(\"./Line\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Global_1 = require(\"../Global\");\r\nvar Arrow = (function (_super) {\r\n    __extends(Arrow, _super);\r\n    function Arrow() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Arrow.prototype._sceneFunc = function (ctx) {\r\n        _super.prototype._sceneFunc.call(this, ctx);\r\n        var PI2 = Math.PI * 2;\r\n        var points = this.points();\r\n        var tp = points;\r\n        var fromTension = this.tension() !== 0 && points.length > 4;\r\n        if (fromTension) {\r\n            tp = this.getTensionPoints();\r\n        }\r\n        var n = points.length;\r\n        var dx, dy;\r\n        if (fromTension) {\r\n            dx = points[n - 2] - (tp[tp.length - 2] + tp[tp.length - 4]) / 2;\r\n            dy = points[n - 1] - (tp[tp.length - 1] + tp[tp.length - 3]) / 2;\r\n        }\r\n        else {\r\n            dx = points[n - 2] - points[n - 4];\r\n            dy = points[n - 1] - points[n - 3];\r\n        }\r\n        var radians = (Math.atan2(dy, dx) + PI2) % PI2;\r\n        var length = this.pointerLength();\r\n        var width = this.pointerWidth();\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.translate(points[n - 2], points[n - 1]);\r\n        ctx.rotate(radians);\r\n        ctx.moveTo(0, 0);\r\n        ctx.lineTo(-length, width / 2);\r\n        ctx.lineTo(-length, -width / 2);\r\n        ctx.closePath();\r\n        ctx.restore();\r\n        if (this.pointerAtBeginning()) {\r\n            ctx.save();\r\n            ctx.translate(points[0], points[1]);\r\n            if (fromTension) {\r\n                dx = (tp[0] + tp[2]) / 2 - points[0];\r\n                dy = (tp[1] + tp[3]) / 2 - points[1];\r\n            }\r\n            else {\r\n                dx = points[2] - points[0];\r\n                dy = points[3] - points[1];\r\n            }\r\n            ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\r\n            ctx.moveTo(0, 0);\r\n            ctx.lineTo(-length, width / 2);\r\n            ctx.lineTo(-length, -width / 2);\r\n            ctx.closePath();\r\n            ctx.restore();\r\n        }\r\n        var isDashEnabled = this.dashEnabled();\r\n        if (isDashEnabled) {\r\n            this.attrs.dashEnabled = false;\r\n            ctx.setLineDash([]);\r\n        }\r\n        ctx.fillStrokeShape(this);\r\n        if (isDashEnabled) {\r\n            this.attrs.dashEnabled = true;\r\n        }\r\n    };\r\n    Arrow.prototype.getSelfRect = function () {\r\n        var lineRect = _super.prototype.getSelfRect.call(this);\r\n        var offset = this.pointerWidth() / 2;\r\n        return {\r\n            x: lineRect.x - offset,\r\n            y: lineRect.y - offset,\r\n            width: lineRect.width + offset * 2,\r\n            height: lineRect.height + offset * 2\r\n        };\r\n    };\r\n    return Arrow;\r\n}(Line_1.Line));\r\nexports.Arrow = Arrow;\r\nArrow.prototype.className = 'Arrow';\r\nGlobal_1._registerNode(Arrow);\r\nFactory_1.Factory.addGetterSetter(Arrow, 'pointerLength', 10, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Arrow, 'pointerWidth', 10, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Arrow, 'pointerAtBeginning', false);\r\nUtil_1.Collection.mapMethods(Arrow);\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Circle = void 0;\r\nvar Util_1 = require(\"../Util\");\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Shape_1 = require(\"../Shape\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Global_1 = require(\"../Global\");\r\nvar Circle = (function (_super) {\r\n    __extends(Circle, _super);\r\n    function Circle() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Circle.prototype._sceneFunc = function (context) {\r\n        context.beginPath();\r\n        context.arc(0, 0, this.attrs.radius || 0, 0, Math.PI * 2, false);\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    };\r\n    Circle.prototype.getWidth = function () {\r\n        return this.radius() * 2;\r\n    };\r\n    Circle.prototype.getHeight = function () {\r\n        return this.radius() * 2;\r\n    };\r\n    Circle.prototype.setWidth = function (width) {\r\n        if (this.radius() !== width / 2) {\r\n            this.radius(width / 2);\r\n        }\r\n    };\r\n    Circle.prototype.setHeight = function (height) {\r\n        if (this.radius() !== height / 2) {\r\n            this.radius(height / 2);\r\n        }\r\n    };\r\n    return Circle;\r\n}(Shape_1.Shape));\r\nexports.Circle = Circle;\r\nCircle.prototype._centroid = true;\r\nCircle.prototype.className = 'Circle';\r\nCircle.prototype._attrsAffectingSize = ['radius'];\r\nGlobal_1._registerNode(Circle);\r\nFactory_1.Factory.addGetterSetter(Circle, 'radius', 0, Validators_1.getNumberValidator());\r\nUtil_1.Collection.mapMethods(Circle);\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Ellipse = void 0;\r\nvar Util_1 = require(\"../Util\");\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Shape_1 = require(\"../Shape\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Global_1 = require(\"../Global\");\r\nvar Ellipse = (function (_super) {\r\n    __extends(Ellipse, _super);\r\n    function Ellipse() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Ellipse.prototype._sceneFunc = function (context) {\r\n        var rx = this.radiusX(), ry = this.radiusY();\r\n        context.beginPath();\r\n        context.save();\r\n        if (rx !== ry) {\r\n            context.scale(1, ry / rx);\r\n        }\r\n        context.arc(0, 0, rx, 0, Math.PI * 2, false);\r\n        context.restore();\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    };\r\n    Ellipse.prototype.getWidth = function () {\r\n        return this.radiusX() * 2;\r\n    };\r\n    Ellipse.prototype.getHeight = function () {\r\n        return this.radiusY() * 2;\r\n    };\r\n    Ellipse.prototype.setWidth = function (width) {\r\n        this.radiusX(width / 2);\r\n    };\r\n    Ellipse.prototype.setHeight = function (height) {\r\n        this.radiusY(height / 2);\r\n    };\r\n    return Ellipse;\r\n}(Shape_1.Shape));\r\nexports.Ellipse = Ellipse;\r\nEllipse.prototype.className = 'Ellipse';\r\nEllipse.prototype._centroid = true;\r\nEllipse.prototype._attrsAffectingSize = ['radiusX', 'radiusY'];\r\nGlobal_1._registerNode(Ellipse);\r\nFactory_1.Factory.addComponentsGetterSetter(Ellipse, 'radius', ['x', 'y']);\r\nFactory_1.Factory.addGetterSetter(Ellipse, 'radiusX', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Ellipse, 'radiusY', 0, Validators_1.getNumberValidator());\r\nUtil_1.Collection.mapMethods(Ellipse);\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Image = void 0;\r\nvar Util_1 = require(\"../Util\");\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Shape_1 = require(\"../Shape\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Global_1 = require(\"../Global\");\r\nvar Image = (function (_super) {\r\n    __extends(Image, _super);\r\n    function Image() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Image.prototype._useBufferCanvas = function () {\r\n        return _super.prototype._useBufferCanvas.call(this, true);\r\n    };\r\n    Image.prototype._sceneFunc = function (context) {\r\n        var width = this.getWidth();\r\n        var height = this.getHeight();\r\n        var image = this.attrs.image;\r\n        var params;\r\n        if (image) {\r\n            var cropWidth = this.attrs.cropWidth;\r\n            var cropHeight = this.attrs.cropHeight;\r\n            if (cropWidth && cropHeight) {\r\n                params = [\r\n                    image,\r\n                    this.cropX(),\r\n                    this.cropY(),\r\n                    cropWidth,\r\n                    cropHeight,\r\n                    0,\r\n                    0,\r\n                    width,\r\n                    height,\r\n                ];\r\n            }\r\n            else {\r\n                params = [image, 0, 0, width, height];\r\n            }\r\n        }\r\n        if (this.hasFill() || this.hasStroke()) {\r\n            context.beginPath();\r\n            context.rect(0, 0, width, height);\r\n            context.closePath();\r\n            context.fillStrokeShape(this);\r\n        }\r\n        if (image) {\r\n            context.drawImage.apply(context, params);\r\n        }\r\n    };\r\n    Image.prototype._hitFunc = function (context) {\r\n        var width = this.width(), height = this.height();\r\n        context.beginPath();\r\n        context.rect(0, 0, width, height);\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    };\r\n    Image.prototype.getWidth = function () {\r\n        var _a, _b;\r\n        return (_a = this.attrs.width) !== null && _a !== void 0 ? _a : (((_b = this.image()) === null || _b === void 0 ? void 0 : _b.width) || 0);\r\n    };\r\n    Image.prototype.getHeight = function () {\r\n        var _a, _b;\r\n        return (_a = this.attrs.height) !== null && _a !== void 0 ? _a : (((_b = this.image()) === null || _b === void 0 ? void 0 : _b.height) || 0);\r\n    };\r\n    Image.fromURL = function (url, callback) {\r\n        var img = Util_1.Util.createImageElement();\r\n        img.onload = function () {\r\n            var image = new Image({\r\n                image: img,\r\n            });\r\n            callback(image);\r\n        };\r\n        img.crossOrigin = 'Anonymous';\r\n        img.src = url;\r\n    };\r\n    return Image;\r\n}(Shape_1.Shape));\r\nexports.Image = Image;\r\nImage.prototype.className = 'Image';\r\nGlobal_1._registerNode(Image);\r\nFactory_1.Factory.addGetterSetter(Image, 'image');\r\nFactory_1.Factory.addComponentsGetterSetter(Image, 'crop', ['x', 'y', 'width', 'height']);\r\nFactory_1.Factory.addGetterSetter(Image, 'cropX', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Image, 'cropY', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Image, 'cropWidth', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Image, 'cropHeight', 0, Validators_1.getNumberValidator());\r\nUtil_1.Collection.mapMethods(Image);\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Tag = exports.Label = void 0;\r\nvar Util_1 = require(\"../Util\");\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Shape_1 = require(\"../Shape\");\r\nvar Group_1 = require(\"../Group\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Global_1 = require(\"../Global\");\r\nvar ATTR_CHANGE_LIST = [\r\n    'fontFamily',\r\n    'fontSize',\r\n    'fontStyle',\r\n    'padding',\r\n    'lineHeight',\r\n    'text',\r\n    'width',\r\n    'height',\r\n], CHANGE_KONVA = 'Change.konva', NONE = 'none', UP = 'up', RIGHT = 'right', DOWN = 'down', LEFT = 'left', attrChangeListLen = ATTR_CHANGE_LIST.length;\r\nvar Label = (function (_super) {\r\n    __extends(Label, _super);\r\n    function Label(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.on('add.konva', function (evt) {\r\n            this._addListeners(evt.child);\r\n            this._sync();\r\n        });\r\n        return _this;\r\n    }\r\n    Label.prototype.getText = function () {\r\n        return this.find('Text')[0];\r\n    };\r\n    Label.prototype.getTag = function () {\r\n        return this.find('Tag')[0];\r\n    };\r\n    Label.prototype._addListeners = function (text) {\r\n        var that = this, n;\r\n        var func = function () {\r\n            that._sync();\r\n        };\r\n        for (n = 0; n < attrChangeListLen; n++) {\r\n            text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\r\n        }\r\n    };\r\n    Label.prototype.getWidth = function () {\r\n        return this.getText().width();\r\n    };\r\n    Label.prototype.getHeight = function () {\r\n        return this.getText().height();\r\n    };\r\n    Label.prototype._sync = function () {\r\n        var text = this.getText(), tag = this.getTag(), width, height, pointerDirection, pointerWidth, x, y, pointerHeight;\r\n        if (text && tag) {\r\n            width = text.width();\r\n            height = text.height();\r\n            pointerDirection = tag.pointerDirection();\r\n            pointerWidth = tag.pointerWidth();\r\n            pointerHeight = tag.pointerHeight();\r\n            x = 0;\r\n            y = 0;\r\n            switch (pointerDirection) {\r\n                case UP:\r\n                    x = width / 2;\r\n                    y = -1 * pointerHeight;\r\n                    break;\r\n                case RIGHT:\r\n                    x = width + pointerWidth;\r\n                    y = height / 2;\r\n                    break;\r\n                case DOWN:\r\n                    x = width / 2;\r\n                    y = height + pointerHeight;\r\n                    break;\r\n                case LEFT:\r\n                    x = -1 * pointerWidth;\r\n                    y = height / 2;\r\n                    break;\r\n            }\r\n            tag.setAttrs({\r\n                x: -1 * x,\r\n                y: -1 * y,\r\n                width: width,\r\n                height: height,\r\n            });\r\n            text.setAttrs({\r\n                x: -1 * x,\r\n                y: -1 * y,\r\n            });\r\n        }\r\n    };\r\n    return Label;\r\n}(Group_1.Group));\r\nexports.Label = Label;\r\nLabel.prototype.className = 'Label';\r\nGlobal_1._registerNode(Label);\r\nUtil_1.Collection.mapMethods(Label);\r\nvar Tag = (function (_super) {\r\n    __extends(Tag, _super);\r\n    function Tag() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Tag.prototype._sceneFunc = function (context) {\r\n        var width = this.width(), height = this.height(), pointerDirection = this.pointerDirection(), pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), cornerRadius = this.cornerRadius();\r\n        var topLeft = 0;\r\n        var topRight = 0;\r\n        var bottomLeft = 0;\r\n        var bottomRight = 0;\r\n        if (typeof cornerRadius === 'number') {\r\n            topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\r\n        }\r\n        else {\r\n            topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\r\n            topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\r\n            bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\r\n            bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\r\n        }\r\n        context.beginPath();\r\n        context.moveTo(topLeft, 0);\r\n        if (pointerDirection === UP) {\r\n            context.lineTo((width - pointerWidth) / 2, 0);\r\n            context.lineTo(width / 2, -1 * pointerHeight);\r\n            context.lineTo((width + pointerWidth) / 2, 0);\r\n        }\r\n        context.lineTo(width - topRight, 0);\r\n        context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\r\n        if (pointerDirection === RIGHT) {\r\n            context.lineTo(width, (height - pointerHeight) / 2);\r\n            context.lineTo(width + pointerWidth, height / 2);\r\n            context.lineTo(width, (height + pointerHeight) / 2);\r\n        }\r\n        context.lineTo(width, height - bottomRight);\r\n        context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\r\n        if (pointerDirection === DOWN) {\r\n            context.lineTo((width + pointerWidth) / 2, height);\r\n            context.lineTo(width / 2, height + pointerHeight);\r\n            context.lineTo((width - pointerWidth) / 2, height);\r\n        }\r\n        context.lineTo(bottomLeft, height);\r\n        context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\r\n        if (pointerDirection === LEFT) {\r\n            context.lineTo(0, (height + pointerHeight) / 2);\r\n            context.lineTo(-1 * pointerWidth, height / 2);\r\n            context.lineTo(0, (height - pointerHeight) / 2);\r\n        }\r\n        context.lineTo(0, topLeft);\r\n        context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    };\r\n    Tag.prototype.getSelfRect = function () {\r\n        var x = 0, y = 0, pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), direction = this.pointerDirection(), width = this.width(), height = this.height();\r\n        if (direction === UP) {\r\n            y -= pointerHeight;\r\n            height += pointerHeight;\r\n        }\r\n        else if (direction === DOWN) {\r\n            height += pointerHeight;\r\n        }\r\n        else if (direction === LEFT) {\r\n            x -= pointerWidth * 1.5;\r\n            width += pointerWidth;\r\n        }\r\n        else if (direction === RIGHT) {\r\n            width += pointerWidth * 1.5;\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            width: width,\r\n            height: height,\r\n        };\r\n    };\r\n    return Tag;\r\n}(Shape_1.Shape));\r\nexports.Tag = Tag;\r\nTag.prototype.className = 'Tag';\r\nGlobal_1._registerNode(Tag);\r\nFactory_1.Factory.addGetterSetter(Tag, 'pointerDirection', NONE);\r\nFactory_1.Factory.addGetterSetter(Tag, 'pointerWidth', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Tag, 'pointerHeight', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Tag, 'cornerRadius', 0, Validators_1.getNumberOrArrayOfNumbersValidator(4));\r\nUtil_1.Collection.mapMethods(Tag);\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Path = void 0;\r\nvar Util_1 = require(\"../Util\");\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Shape_1 = require(\"../Shape\");\r\nvar Global_1 = require(\"../Global\");\r\nvar Path = (function (_super) {\r\n    __extends(Path, _super);\r\n    function Path(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.dataArray = [];\r\n        _this.pathLength = 0;\r\n        _this.dataArray = Path.parsePathData(_this.data());\r\n        _this.pathLength = 0;\r\n        for (var i = 0; i < _this.dataArray.length; ++i) {\r\n            _this.pathLength += _this.dataArray[i].pathLength;\r\n        }\r\n        _this.on('dataChange.konva', function () {\r\n            this.dataArray = Path.parsePathData(this.data());\r\n            this.pathLength = 0;\r\n            for (var i = 0; i < this.dataArray.length; ++i) {\r\n                this.pathLength += this.dataArray[i].pathLength;\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    Path.prototype._sceneFunc = function (context) {\r\n        var ca = this.dataArray;\r\n        context.beginPath();\r\n        var isClosed = false;\r\n        for (var n = 0; n < ca.length; n++) {\r\n            var c = ca[n].command;\r\n            var p = ca[n].points;\r\n            switch (c) {\r\n                case 'L':\r\n                    context.lineTo(p[0], p[1]);\r\n                    break;\r\n                case 'M':\r\n                    context.moveTo(p[0], p[1]);\r\n                    break;\r\n                case 'C':\r\n                    context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\r\n                    break;\r\n                case 'Q':\r\n                    context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\r\n                    break;\r\n                case 'A':\r\n                    var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6], fs = p[7];\r\n                    var r = rx > ry ? rx : ry;\r\n                    var scaleX = rx > ry ? 1 : rx / ry;\r\n                    var scaleY = rx > ry ? ry / rx : 1;\r\n                    context.translate(cx, cy);\r\n                    context.rotate(psi);\r\n                    context.scale(scaleX, scaleY);\r\n                    context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\r\n                    context.scale(1 / scaleX, 1 / scaleY);\r\n                    context.rotate(-psi);\r\n                    context.translate(-cx, -cy);\r\n                    break;\r\n                case 'z':\r\n                    isClosed = true;\r\n                    context.closePath();\r\n                    break;\r\n            }\r\n        }\r\n        if (!isClosed && !this.hasFill()) {\r\n            context.strokeShape(this);\r\n        }\r\n        else {\r\n            context.fillStrokeShape(this);\r\n        }\r\n    };\r\n    Path.prototype.getSelfRect = function () {\r\n        var points = [];\r\n        this.dataArray.forEach(function (data) {\r\n            if (data.command === 'A') {\r\n                var start = data.points[4];\r\n                var dTheta = data.points[5];\r\n                var end = data.points[4] + dTheta;\r\n                var inc = Math.PI / 180.0;\r\n                if (Math.abs(start - end) < inc) {\r\n                    inc = Math.abs(start - end);\r\n                }\r\n                if (dTheta < 0) {\r\n                    for (var t = start - inc; t > end; t -= inc) {\r\n                        var point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\r\n                        points.push(point.x, point.y);\r\n                    }\r\n                }\r\n                else {\r\n                    for (var t = start + inc; t < end; t += inc) {\r\n                        var point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\r\n                        points.push(point.x, point.y);\r\n                    }\r\n                }\r\n            }\r\n            else if (data.command === 'C') {\r\n                for (var t = 0.0; t <= 1; t += 0.01) {\r\n                    var point = Path.getPointOnCubicBezier(t, data.start.x, data.start.y, data.points[0], data.points[1], data.points[2], data.points[3], data.points[4], data.points[5]);\r\n                    points.push(point.x, point.y);\r\n                }\r\n            }\r\n            else {\r\n                points = points.concat(data.points);\r\n            }\r\n        });\r\n        var minX = points[0];\r\n        var maxX = points[0];\r\n        var minY = points[1];\r\n        var maxY = points[1];\r\n        var x, y;\r\n        for (var i = 0; i < points.length / 2; i++) {\r\n            x = points[i * 2];\r\n            y = points[i * 2 + 1];\r\n            if (!isNaN(x)) {\r\n                minX = Math.min(minX, x);\r\n                maxX = Math.max(maxX, x);\r\n            }\r\n            if (!isNaN(y)) {\r\n                minY = Math.min(minY, y);\r\n                maxY = Math.max(maxY, y);\r\n            }\r\n        }\r\n        return {\r\n            x: Math.round(minX),\r\n            y: Math.round(minY),\r\n            width: Math.round(maxX - minX),\r\n            height: Math.round(maxY - minY),\r\n        };\r\n    };\r\n    Path.prototype.getLength = function () {\r\n        return this.pathLength;\r\n    };\r\n    Path.prototype.getPointAtLength = function (length) {\r\n        var point, i = 0, ii = this.dataArray.length;\r\n        if (!ii) {\r\n            return null;\r\n        }\r\n        while (i < ii && length > this.dataArray[i].pathLength) {\r\n            length -= this.dataArray[i].pathLength;\r\n            ++i;\r\n        }\r\n        if (i === ii) {\r\n            point = this.dataArray[i - 1].points.slice(-2);\r\n            return {\r\n                x: point[0],\r\n                y: point[1],\r\n            };\r\n        }\r\n        if (length < 0.01) {\r\n            point = this.dataArray[i].points.slice(0, 2);\r\n            return {\r\n                x: point[0],\r\n                y: point[1],\r\n            };\r\n        }\r\n        var cp = this.dataArray[i];\r\n        var p = cp.points;\r\n        switch (cp.command) {\r\n            case 'L':\r\n                return Path.getPointOnLine(length, cp.start.x, cp.start.y, p[0], p[1]);\r\n            case 'C':\r\n                return Path.getPointOnCubicBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3], p[4], p[5]);\r\n            case 'Q':\r\n                return Path.getPointOnQuadraticBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3]);\r\n            case 'A':\r\n                var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6];\r\n                theta += (dTheta * length) / cp.pathLength;\r\n                return Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\r\n        }\r\n        return null;\r\n    };\r\n    Path.getLineLength = function (x1, y1, x2, y2) {\r\n        return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n    };\r\n    Path.getPointOnLine = function (dist, P1x, P1y, P2x, P2y, fromX, fromY) {\r\n        if (fromX === undefined) {\r\n            fromX = P1x;\r\n        }\r\n        if (fromY === undefined) {\r\n            fromY = P1y;\r\n        }\r\n        var m = (P2y - P1y) / (P2x - P1x + 0.00000001);\r\n        var run = Math.sqrt((dist * dist) / (1 + m * m));\r\n        if (P2x < P1x) {\r\n            run *= -1;\r\n        }\r\n        var rise = m * run;\r\n        var pt;\r\n        if (P2x === P1x) {\r\n            pt = {\r\n                x: fromX,\r\n                y: fromY + rise,\r\n            };\r\n        }\r\n        else if ((fromY - P1y) / (fromX - P1x + 0.00000001) === m) {\r\n            pt = {\r\n                x: fromX + run,\r\n                y: fromY + rise,\r\n            };\r\n        }\r\n        else {\r\n            var ix, iy;\r\n            var len = this.getLineLength(P1x, P1y, P2x, P2y);\r\n            var u = (fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y);\r\n            u = u / (len * len);\r\n            ix = P1x + u * (P2x - P1x);\r\n            iy = P1y + u * (P2y - P1y);\r\n            var pRise = this.getLineLength(fromX, fromY, ix, iy);\r\n            var pRun = Math.sqrt(dist * dist - pRise * pRise);\r\n            run = Math.sqrt((pRun * pRun) / (1 + m * m));\r\n            if (P2x < P1x) {\r\n                run *= -1;\r\n            }\r\n            rise = m * run;\r\n            pt = {\r\n                x: ix + run,\r\n                y: iy + rise,\r\n            };\r\n        }\r\n        return pt;\r\n    };\r\n    Path.getPointOnCubicBezier = function (pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\r\n        function CB1(t) {\r\n            return t * t * t;\r\n        }\r\n        function CB2(t) {\r\n            return 3 * t * t * (1 - t);\r\n        }\r\n        function CB3(t) {\r\n            return 3 * t * (1 - t) * (1 - t);\r\n        }\r\n        function CB4(t) {\r\n            return (1 - t) * (1 - t) * (1 - t);\r\n        }\r\n        var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\r\n        var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\r\n        return {\r\n            x: x,\r\n            y: y,\r\n        };\r\n    };\r\n    Path.getPointOnQuadraticBezier = function (pct, P1x, P1y, P2x, P2y, P3x, P3y) {\r\n        function QB1(t) {\r\n            return t * t;\r\n        }\r\n        function QB2(t) {\r\n            return 2 * t * (1 - t);\r\n        }\r\n        function QB3(t) {\r\n            return (1 - t) * (1 - t);\r\n        }\r\n        var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\r\n        var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\r\n        return {\r\n            x: x,\r\n            y: y,\r\n        };\r\n    };\r\n    Path.getPointOnEllipticalArc = function (cx, cy, rx, ry, theta, psi) {\r\n        var cosPsi = Math.cos(psi), sinPsi = Math.sin(psi);\r\n        var pt = {\r\n            x: rx * Math.cos(theta),\r\n            y: ry * Math.sin(theta),\r\n        };\r\n        return {\r\n            x: cx + (pt.x * cosPsi - pt.y * sinPsi),\r\n            y: cy + (pt.x * sinPsi + pt.y * cosPsi),\r\n        };\r\n    };\r\n    Path.parsePathData = function (data) {\r\n        if (!data) {\r\n            return [];\r\n        }\r\n        var cs = data;\r\n        var cc = [\r\n            'm',\r\n            'M',\r\n            'l',\r\n            'L',\r\n            'v',\r\n            'V',\r\n            'h',\r\n            'H',\r\n            'z',\r\n            'Z',\r\n            'c',\r\n            'C',\r\n            'q',\r\n            'Q',\r\n            't',\r\n            'T',\r\n            's',\r\n            'S',\r\n            'a',\r\n            'A',\r\n        ];\r\n        cs = cs.replace(new RegExp(' ', 'g'), ',');\r\n        for (var n = 0; n < cc.length; n++) {\r\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\r\n        }\r\n        var arr = cs.split('|');\r\n        var ca = [];\r\n        var coords = [];\r\n        var cpx = 0;\r\n        var cpy = 0;\r\n        var re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\r\n        var match;\r\n        for (n = 1; n < arr.length; n++) {\r\n            var str = arr[n];\r\n            var c = str.charAt(0);\r\n            str = str.slice(1);\r\n            coords.length = 0;\r\n            while ((match = re.exec(str))) {\r\n                coords.push(match[0]);\r\n            }\r\n            var p = [];\r\n            for (var j = 0, jlen = coords.length; j < jlen; j++) {\r\n                var parsed = parseFloat(coords[j]);\r\n                if (!isNaN(parsed)) {\r\n                    p.push(parsed);\r\n                }\r\n                else {\r\n                    p.push(0);\r\n                }\r\n            }\r\n            while (p.length > 0) {\r\n                if (isNaN(p[0])) {\r\n                    break;\r\n                }\r\n                var cmd = null;\r\n                var points = [];\r\n                var startX = cpx, startY = cpy;\r\n                var prevCmd, ctlPtx, ctlPty;\r\n                var rx, ry, psi, fa, fs, x1, y1;\r\n                switch (c) {\r\n                    case 'l':\r\n                        cpx += p.shift();\r\n                        cpy += p.shift();\r\n                        cmd = 'L';\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'L':\r\n                        cpx = p.shift();\r\n                        cpy = p.shift();\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'm':\r\n                        var dx = p.shift();\r\n                        var dy = p.shift();\r\n                        cpx += dx;\r\n                        cpy += dy;\r\n                        cmd = 'M';\r\n                        if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\r\n                            for (var idx = ca.length - 2; idx >= 0; idx--) {\r\n                                if (ca[idx].command === 'M') {\r\n                                    cpx = ca[idx].points[0] + dx;\r\n                                    cpy = ca[idx].points[1] + dy;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        points.push(cpx, cpy);\r\n                        c = 'l';\r\n                        break;\r\n                    case 'M':\r\n                        cpx = p.shift();\r\n                        cpy = p.shift();\r\n                        cmd = 'M';\r\n                        points.push(cpx, cpy);\r\n                        c = 'L';\r\n                        break;\r\n                    case 'h':\r\n                        cpx += p.shift();\r\n                        cmd = 'L';\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'H':\r\n                        cpx = p.shift();\r\n                        cmd = 'L';\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'v':\r\n                        cpy += p.shift();\r\n                        cmd = 'L';\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'V':\r\n                        cpy = p.shift();\r\n                        cmd = 'L';\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'C':\r\n                        points.push(p.shift(), p.shift(), p.shift(), p.shift());\r\n                        cpx = p.shift();\r\n                        cpy = p.shift();\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'c':\r\n                        points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\r\n                        cpx += p.shift();\r\n                        cpy += p.shift();\r\n                        cmd = 'C';\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'S':\r\n                        ctlPtx = cpx;\r\n                        ctlPty = cpy;\r\n                        prevCmd = ca[ca.length - 1];\r\n                        if (prevCmd.command === 'C') {\r\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\r\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\r\n                        }\r\n                        points.push(ctlPtx, ctlPty, p.shift(), p.shift());\r\n                        cpx = p.shift();\r\n                        cpy = p.shift();\r\n                        cmd = 'C';\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 's':\r\n                        ctlPtx = cpx;\r\n                        ctlPty = cpy;\r\n                        prevCmd = ca[ca.length - 1];\r\n                        if (prevCmd.command === 'C') {\r\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\r\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\r\n                        }\r\n                        points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\r\n                        cpx += p.shift();\r\n                        cpy += p.shift();\r\n                        cmd = 'C';\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'Q':\r\n                        points.push(p.shift(), p.shift());\r\n                        cpx = p.shift();\r\n                        cpy = p.shift();\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'q':\r\n                        points.push(cpx + p.shift(), cpy + p.shift());\r\n                        cpx += p.shift();\r\n                        cpy += p.shift();\r\n                        cmd = 'Q';\r\n                        points.push(cpx, cpy);\r\n                        break;\r\n                    case 'T':\r\n                        ctlPtx = cpx;\r\n                        ctlPty = cpy;\r\n                        prevCmd = ca[ca.length - 1];\r\n                        if (prevCmd.command === 'Q') {\r\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\r\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\r\n                        }\r\n                        cpx = p.shift();\r\n                        cpy = p.shift();\r\n                        cmd = 'Q';\r\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\r\n                        break;\r\n                    case 't':\r\n                        ctlPtx = cpx;\r\n                        ctlPty = cpy;\r\n                        prevCmd = ca[ca.length - 1];\r\n                        if (prevCmd.command === 'Q') {\r\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\r\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\r\n                        }\r\n                        cpx += p.shift();\r\n                        cpy += p.shift();\r\n                        cmd = 'Q';\r\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\r\n                        break;\r\n                    case 'A':\r\n                        rx = p.shift();\r\n                        ry = p.shift();\r\n                        psi = p.shift();\r\n                        fa = p.shift();\r\n                        fs = p.shift();\r\n                        x1 = cpx;\r\n                        y1 = cpy;\r\n                        cpx = p.shift();\r\n                        cpy = p.shift();\r\n                        cmd = 'A';\r\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\r\n                        break;\r\n                    case 'a':\r\n                        rx = p.shift();\r\n                        ry = p.shift();\r\n                        psi = p.shift();\r\n                        fa = p.shift();\r\n                        fs = p.shift();\r\n                        x1 = cpx;\r\n                        y1 = cpy;\r\n                        cpx += p.shift();\r\n                        cpy += p.shift();\r\n                        cmd = 'A';\r\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\r\n                        break;\r\n                }\r\n                ca.push({\r\n                    command: cmd || c,\r\n                    points: points,\r\n                    start: {\r\n                        x: startX,\r\n                        y: startY,\r\n                    },\r\n                    pathLength: this.calcLength(startX, startY, cmd || c, points),\r\n                });\r\n            }\r\n            if (c === 'z' || c === 'Z') {\r\n                ca.push({\r\n                    command: 'z',\r\n                    points: [],\r\n                    start: undefined,\r\n                    pathLength: 0,\r\n                });\r\n            }\r\n        }\r\n        return ca;\r\n    };\r\n    Path.calcLength = function (x, y, cmd, points) {\r\n        var len, p1, p2, t;\r\n        var path = Path;\r\n        switch (cmd) {\r\n            case 'L':\r\n                return path.getLineLength(x, y, points[0], points[1]);\r\n            case 'C':\r\n                len = 0.0;\r\n                p1 = path.getPointOnCubicBezier(0, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\r\n                for (t = 0.01; t <= 1; t += 0.01) {\r\n                    p2 = path.getPointOnCubicBezier(t, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\r\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\r\n                    p1 = p2;\r\n                }\r\n                return len;\r\n            case 'Q':\r\n                len = 0.0;\r\n                p1 = path.getPointOnQuadraticBezier(0, x, y, points[0], points[1], points[2], points[3]);\r\n                for (t = 0.01; t <= 1; t += 0.01) {\r\n                    p2 = path.getPointOnQuadraticBezier(t, x, y, points[0], points[1], points[2], points[3]);\r\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\r\n                    p1 = p2;\r\n                }\r\n                return len;\r\n            case 'A':\r\n                len = 0.0;\r\n                var start = points[4];\r\n                var dTheta = points[5];\r\n                var end = points[4] + dTheta;\r\n                var inc = Math.PI / 180.0;\r\n                if (Math.abs(start - end) < inc) {\r\n                    inc = Math.abs(start - end);\r\n                }\r\n                p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\r\n                if (dTheta < 0) {\r\n                    for (t = start - inc; t > end; t -= inc) {\r\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\r\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\r\n                        p1 = p2;\r\n                    }\r\n                }\r\n                else {\r\n                    for (t = start + inc; t < end; t += inc) {\r\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\r\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\r\n                        p1 = p2;\r\n                    }\r\n                }\r\n                p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\r\n                len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\r\n                return len;\r\n        }\r\n        return 0;\r\n    };\r\n    Path.convertEndpointToCenterParameterization = function (x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\r\n        var psi = psiDeg * (Math.PI / 180.0);\r\n        var xp = (Math.cos(psi) * (x1 - x2)) / 2.0 + (Math.sin(psi) * (y1 - y2)) / 2.0;\r\n        var yp = (-1 * Math.sin(psi) * (x1 - x2)) / 2.0 +\r\n            (Math.cos(psi) * (y1 - y2)) / 2.0;\r\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\r\n        if (lambda > 1) {\r\n            rx *= Math.sqrt(lambda);\r\n            ry *= Math.sqrt(lambda);\r\n        }\r\n        var f = Math.sqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) /\r\n            (rx * rx * (yp * yp) + ry * ry * (xp * xp)));\r\n        if (fa === fs) {\r\n            f *= -1;\r\n        }\r\n        if (isNaN(f)) {\r\n            f = 0;\r\n        }\r\n        var cxp = (f * rx * yp) / ry;\r\n        var cyp = (f * -ry * xp) / rx;\r\n        var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\r\n        var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\r\n        var vMag = function (v) {\r\n            return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n        };\r\n        var vRatio = function (u, v) {\r\n            return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\r\n        };\r\n        var vAngle = function (u, v) {\r\n            return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\r\n        };\r\n        var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\r\n        var u = [(xp - cxp) / rx, (yp - cyp) / ry];\r\n        var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\r\n        var dTheta = vAngle(u, v);\r\n        if (vRatio(u, v) <= -1) {\r\n            dTheta = Math.PI;\r\n        }\r\n        if (vRatio(u, v) >= 1) {\r\n            dTheta = 0;\r\n        }\r\n        if (fs === 0 && dTheta > 0) {\r\n            dTheta = dTheta - 2 * Math.PI;\r\n        }\r\n        if (fs === 1 && dTheta < 0) {\r\n            dTheta = dTheta + 2 * Math.PI;\r\n        }\r\n        return [cx, cy, rx, ry, theta, dTheta, psi, fs];\r\n    };\r\n    return Path;\r\n}(Shape_1.Shape));\r\nexports.Path = Path;\r\nPath.prototype.className = 'Path';\r\nPath.prototype._attrsAffectingSize = ['data'];\r\nGlobal_1._registerNode(Path);\r\nFactory_1.Factory.addGetterSetter(Path, 'data');\r\nUtil_1.Collection.mapMethods(Path);\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Rect = void 0;\r\nvar Util_1 = require(\"../Util\");\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Shape_1 = require(\"../Shape\");\r\nvar Global_1 = require(\"../Global\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Rect = (function (_super) {\r\n    __extends(Rect, _super);\r\n    function Rect() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Rect.prototype._sceneFunc = function (context) {\r\n        var cornerRadius = this.cornerRadius(), width = this.width(), height = this.height();\r\n        context.beginPath();\r\n        if (!cornerRadius) {\r\n            context.rect(0, 0, width, height);\r\n        }\r\n        else {\r\n            var topLeft = 0;\r\n            var topRight = 0;\r\n            var bottomLeft = 0;\r\n            var bottomRight = 0;\r\n            if (typeof cornerRadius === 'number') {\r\n                topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\r\n            }\r\n            else {\r\n                topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\r\n                topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\r\n                bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\r\n                bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\r\n            }\r\n            context.moveTo(topLeft, 0);\r\n            context.lineTo(width - topRight, 0);\r\n            context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\r\n            context.lineTo(width, height - bottomRight);\r\n            context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\r\n            context.lineTo(bottomLeft, height);\r\n            context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\r\n            context.lineTo(0, topLeft);\r\n            context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\r\n        }\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    };\r\n    return Rect;\r\n}(Shape_1.Shape));\r\nexports.Rect = Rect;\r\nRect.prototype.className = 'Rect';\r\nGlobal_1._registerNode(Rect);\r\nFactory_1.Factory.addGetterSetter(Rect, 'cornerRadius', 0, Validators_1.getNumberOrArrayOfNumbersValidator(4));\r\nUtil_1.Collection.mapMethods(Rect);\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RegularPolygon = void 0;\r\nvar Util_1 = require(\"../Util\");\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Shape_1 = require(\"../Shape\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Global_1 = require(\"../Global\");\r\nvar RegularPolygon = (function (_super) {\r\n    __extends(RegularPolygon, _super);\r\n    function RegularPolygon() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RegularPolygon.prototype._sceneFunc = function (context) {\r\n        var points = this._getPoints();\r\n        context.beginPath();\r\n        context.moveTo(points[0].x, points[0].y);\r\n        for (var n = 1; n < points.length; n++) {\r\n            context.lineTo(points[n].x, points[n].y);\r\n        }\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    };\r\n    RegularPolygon.prototype._getPoints = function () {\r\n        var sides = this.attrs.sides;\r\n        var radius = this.attrs.radius || 0;\r\n        var points = [];\r\n        for (var n = 0; n < sides; n++) {\r\n            points.push({\r\n                x: radius * Math.sin((n * 2 * Math.PI) / sides),\r\n                y: -1 * radius * Math.cos((n * 2 * Math.PI) / sides),\r\n            });\r\n        }\r\n        return points;\r\n    };\r\n    RegularPolygon.prototype.getSelfRect = function () {\r\n        var points = this._getPoints();\r\n        var minX = points[0].x;\r\n        var maxX = points[0].y;\r\n        var minY = points[0].x;\r\n        var maxY = points[0].y;\r\n        points.forEach(function (point) {\r\n            minX = Math.min(minX, point.x);\r\n            maxX = Math.max(maxX, point.x);\r\n            minY = Math.min(minY, point.y);\r\n            maxY = Math.max(maxY, point.y);\r\n        });\r\n        return {\r\n            x: minX,\r\n            y: minY,\r\n            width: maxX - minX,\r\n            height: maxY - minY,\r\n        };\r\n    };\r\n    RegularPolygon.prototype.getWidth = function () {\r\n        return this.radius() * 2;\r\n    };\r\n    RegularPolygon.prototype.getHeight = function () {\r\n        return this.radius() * 2;\r\n    };\r\n    RegularPolygon.prototype.setWidth = function (width) {\r\n        this.radius(width / 2);\r\n    };\r\n    RegularPolygon.prototype.setHeight = function (height) {\r\n        this.radius(height / 2);\r\n    };\r\n    return RegularPolygon;\r\n}(Shape_1.Shape));\r\nexports.RegularPolygon = RegularPolygon;\r\nRegularPolygon.prototype.className = 'RegularPolygon';\r\nRegularPolygon.prototype._centroid = true;\r\nRegularPolygon.prototype._attrsAffectingSize = ['radius'];\r\nGlobal_1._registerNode(RegularPolygon);\r\nFactory_1.Factory.addGetterSetter(RegularPolygon, 'radius', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(RegularPolygon, 'sides', 0, Validators_1.getNumberValidator());\r\nUtil_1.Collection.mapMethods(RegularPolygon);\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Ring = void 0;\r\nvar Util_1 = require(\"../Util\");\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Shape_1 = require(\"../Shape\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Global_1 = require(\"../Global\");\r\nvar PIx2 = Math.PI * 2;\r\nvar Ring = (function (_super) {\r\n    __extends(Ring, _super);\r\n    function Ring() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Ring.prototype._sceneFunc = function (context) {\r\n        context.beginPath();\r\n        context.arc(0, 0, this.innerRadius(), 0, PIx2, false);\r\n        context.moveTo(this.outerRadius(), 0);\r\n        context.arc(0, 0, this.outerRadius(), PIx2, 0, true);\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    };\r\n    Ring.prototype.getWidth = function () {\r\n        return this.outerRadius() * 2;\r\n    };\r\n    Ring.prototype.getHeight = function () {\r\n        return this.outerRadius() * 2;\r\n    };\r\n    Ring.prototype.setWidth = function (width) {\r\n        this.outerRadius(width / 2);\r\n    };\r\n    Ring.prototype.setHeight = function (height) {\r\n        this.outerRadius(height / 2);\r\n    };\r\n    return Ring;\r\n}(Shape_1.Shape));\r\nexports.Ring = Ring;\r\nRing.prototype.className = 'Ring';\r\nRing.prototype._centroid = true;\r\nRing.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\r\nGlobal_1._registerNode(Ring);\r\nFactory_1.Factory.addGetterSetter(Ring, 'innerRadius', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Ring, 'outerRadius', 0, Validators_1.getNumberValidator());\r\nUtil_1.Collection.mapMethods(Ring);\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Sprite = void 0;\r\nvar Util_1 = require(\"../Util\");\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Shape_1 = require(\"../Shape\");\r\nvar Animation_1 = require(\"../Animation\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Global_1 = require(\"../Global\");\r\nvar Sprite = (function (_super) {\r\n    __extends(Sprite, _super);\r\n    function Sprite(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this._updated = true;\r\n        _this.anim = new Animation_1.Animation(function () {\r\n            var updated = _this._updated;\r\n            _this._updated = false;\r\n            return updated;\r\n        });\r\n        _this.on('animationChange.konva', function () {\r\n            this.frameIndex(0);\r\n        });\r\n        _this.on('frameIndexChange.konva', function () {\r\n            this._updated = true;\r\n        });\r\n        _this.on('frameRateChange.konva', function () {\r\n            if (!this.anim.isRunning()) {\r\n                return;\r\n            }\r\n            clearInterval(this.interval);\r\n            this._setInterval();\r\n        });\r\n        return _this;\r\n    }\r\n    Sprite.prototype._sceneFunc = function (context) {\r\n        var anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), x = set[ix4 + 0], y = set[ix4 + 1], width = set[ix4 + 2], height = set[ix4 + 3], image = this.image();\r\n        if (this.hasFill() || this.hasStroke()) {\r\n            context.beginPath();\r\n            context.rect(0, 0, width, height);\r\n            context.closePath();\r\n            context.fillStrokeShape(this);\r\n        }\r\n        if (image) {\r\n            if (offsets) {\r\n                var offset = offsets[anim], ix2 = index * 2;\r\n                context.drawImage(image, x, y, width, height, offset[ix2 + 0], offset[ix2 + 1], width, height);\r\n            }\r\n            else {\r\n                context.drawImage(image, x, y, width, height, 0, 0, width, height);\r\n            }\r\n        }\r\n    };\r\n    Sprite.prototype._hitFunc = function (context) {\r\n        var anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), width = set[ix4 + 2], height = set[ix4 + 3];\r\n        context.beginPath();\r\n        if (offsets) {\r\n            var offset = offsets[anim];\r\n            var ix2 = index * 2;\r\n            context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\r\n        }\r\n        else {\r\n            context.rect(0, 0, width, height);\r\n        }\r\n        context.closePath();\r\n        context.fillShape(this);\r\n    };\r\n    Sprite.prototype._useBufferCanvas = function () {\r\n        return _super.prototype._useBufferCanvas.call(this, true);\r\n    };\r\n    Sprite.prototype._setInterval = function () {\r\n        var that = this;\r\n        this.interval = setInterval(function () {\r\n            that._updateIndex();\r\n        }, 1000 / this.frameRate());\r\n    };\r\n    Sprite.prototype.start = function () {\r\n        if (this.isRunning()) {\r\n            return;\r\n        }\r\n        var layer = this.getLayer();\r\n        this.anim.setLayers(layer);\r\n        this._setInterval();\r\n        this.anim.start();\r\n    };\r\n    Sprite.prototype.stop = function () {\r\n        this.anim.stop();\r\n        clearInterval(this.interval);\r\n    };\r\n    Sprite.prototype.isRunning = function () {\r\n        return this.anim.isRunning();\r\n    };\r\n    Sprite.prototype._updateIndex = function () {\r\n        var index = this.frameIndex(), animation = this.animation(), animations = this.animations(), anim = animations[animation], len = anim.length / 4;\r\n        if (index < len - 1) {\r\n            this.frameIndex(index + 1);\r\n        }\r\n        else {\r\n            this.frameIndex(0);\r\n        }\r\n    };\r\n    return Sprite;\r\n}(Shape_1.Shape));\r\nexports.Sprite = Sprite;\r\nSprite.prototype.className = 'Sprite';\r\nGlobal_1._registerNode(Sprite);\r\nFactory_1.Factory.addGetterSetter(Sprite, 'animation');\r\nFactory_1.Factory.addGetterSetter(Sprite, 'animations');\r\nFactory_1.Factory.addGetterSetter(Sprite, 'frameOffsets');\r\nFactory_1.Factory.addGetterSetter(Sprite, 'image');\r\nFactory_1.Factory.addGetterSetter(Sprite, 'frameIndex', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Sprite, 'frameRate', 17, Validators_1.getNumberValidator());\r\nFactory_1.Factory.backCompat(Sprite, {\r\n    index: 'frameIndex',\r\n    getIndex: 'getFrameIndex',\r\n    setIndex: 'setFrameIndex',\r\n});\r\nUtil_1.Collection.mapMethods(Sprite);\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Star = void 0;\r\nvar Util_1 = require(\"../Util\");\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Shape_1 = require(\"../Shape\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Global_1 = require(\"../Global\");\r\nvar Star = (function (_super) {\r\n    __extends(Star, _super);\r\n    function Star() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Star.prototype._sceneFunc = function (context) {\r\n        var innerRadius = this.innerRadius(), outerRadius = this.outerRadius(), numPoints = this.numPoints();\r\n        context.beginPath();\r\n        context.moveTo(0, 0 - outerRadius);\r\n        for (var n = 1; n < numPoints * 2; n++) {\r\n            var radius = n % 2 === 0 ? outerRadius : innerRadius;\r\n            var x = radius * Math.sin((n * Math.PI) / numPoints);\r\n            var y = -1 * radius * Math.cos((n * Math.PI) / numPoints);\r\n            context.lineTo(x, y);\r\n        }\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    };\r\n    Star.prototype.getWidth = function () {\r\n        return this.outerRadius() * 2;\r\n    };\r\n    Star.prototype.getHeight = function () {\r\n        return this.outerRadius() * 2;\r\n    };\r\n    Star.prototype.setWidth = function (width) {\r\n        this.outerRadius(width / 2);\r\n    };\r\n    Star.prototype.setHeight = function (height) {\r\n        this.outerRadius(height / 2);\r\n    };\r\n    return Star;\r\n}(Shape_1.Shape));\r\nexports.Star = Star;\r\nStar.prototype.className = 'Star';\r\nStar.prototype._centroid = true;\r\nStar.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\r\nGlobal_1._registerNode(Star);\r\nFactory_1.Factory.addGetterSetter(Star, 'numPoints', 5, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Star, 'innerRadius', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Star, 'outerRadius', 0, Validators_1.getNumberValidator());\r\nUtil_1.Collection.mapMethods(Star);\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Text = exports.stringToArray = void 0;\r\nvar Util_1 = require(\"../Util\");\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Shape_1 = require(\"../Shape\");\r\nvar Global_1 = require(\"../Global\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Global_2 = require(\"../Global\");\r\nfunction stringToArray(string) {\r\n    return Array.from(string);\r\n}\r\nexports.stringToArray = stringToArray;\r\nvar AUTO = 'auto', CENTER = 'center', JUSTIFY = 'justify', CHANGE_KONVA = 'Change.konva', CONTEXT_2D = '2d', DASH = '-', LEFT = 'left', TEXT = 'text', TEXT_UPPER = 'Text', TOP = 'top', BOTTOM = 'bottom', MIDDLE = 'middle', NORMAL = 'normal', PX_SPACE = 'px ', SPACE = ' ', RIGHT = 'right', WORD = 'word', CHAR = 'char', NONE = 'none', ELLIPSIS = '…', ATTR_CHANGE_LIST = [\r\n    'fontFamily',\r\n    'fontSize',\r\n    'fontStyle',\r\n    'fontVariant',\r\n    'padding',\r\n    'align',\r\n    'verticalAlign',\r\n    'lineHeight',\r\n    'text',\r\n    'width',\r\n    'height',\r\n    'wrap',\r\n    'ellipsis',\r\n    'letterSpacing',\r\n], attrChangeListLen = ATTR_CHANGE_LIST.length;\r\nfunction normalizeFontFamily(fontFamily) {\r\n    return fontFamily\r\n        .split(',')\r\n        .map(function (family) {\r\n        family = family.trim();\r\n        var hasSpace = family.indexOf(' ') >= 0;\r\n        var hasQuotes = family.indexOf('\"') >= 0 || family.indexOf(\"'\") >= 0;\r\n        if (hasSpace && !hasQuotes) {\r\n            family = \"\\\"\" + family + \"\\\"\";\r\n        }\r\n        return family;\r\n    })\r\n        .join(', ');\r\n}\r\nvar dummyContext;\r\nfunction getDummyContext() {\r\n    if (dummyContext) {\r\n        return dummyContext;\r\n    }\r\n    dummyContext = Util_1.Util.createCanvasElement().getContext(CONTEXT_2D);\r\n    return dummyContext;\r\n}\r\nfunction _fillFunc(context) {\r\n    context.fillText(this._partialText, this._partialTextX, this._partialTextY);\r\n}\r\nfunction _strokeFunc(context) {\r\n    context.strokeText(this._partialText, this._partialTextX, this._partialTextY);\r\n}\r\nfunction checkDefaultFill(config) {\r\n    config = config || {};\r\n    if (!config.fillLinearGradientColorStops &&\r\n        !config.fillRadialGradientColorStops &&\r\n        !config.fillPatternImage) {\r\n        config.fill = config.fill || 'black';\r\n    }\r\n    return config;\r\n}\r\nvar Text = (function (_super) {\r\n    __extends(Text, _super);\r\n    function Text(config) {\r\n        var _this = _super.call(this, checkDefaultFill(config)) || this;\r\n        _this._partialTextX = 0;\r\n        _this._partialTextY = 0;\r\n        for (var n = 0; n < attrChangeListLen; n++) {\r\n            _this.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, _this._setTextData);\r\n        }\r\n        _this._setTextData();\r\n        return _this;\r\n    }\r\n    Text.prototype._sceneFunc = function (context) {\r\n        var textArr = this.textArr, textArrLen = textArr.length;\r\n        if (!this.text()) {\r\n            return;\r\n        }\r\n        var padding = this.padding(), fontSize = this.fontSize(), lineHeightPx = this.lineHeight() * fontSize, verticalAlign = this.verticalAlign(), alignY = 0, align = this.align(), totalWidth = this.getWidth(), letterSpacing = this.letterSpacing(), fill = this.fill(), textDecoration = this.textDecoration(), shouldUnderline = textDecoration.indexOf('underline') !== -1, shouldLineThrough = textDecoration.indexOf('line-through') !== -1, n;\r\n        var translateY = 0;\r\n        var translateY = lineHeightPx / 2;\r\n        var lineTranslateX = 0;\r\n        var lineTranslateY = 0;\r\n        context.setAttr('font', this._getContextFont());\r\n        context.setAttr('textBaseline', MIDDLE);\r\n        context.setAttr('textAlign', LEFT);\r\n        if (verticalAlign === MIDDLE) {\r\n            alignY = (this.getHeight() - textArrLen * lineHeightPx - padding * 2) / 2;\r\n        }\r\n        else if (verticalAlign === BOTTOM) {\r\n            alignY = this.getHeight() - textArrLen * lineHeightPx - padding * 2;\r\n        }\r\n        context.translate(padding, alignY + padding);\r\n        for (n = 0; n < textArrLen; n++) {\r\n            var lineTranslateX = 0;\r\n            var lineTranslateY = 0;\r\n            var obj = textArr[n], text = obj.text, width = obj.width, lastLine = n !== textArrLen - 1, spacesNumber, oneWord, lineWidth;\r\n            context.save();\r\n            if (align === RIGHT) {\r\n                lineTranslateX += totalWidth - width - padding * 2;\r\n            }\r\n            else if (align === CENTER) {\r\n                lineTranslateX += (totalWidth - width - padding * 2) / 2;\r\n            }\r\n            if (shouldUnderline) {\r\n                context.save();\r\n                context.beginPath();\r\n                context.moveTo(lineTranslateX, translateY + lineTranslateY + Math.round(fontSize / 2));\r\n                spacesNumber = text.split(' ').length - 1;\r\n                oneWord = spacesNumber === 0;\r\n                lineWidth =\r\n                    align === JUSTIFY && lastLine && !oneWord\r\n                        ? totalWidth - padding * 2\r\n                        : width;\r\n                context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY + Math.round(fontSize / 2));\r\n                context.lineWidth = fontSize / 15;\r\n                context.strokeStyle = fill;\r\n                context.stroke();\r\n                context.restore();\r\n            }\r\n            if (shouldLineThrough) {\r\n                context.save();\r\n                context.beginPath();\r\n                context.moveTo(lineTranslateX, translateY + lineTranslateY);\r\n                spacesNumber = text.split(' ').length - 1;\r\n                oneWord = spacesNumber === 0;\r\n                lineWidth =\r\n                    align === JUSTIFY && lastLine && !oneWord\r\n                        ? totalWidth - padding * 2\r\n                        : width;\r\n                context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY);\r\n                context.lineWidth = fontSize / 15;\r\n                context.strokeStyle = fill;\r\n                context.stroke();\r\n                context.restore();\r\n            }\r\n            if (letterSpacing !== 0 || align === JUSTIFY) {\r\n                spacesNumber = text.split(' ').length - 1;\r\n                var array = stringToArray(text);\r\n                for (var li = 0; li < array.length; li++) {\r\n                    var letter = array[li];\r\n                    if (letter === ' ' && n !== textArrLen - 1 && align === JUSTIFY) {\r\n                        lineTranslateX += (totalWidth - padding * 2 - width) / spacesNumber;\r\n                    }\r\n                    this._partialTextX = lineTranslateX;\r\n                    this._partialTextY = translateY + lineTranslateY;\r\n                    this._partialText = letter;\r\n                    context.fillStrokeShape(this);\r\n                    lineTranslateX += this.measureSize(letter).width + letterSpacing;\r\n                }\r\n            }\r\n            else {\r\n                this._partialTextX = lineTranslateX;\r\n                this._partialTextY = translateY + lineTranslateY;\r\n                this._partialText = text;\r\n                context.fillStrokeShape(this);\r\n            }\r\n            context.restore();\r\n            if (textArrLen > 1) {\r\n                translateY += lineHeightPx;\r\n            }\r\n        }\r\n    };\r\n    Text.prototype._hitFunc = function (context) {\r\n        var width = this.getWidth(), height = this.getHeight();\r\n        context.beginPath();\r\n        context.rect(0, 0, width, height);\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    };\r\n    Text.prototype.setText = function (text) {\r\n        var str = Util_1.Util._isString(text)\r\n            ? text\r\n            : text === null || text === undefined\r\n                ? ''\r\n                : text + '';\r\n        this._setAttr(TEXT, str);\r\n        return this;\r\n    };\r\n    Text.prototype.getWidth = function () {\r\n        var isAuto = this.attrs.width === AUTO || this.attrs.width === undefined;\r\n        return isAuto ? this.getTextWidth() + this.padding() * 2 : this.attrs.width;\r\n    };\r\n    Text.prototype.getHeight = function () {\r\n        var isAuto = this.attrs.height === AUTO || this.attrs.height === undefined;\r\n        return isAuto\r\n            ? this.fontSize() * this.textArr.length * this.lineHeight() +\r\n                this.padding() * 2\r\n            : this.attrs.height;\r\n    };\r\n    Text.prototype.getTextWidth = function () {\r\n        return this.textWidth;\r\n    };\r\n    Text.prototype.getTextHeight = function () {\r\n        Util_1.Util.warn('text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.');\r\n        return this.textHeight;\r\n    };\r\n    Text.prototype.measureSize = function (text) {\r\n        var _context = getDummyContext(), fontSize = this.fontSize(), metrics;\r\n        _context.save();\r\n        _context.font = this._getContextFont();\r\n        metrics = _context.measureText(text);\r\n        _context.restore();\r\n        return {\r\n            width: metrics.width,\r\n            height: fontSize,\r\n        };\r\n    };\r\n    Text.prototype._getContextFont = function () {\r\n        if (Global_1.Konva.UA.isIE) {\r\n            return (this.fontStyle() +\r\n                SPACE +\r\n                this.fontSize() +\r\n                PX_SPACE +\r\n                this.fontFamily());\r\n        }\r\n        return (this.fontStyle() +\r\n            SPACE +\r\n            this.fontVariant() +\r\n            SPACE +\r\n            (this.fontSize() + PX_SPACE) +\r\n            normalizeFontFamily(this.fontFamily()));\r\n    };\r\n    Text.prototype._addTextLine = function (line) {\r\n        if (this.align() === JUSTIFY) {\r\n            line = line.trim();\r\n        }\r\n        var width = this._getTextWidth(line);\r\n        return this.textArr.push({ text: line, width: width });\r\n    };\r\n    Text.prototype._getTextWidth = function (text) {\r\n        var letterSpacing = this.letterSpacing();\r\n        var length = text.length;\r\n        return (getDummyContext().measureText(text).width +\r\n            (length ? letterSpacing * (length - 1) : 0));\r\n    };\r\n    Text.prototype._setTextData = function () {\r\n        var lines = this.text().split('\\n'), fontSize = +this.fontSize(), textWidth = 0, lineHeightPx = this.lineHeight() * fontSize, width = this.attrs.width, height = this.attrs.height, fixedWidth = width !== AUTO && width !== undefined, fixedHeight = height !== AUTO && height !== undefined, padding = this.padding(), maxWidth = width - padding * 2, maxHeightPx = height - padding * 2, currentHeightPx = 0, wrap = this.wrap(), shouldWrap = wrap !== NONE, wrapAtWord = wrap !== CHAR && shouldWrap, shouldAddEllipsis = this.ellipsis();\r\n        this.textArr = [];\r\n        getDummyContext().font = this._getContextFont();\r\n        var additionalWidth = shouldAddEllipsis ? this._getTextWidth(ELLIPSIS) : 0;\r\n        for (var i = 0, max = lines.length; i < max; ++i) {\r\n            var line = lines[i];\r\n            var lineWidth = this._getTextWidth(line);\r\n            if (fixedWidth && lineWidth > maxWidth) {\r\n                while (line.length > 0) {\r\n                    var low = 0, high = line.length, match = '', matchWidth = 0;\r\n                    while (low < high) {\r\n                        var mid = (low + high) >>> 1, substr = line.slice(0, mid + 1), substrWidth = this._getTextWidth(substr) + additionalWidth;\r\n                        if (substrWidth <= maxWidth) {\r\n                            low = mid + 1;\r\n                            match = substr;\r\n                            matchWidth = substrWidth;\r\n                        }\r\n                        else {\r\n                            high = mid;\r\n                        }\r\n                    }\r\n                    if (match) {\r\n                        if (wrapAtWord) {\r\n                            var wrapIndex;\r\n                            var nextChar = line[match.length];\r\n                            var nextIsSpaceOrDash = nextChar === SPACE || nextChar === DASH;\r\n                            if (nextIsSpaceOrDash && matchWidth <= maxWidth) {\r\n                                wrapIndex = match.length;\r\n                            }\r\n                            else {\r\n                                wrapIndex =\r\n                                    Math.max(match.lastIndexOf(SPACE), match.lastIndexOf(DASH)) +\r\n                                        1;\r\n                            }\r\n                            if (wrapIndex > 0) {\r\n                                low = wrapIndex;\r\n                                match = match.slice(0, low);\r\n                                matchWidth = this._getTextWidth(match);\r\n                            }\r\n                        }\r\n                        match = match.trimRight();\r\n                        this._addTextLine(match);\r\n                        textWidth = Math.max(textWidth, matchWidth);\r\n                        currentHeightPx += lineHeightPx;\r\n                        if (!shouldWrap ||\r\n                            (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx)) {\r\n                            var lastLine = this.textArr[this.textArr.length - 1];\r\n                            if (lastLine) {\r\n                                if (shouldAddEllipsis) {\r\n                                    var haveSpace = this._getTextWidth(lastLine.text + ELLIPSIS) < maxWidth;\r\n                                    if (!haveSpace) {\r\n                                        lastLine.text = lastLine.text.slice(0, lastLine.text.length - 3);\r\n                                    }\r\n                                    this.textArr.splice(this.textArr.length - 1, 1);\r\n                                    this._addTextLine(lastLine.text + ELLIPSIS);\r\n                                }\r\n                            }\r\n                            break;\r\n                        }\r\n                        line = line.slice(low);\r\n                        line = line.trimLeft();\r\n                        if (line.length > 0) {\r\n                            lineWidth = this._getTextWidth(line);\r\n                            if (lineWidth <= maxWidth) {\r\n                                this._addTextLine(line);\r\n                                currentHeightPx += lineHeightPx;\r\n                                textWidth = Math.max(textWidth, lineWidth);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._addTextLine(line);\r\n                currentHeightPx += lineHeightPx;\r\n                textWidth = Math.max(textWidth, lineWidth);\r\n            }\r\n            if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {\r\n                break;\r\n            }\r\n        }\r\n        this.textHeight = fontSize;\r\n        this.textWidth = textWidth;\r\n    };\r\n    Text.prototype.getStrokeScaleEnabled = function () {\r\n        return true;\r\n    };\r\n    return Text;\r\n}(Shape_1.Shape));\r\nexports.Text = Text;\r\nText.prototype._fillFunc = _fillFunc;\r\nText.prototype._strokeFunc = _strokeFunc;\r\nText.prototype.className = TEXT_UPPER;\r\nText.prototype._attrsAffectingSize = [\r\n    'text',\r\n    'fontSize',\r\n    'padding',\r\n    'wrap',\r\n    'lineHeight',\r\n    'letterSpacing',\r\n];\r\nGlobal_2._registerNode(Text);\r\nFactory_1.Factory.overWriteSetter(Text, 'width', Validators_1.getNumberOrAutoValidator());\r\nFactory_1.Factory.overWriteSetter(Text, 'height', Validators_1.getNumberOrAutoValidator());\r\nFactory_1.Factory.addGetterSetter(Text, 'fontFamily', 'Arial');\r\nFactory_1.Factory.addGetterSetter(Text, 'fontSize', 12, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Text, 'fontStyle', NORMAL);\r\nFactory_1.Factory.addGetterSetter(Text, 'fontVariant', NORMAL);\r\nFactory_1.Factory.addGetterSetter(Text, 'padding', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Text, 'align', LEFT);\r\nFactory_1.Factory.addGetterSetter(Text, 'verticalAlign', TOP);\r\nFactory_1.Factory.addGetterSetter(Text, 'lineHeight', 1, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Text, 'wrap', WORD);\r\nFactory_1.Factory.addGetterSetter(Text, 'ellipsis', false, Validators_1.getBooleanValidator());\r\nFactory_1.Factory.addGetterSetter(Text, 'letterSpacing', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Text, 'text', '', Validators_1.getStringValidator());\r\nFactory_1.Factory.addGetterSetter(Text, 'textDecoration', '');\r\nUtil_1.Collection.mapMethods(Text);\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TextPath = void 0;\r\nvar Util_1 = require(\"../Util\");\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Shape_1 = require(\"../Shape\");\r\nvar Path_1 = require(\"./Path\");\r\nvar Text_1 = require(\"./Text\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Global_1 = require(\"../Global\");\r\nvar EMPTY_STRING = '', NORMAL = 'normal';\r\nfunction _fillFunc(context) {\r\n    context.fillText(this.partialText, 0, 0);\r\n}\r\nfunction _strokeFunc(context) {\r\n    context.strokeText(this.partialText, 0, 0);\r\n}\r\nvar TextPath = (function (_super) {\r\n    __extends(TextPath, _super);\r\n    function TextPath(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.dummyCanvas = Util_1.Util.createCanvasElement();\r\n        _this.dataArray = [];\r\n        _this.dataArray = Path_1.Path.parsePathData(_this.attrs.data);\r\n        _this.on('dataChange.konva', function () {\r\n            this.dataArray = Path_1.Path.parsePathData(this.attrs.data);\r\n            this._setTextData();\r\n        });\r\n        _this.on('textChange.konva alignChange.konva letterSpacingChange.konva kerningFuncChange.konva', _this._setTextData);\r\n        if (config && config['getKerning']) {\r\n            Util_1.Util.warn('getKerning TextPath API is deprecated. Please use \"kerningFunc\" instead.');\r\n            _this.kerningFunc(config['getKerning']);\r\n        }\r\n        _this._setTextData();\r\n        return _this;\r\n    }\r\n    TextPath.prototype._sceneFunc = function (context) {\r\n        context.setAttr('font', this._getContextFont());\r\n        context.setAttr('textBaseline', this.textBaseline());\r\n        context.setAttr('textAlign', 'left');\r\n        context.save();\r\n        var textDecoration = this.textDecoration();\r\n        var fill = this.fill();\r\n        var fontSize = this.fontSize();\r\n        var glyphInfo = this.glyphInfo;\r\n        if (textDecoration === 'underline') {\r\n            context.beginPath();\r\n        }\r\n        for (var i = 0; i < glyphInfo.length; i++) {\r\n            context.save();\r\n            var p0 = glyphInfo[i].p0;\r\n            context.translate(p0.x, p0.y);\r\n            context.rotate(glyphInfo[i].rotation);\r\n            this.partialText = glyphInfo[i].text;\r\n            context.fillStrokeShape(this);\r\n            if (textDecoration === 'underline') {\r\n                if (i === 0) {\r\n                    context.moveTo(0, fontSize / 2 + 1);\r\n                }\r\n                context.lineTo(fontSize, fontSize / 2 + 1);\r\n            }\r\n            context.restore();\r\n        }\r\n        if (textDecoration === 'underline') {\r\n            context.strokeStyle = fill;\r\n            context.lineWidth = fontSize / 20;\r\n            context.stroke();\r\n        }\r\n        context.restore();\r\n    };\r\n    TextPath.prototype._hitFunc = function (context) {\r\n        context.beginPath();\r\n        var glyphInfo = this.glyphInfo;\r\n        if (glyphInfo.length >= 1) {\r\n            var p0 = glyphInfo[0].p0;\r\n            context.moveTo(p0.x, p0.y);\r\n        }\r\n        for (var i = 0; i < glyphInfo.length; i++) {\r\n            var p1 = glyphInfo[i].p1;\r\n            context.lineTo(p1.x, p1.y);\r\n        }\r\n        context.setAttr('lineWidth', this.fontSize());\r\n        context.setAttr('strokeStyle', this.colorKey);\r\n        context.stroke();\r\n    };\r\n    TextPath.prototype.getTextWidth = function () {\r\n        return this.textWidth;\r\n    };\r\n    TextPath.prototype.getTextHeight = function () {\r\n        Util_1.Util.warn('text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.');\r\n        return this.textHeight;\r\n    };\r\n    TextPath.prototype.setText = function (text) {\r\n        return Text_1.Text.prototype.setText.call(this, text);\r\n    };\r\n    TextPath.prototype._getContextFont = function () {\r\n        return Text_1.Text.prototype._getContextFont.call(this);\r\n    };\r\n    TextPath.prototype._getTextSize = function (text) {\r\n        var dummyCanvas = this.dummyCanvas;\r\n        var _context = dummyCanvas.getContext('2d');\r\n        _context.save();\r\n        _context.font = this._getContextFont();\r\n        var metrics = _context.measureText(text);\r\n        _context.restore();\r\n        return {\r\n            width: metrics.width,\r\n            height: parseInt(this.attrs.fontSize, 10),\r\n        };\r\n    };\r\n    TextPath.prototype._setTextData = function () {\r\n        var that = this;\r\n        var size = this._getTextSize(this.attrs.text);\r\n        var letterSpacing = this.letterSpacing();\r\n        var align = this.align();\r\n        var kerningFunc = this.kerningFunc();\r\n        this.textWidth = size.width;\r\n        this.textHeight = size.height;\r\n        var textFullWidth = Math.max(this.textWidth + ((this.attrs.text || '').length - 1) * letterSpacing, 0);\r\n        this.glyphInfo = [];\r\n        var fullPathWidth = 0;\r\n        for (var l = 0; l < that.dataArray.length; l++) {\r\n            if (that.dataArray[l].pathLength > 0) {\r\n                fullPathWidth += that.dataArray[l].pathLength;\r\n            }\r\n        }\r\n        var offset = 0;\r\n        if (align === 'center') {\r\n            offset = Math.max(0, fullPathWidth / 2 - textFullWidth / 2);\r\n        }\r\n        if (align === 'right') {\r\n            offset = Math.max(0, fullPathWidth - textFullWidth);\r\n        }\r\n        var charArr = Text_1.stringToArray(this.text());\r\n        var spacesNumber = this.text().split(' ').length - 1;\r\n        var p0, p1, pathCmd;\r\n        var pIndex = -1;\r\n        var currentT = 0;\r\n        var getNextPathSegment = function () {\r\n            currentT = 0;\r\n            var pathData = that.dataArray;\r\n            for (var j = pIndex + 1; j < pathData.length; j++) {\r\n                if (pathData[j].pathLength > 0) {\r\n                    pIndex = j;\r\n                    return pathData[j];\r\n                }\r\n                else if (pathData[j].command === 'M') {\r\n                    p0 = {\r\n                        x: pathData[j].points[0],\r\n                        y: pathData[j].points[1],\r\n                    };\r\n                }\r\n            }\r\n            return {};\r\n        };\r\n        var findSegmentToFitCharacter = function (c) {\r\n            var glyphWidth = that._getTextSize(c).width + letterSpacing;\r\n            if (c === ' ' && align === 'justify') {\r\n                glyphWidth += (fullPathWidth - textFullWidth) / spacesNumber;\r\n            }\r\n            var currLen = 0;\r\n            var attempts = 0;\r\n            p1 = undefined;\r\n            while (Math.abs(glyphWidth - currLen) / glyphWidth > 0.01 &&\r\n                attempts < 20) {\r\n                attempts++;\r\n                var cumulativePathLength = currLen;\r\n                while (pathCmd === undefined) {\r\n                    pathCmd = getNextPathSegment();\r\n                    if (pathCmd &&\r\n                        cumulativePathLength + pathCmd.pathLength < glyphWidth) {\r\n                        cumulativePathLength += pathCmd.pathLength;\r\n                        pathCmd = undefined;\r\n                    }\r\n                }\r\n                if (pathCmd === {} || p0 === undefined) {\r\n                    return undefined;\r\n                }\r\n                var needNewSegment = false;\r\n                switch (pathCmd.command) {\r\n                    case 'L':\r\n                        if (Path_1.Path.getLineLength(p0.x, p0.y, pathCmd.points[0], pathCmd.points[1]) > glyphWidth) {\r\n                            p1 = Path_1.Path.getPointOnLine(glyphWidth, p0.x, p0.y, pathCmd.points[0], pathCmd.points[1], p0.x, p0.y);\r\n                        }\r\n                        else {\r\n                            pathCmd = undefined;\r\n                        }\r\n                        break;\r\n                    case 'A':\r\n                        var start = pathCmd.points[4];\r\n                        var dTheta = pathCmd.points[5];\r\n                        var end = pathCmd.points[4] + dTheta;\r\n                        if (currentT === 0) {\r\n                            currentT = start + 0.00000001;\r\n                        }\r\n                        else if (glyphWidth > currLen) {\r\n                            currentT += ((Math.PI / 180.0) * dTheta) / Math.abs(dTheta);\r\n                        }\r\n                        else {\r\n                            currentT -= ((Math.PI / 360.0) * dTheta) / Math.abs(dTheta);\r\n                        }\r\n                        if ((dTheta < 0 && currentT < end) ||\r\n                            (dTheta >= 0 && currentT > end)) {\r\n                            currentT = end;\r\n                            needNewSegment = true;\r\n                        }\r\n                        p1 = Path_1.Path.getPointOnEllipticalArc(pathCmd.points[0], pathCmd.points[1], pathCmd.points[2], pathCmd.points[3], currentT, pathCmd.points[6]);\r\n                        break;\r\n                    case 'C':\r\n                        if (currentT === 0) {\r\n                            if (glyphWidth > pathCmd.pathLength) {\r\n                                currentT = 0.00000001;\r\n                            }\r\n                            else {\r\n                                currentT = glyphWidth / pathCmd.pathLength;\r\n                            }\r\n                        }\r\n                        else if (glyphWidth > currLen) {\r\n                            currentT += (glyphWidth - currLen) / pathCmd.pathLength / 2;\r\n                        }\r\n                        else {\r\n                            currentT = Math.max(currentT - (currLen - glyphWidth) / pathCmd.pathLength / 2, 0);\r\n                        }\r\n                        if (currentT > 1.0) {\r\n                            currentT = 1.0;\r\n                            needNewSegment = true;\r\n                        }\r\n                        p1 = Path_1.Path.getPointOnCubicBezier(currentT, pathCmd.start.x, pathCmd.start.y, pathCmd.points[0], pathCmd.points[1], pathCmd.points[2], pathCmd.points[3], pathCmd.points[4], pathCmd.points[5]);\r\n                        break;\r\n                    case 'Q':\r\n                        if (currentT === 0) {\r\n                            currentT = glyphWidth / pathCmd.pathLength;\r\n                        }\r\n                        else if (glyphWidth > currLen) {\r\n                            currentT += (glyphWidth - currLen) / pathCmd.pathLength;\r\n                        }\r\n                        else {\r\n                            currentT -= (currLen - glyphWidth) / pathCmd.pathLength;\r\n                        }\r\n                        if (currentT > 1.0) {\r\n                            currentT = 1.0;\r\n                            needNewSegment = true;\r\n                        }\r\n                        p1 = Path_1.Path.getPointOnQuadraticBezier(currentT, pathCmd.start.x, pathCmd.start.y, pathCmd.points[0], pathCmd.points[1], pathCmd.points[2], pathCmd.points[3]);\r\n                        break;\r\n                }\r\n                if (p1 !== undefined) {\r\n                    currLen = Path_1.Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\r\n                }\r\n                if (needNewSegment) {\r\n                    needNewSegment = false;\r\n                    pathCmd = undefined;\r\n                }\r\n            }\r\n        };\r\n        var testChar = 'C';\r\n        var glyphWidth = that._getTextSize(testChar).width + letterSpacing;\r\n        var lettersInOffset = offset / glyphWidth - 1;\r\n        for (var k = 0; k < lettersInOffset; k++) {\r\n            findSegmentToFitCharacter(testChar);\r\n            if (p0 === undefined || p1 === undefined) {\r\n                break;\r\n            }\r\n            p0 = p1;\r\n        }\r\n        for (var i = 0; i < charArr.length; i++) {\r\n            findSegmentToFitCharacter(charArr[i]);\r\n            if (p0 === undefined || p1 === undefined) {\r\n                break;\r\n            }\r\n            var width = Path_1.Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\r\n            var kern = 0;\r\n            if (kerningFunc) {\r\n                try {\r\n                    kern = kerningFunc(charArr[i - 1], charArr[i]) * this.fontSize();\r\n                }\r\n                catch (e) {\r\n                    kern = 0;\r\n                }\r\n            }\r\n            p0.x += kern;\r\n            p1.x += kern;\r\n            this.textWidth += kern;\r\n            var midpoint = Path_1.Path.getPointOnLine(kern + width / 2.0, p0.x, p0.y, p1.x, p1.y);\r\n            var rotation = Math.atan2(p1.y - p0.y, p1.x - p0.x);\r\n            this.glyphInfo.push({\r\n                transposeX: midpoint.x,\r\n                transposeY: midpoint.y,\r\n                text: charArr[i],\r\n                rotation: rotation,\r\n                p0: p0,\r\n                p1: p1,\r\n            });\r\n            p0 = p1;\r\n        }\r\n    };\r\n    TextPath.prototype.getSelfRect = function () {\r\n        if (!this.glyphInfo.length) {\r\n            return {\r\n                x: 0,\r\n                y: 0,\r\n                width: 0,\r\n                height: 0,\r\n            };\r\n        }\r\n        var points = [];\r\n        this.glyphInfo.forEach(function (info) {\r\n            points.push(info.p0.x);\r\n            points.push(info.p0.y);\r\n            points.push(info.p1.x);\r\n            points.push(info.p1.y);\r\n        });\r\n        var minX = points[0] || 0;\r\n        var maxX = points[0] || 0;\r\n        var minY = points[1] || 0;\r\n        var maxY = points[1] || 0;\r\n        var x, y;\r\n        for (var i = 0; i < points.length / 2; i++) {\r\n            x = points[i * 2];\r\n            y = points[i * 2 + 1];\r\n            minX = Math.min(minX, x);\r\n            maxX = Math.max(maxX, x);\r\n            minY = Math.min(minY, y);\r\n            maxY = Math.max(maxY, y);\r\n        }\r\n        var fontSize = this.fontSize();\r\n        return {\r\n            x: minX - fontSize / 2,\r\n            y: minY - fontSize / 2,\r\n            width: maxX - minX + fontSize,\r\n            height: maxY - minY + fontSize,\r\n        };\r\n    };\r\n    return TextPath;\r\n}(Shape_1.Shape));\r\nexports.TextPath = TextPath;\r\nTextPath.prototype._fillFunc = _fillFunc;\r\nTextPath.prototype._strokeFunc = _strokeFunc;\r\nTextPath.prototype._fillFuncHit = _fillFunc;\r\nTextPath.prototype._strokeFuncHit = _strokeFunc;\r\nTextPath.prototype.className = 'TextPath';\r\nTextPath.prototype._attrsAffectingSize = ['text', 'fontSize', 'data'];\r\nGlobal_1._registerNode(TextPath);\r\nFactory_1.Factory.addGetterSetter(TextPath, 'data');\r\nFactory_1.Factory.addGetterSetter(TextPath, 'fontFamily', 'Arial');\r\nFactory_1.Factory.addGetterSetter(TextPath, 'fontSize', 12, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(TextPath, 'fontStyle', NORMAL);\r\nFactory_1.Factory.addGetterSetter(TextPath, 'align', 'left');\r\nFactory_1.Factory.addGetterSetter(TextPath, 'letterSpacing', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(TextPath, 'textBaseline', 'middle');\r\nFactory_1.Factory.addGetterSetter(TextPath, 'fontVariant', NORMAL);\r\nFactory_1.Factory.addGetterSetter(TextPath, 'text', EMPTY_STRING);\r\nFactory_1.Factory.addGetterSetter(TextPath, 'textDecoration', null);\r\nFactory_1.Factory.addGetterSetter(TextPath, 'kerningFunc', null);\r\nUtil_1.Collection.mapMethods(TextPath);\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Transformer = void 0;\r\nvar Util_1 = require(\"../Util\");\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Node_1 = require(\"../Node\");\r\nvar Shape_1 = require(\"../Shape\");\r\nvar Rect_1 = require(\"./Rect\");\r\nvar Group_1 = require(\"../Group\");\r\nvar Global_1 = require(\"../Global\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Global_2 = require(\"../Global\");\r\nvar EVENTS_NAME = 'tr-konva';\r\nvar ATTR_CHANGE_LIST = [\r\n    'resizeEnabledChange',\r\n    'rotateAnchorOffsetChange',\r\n    'rotateEnabledChange',\r\n    'enabledAnchorsChange',\r\n    'anchorSizeChange',\r\n    'borderEnabledChange',\r\n    'borderStrokeChange',\r\n    'borderStrokeWidthChange',\r\n    'borderDashChange',\r\n    'anchorStrokeChange',\r\n    'anchorStrokeWidthChange',\r\n    'anchorFillChange',\r\n    'anchorCornerRadiusChange',\r\n    'ignoreStrokeChange',\r\n]\r\n    .map(function (e) { return e + (\".\" + EVENTS_NAME); })\r\n    .join(' ');\r\nvar NODES_RECT = 'nodesRect';\r\nvar TRANSFORM_CHANGE_STR = [\r\n    'widthChange',\r\n    'heightChange',\r\n    'scaleXChange',\r\n    'scaleYChange',\r\n    'skewXChange',\r\n    'skewYChange',\r\n    'rotationChange',\r\n    'offsetXChange',\r\n    'offsetYChange',\r\n    'transformsEnabledChange',\r\n    'strokeWidthChange',\r\n]\r\n    .map(function (e) { return e + (\".\" + EVENTS_NAME); })\r\n    .join(' ');\r\nvar ANGLES = {\r\n    'top-left': -45,\r\n    'top-center': 0,\r\n    'top-right': 45,\r\n    'middle-right': -90,\r\n    'middle-left': 90,\r\n    'bottom-left': -135,\r\n    'bottom-center': 180,\r\n    'bottom-right': 135,\r\n};\r\nvar TOUCH_DEVICE = 'ontouchstart' in Global_1.Konva._global;\r\nfunction getCursor(anchorName, rad) {\r\n    if (anchorName === 'rotater') {\r\n        return 'crosshair';\r\n    }\r\n    rad += Util_1.Util._degToRad(ANGLES[anchorName] || 0);\r\n    var angle = ((Util_1.Util._radToDeg(rad) % 360) + 360) % 360;\r\n    if (Util_1.Util._inRange(angle, 315 + 22.5, 360) || Util_1.Util._inRange(angle, 0, 22.5)) {\r\n        return 'ns-resize';\r\n    }\r\n    else if (Util_1.Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\r\n        return 'nesw-resize';\r\n    }\r\n    else if (Util_1.Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\r\n        return 'ew-resize';\r\n    }\r\n    else if (Util_1.Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\r\n        return 'nwse-resize';\r\n    }\r\n    else if (Util_1.Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\r\n        return 'ns-resize';\r\n    }\r\n    else if (Util_1.Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\r\n        return 'nesw-resize';\r\n    }\r\n    else if (Util_1.Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\r\n        return 'ew-resize';\r\n    }\r\n    else if (Util_1.Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\r\n        return 'nwse-resize';\r\n    }\r\n    else {\r\n        Util_1.Util.error('Transformer has unknown angle for cursor detection: ' + angle);\r\n        return 'pointer';\r\n    }\r\n}\r\nvar ANCHORS_NAMES = [\r\n    'top-left',\r\n    'top-center',\r\n    'top-right',\r\n    'middle-right',\r\n    'middle-left',\r\n    'bottom-left',\r\n    'bottom-center',\r\n    'bottom-right',\r\n];\r\nvar MAX_SAFE_INTEGER = 100000000;\r\nfunction getCenter(shape) {\r\n    return {\r\n        x: shape.x +\r\n            (shape.width / 2) * Math.cos(shape.rotation) +\r\n            (shape.height / 2) * Math.sin(-shape.rotation),\r\n        y: shape.y +\r\n            (shape.height / 2) * Math.cos(shape.rotation) +\r\n            (shape.width / 2) * Math.sin(shape.rotation),\r\n    };\r\n}\r\nfunction rotateAroundPoint(shape, angleRad, point) {\r\n    var x = point.x +\r\n        (shape.x - point.x) * Math.cos(angleRad) -\r\n        (shape.y - point.y) * Math.sin(angleRad);\r\n    var y = point.y +\r\n        (shape.x - point.x) * Math.sin(angleRad) +\r\n        (shape.y - point.y) * Math.cos(angleRad);\r\n    return __assign(__assign({}, shape), { rotation: shape.rotation + angleRad, x: x,\r\n        y: y });\r\n}\r\nfunction rotateAroundCenter(shape, deltaRad) {\r\n    var center = getCenter(shape);\r\n    return rotateAroundPoint(shape, deltaRad, center);\r\n}\r\nfunction getSnap(snaps, newRotationRad, tol) {\r\n    var snapped = newRotationRad;\r\n    for (var i = 0; i < snaps.length; i++) {\r\n        var angle = Global_1.Konva.getAngle(snaps[i]);\r\n        var absDiff = Math.abs(angle - newRotationRad) % (Math.PI * 2);\r\n        var dif = Math.min(absDiff, Math.PI * 2 - absDiff);\r\n        if (dif < tol) {\r\n            snapped = angle;\r\n        }\r\n    }\r\n    return snapped;\r\n}\r\nvar Transformer = (function (_super) {\r\n    __extends(Transformer, _super);\r\n    function Transformer(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this._transforming = false;\r\n        _this._createElements();\r\n        _this._handleMouseMove = _this._handleMouseMove.bind(_this);\r\n        _this._handleMouseUp = _this._handleMouseUp.bind(_this);\r\n        _this.update = _this.update.bind(_this);\r\n        _this.on(ATTR_CHANGE_LIST, _this.update);\r\n        if (_this.getNode()) {\r\n            _this.update();\r\n        }\r\n        return _this;\r\n    }\r\n    Transformer.prototype.attachTo = function (node) {\r\n        this.setNode(node);\r\n        return this;\r\n    };\r\n    Transformer.prototype.setNode = function (node) {\r\n        Util_1.Util.warn('tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead.');\r\n        return this.setNodes([node]);\r\n    };\r\n    Transformer.prototype.getNode = function () {\r\n        return this._nodes && this._nodes[0];\r\n    };\r\n    Transformer.prototype.setNodes = function (nodes) {\r\n        var _this = this;\r\n        if (nodes === void 0) { nodes = []; }\r\n        if (this._nodes && this._nodes.length) {\r\n            this.detach();\r\n        }\r\n        this._nodes = nodes;\r\n        if (nodes.length === 1) {\r\n            this.rotation(nodes[0].getAbsoluteRotation());\r\n        }\r\n        else {\r\n            this.rotation(0);\r\n        }\r\n        this._nodes.forEach(function (node) {\r\n            var additionalEvents = node._attrsAffectingSize\r\n                .map(function (prop) { return prop + 'Change.' + EVENTS_NAME; })\r\n                .join(' ');\r\n            var onChange = function () {\r\n                if (_this.nodes().length === 1) {\r\n                    _this.rotation(_this.nodes()[0].getAbsoluteRotation());\r\n                }\r\n                _this._resetTransformCache();\r\n                if (!_this._transforming && !_this.isDragging()) {\r\n                    _this.update();\r\n                }\r\n            };\r\n            node.on(additionalEvents, onChange);\r\n            node.on(TRANSFORM_CHANGE_STR, onChange);\r\n            node.on(\"_clearTransformCache.\" + EVENTS_NAME, onChange);\r\n            node.on(\"xChange.\" + EVENTS_NAME + \" yChange.\" + EVENTS_NAME, onChange);\r\n            _this._proxyDrag(node);\r\n        });\r\n        this._resetTransformCache();\r\n        var elementsCreated = !!this.findOne('.top-left');\r\n        if (elementsCreated) {\r\n            this.update();\r\n        }\r\n        return this;\r\n    };\r\n    Transformer.prototype._proxyDrag = function (node) {\r\n        var _this = this;\r\n        var lastPos;\r\n        node.on(\"dragstart.\" + EVENTS_NAME, function (e) {\r\n            lastPos = node.getAbsolutePosition();\r\n            if (!_this.isDragging() && node !== _this.findOne('.back')) {\r\n                _this.startDrag(e, false);\r\n            }\r\n        });\r\n        node.on(\"dragmove.\" + EVENTS_NAME, function (e) {\r\n            if (!lastPos) {\r\n                return;\r\n            }\r\n            var abs = node.getAbsolutePosition();\r\n            var dx = abs.x - lastPos.x;\r\n            var dy = abs.y - lastPos.y;\r\n            _this.nodes().forEach(function (otherNode) {\r\n                if (otherNode === node) {\r\n                    return;\r\n                }\r\n                if (otherNode.isDragging()) {\r\n                    return;\r\n                }\r\n                var otherAbs = otherNode.getAbsolutePosition();\r\n                otherNode.setAbsolutePosition({\r\n                    x: otherAbs.x + dx,\r\n                    y: otherAbs.y + dy,\r\n                });\r\n                otherNode.startDrag(e);\r\n            });\r\n            lastPos = null;\r\n        });\r\n    };\r\n    Transformer.prototype.getNodes = function () {\r\n        return this._nodes || [];\r\n    };\r\n    Transformer.prototype.getActiveAnchor = function () {\r\n        return this._movingAnchorName;\r\n    };\r\n    Transformer.prototype.detach = function () {\r\n        if (this._nodes) {\r\n            this._nodes.forEach(function (node) {\r\n                node.off('.' + EVENTS_NAME);\r\n            });\r\n        }\r\n        this._nodes = [];\r\n        this._resetTransformCache();\r\n    };\r\n    Transformer.prototype._resetTransformCache = function () {\r\n        this._clearCache(NODES_RECT);\r\n        this._clearCache('transform');\r\n        this._clearSelfAndDescendantCache('absoluteTransform');\r\n    };\r\n    Transformer.prototype._getNodeRect = function () {\r\n        return this._getCache(NODES_RECT, this.__getNodeRect);\r\n    };\r\n    Transformer.prototype.__getNodeShape = function (node, rot, relative) {\r\n        if (rot === void 0) { rot = this.rotation(); }\r\n        var rect = node.getClientRect({\r\n            skipTransform: true,\r\n            skipShadow: true,\r\n            skipStroke: this.ignoreStroke(),\r\n        });\r\n        var absScale = node.getAbsoluteScale(relative);\r\n        var absPos = node.getAbsolutePosition(relative);\r\n        var dx = rect.x * absScale.x - node.offsetX() * absScale.x;\r\n        var dy = rect.y * absScale.y - node.offsetY() * absScale.y;\r\n        var rotation = (Global_1.Konva.getAngle(node.getAbsoluteRotation()) + Math.PI * 2) %\r\n            (Math.PI * 2);\r\n        var box = {\r\n            x: absPos.x + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\r\n            y: absPos.y + dy * Math.cos(rotation) + dx * Math.sin(rotation),\r\n            width: rect.width * absScale.x,\r\n            height: rect.height * absScale.y,\r\n            rotation: rotation,\r\n        };\r\n        return rotateAroundPoint(box, -Global_1.Konva.getAngle(rot), {\r\n            x: 0,\r\n            y: 0,\r\n        });\r\n    };\r\n    Transformer.prototype.__getNodeRect = function () {\r\n        var _this = this;\r\n        var node = this.getNode();\r\n        if (!node) {\r\n            return {\r\n                x: -MAX_SAFE_INTEGER,\r\n                y: -MAX_SAFE_INTEGER,\r\n                width: 0,\r\n                height: 0,\r\n                rotation: 0,\r\n            };\r\n        }\r\n        var totalPoints = [];\r\n        this.nodes().map(function (node) {\r\n            var box = node.getClientRect({\r\n                skipTransform: true,\r\n                skipShadow: true,\r\n                skipStroke: _this.ignoreStroke(),\r\n            });\r\n            var points = [\r\n                { x: box.x, y: box.y },\r\n                { x: box.x + box.width, y: box.y },\r\n                { x: box.x + box.width, y: box.y + box.height },\r\n                { x: box.x, y: box.y + box.height },\r\n            ];\r\n            var trans = node.getAbsoluteTransform();\r\n            points.forEach(function (point) {\r\n                var transformed = trans.point(point);\r\n                totalPoints.push(transformed);\r\n            });\r\n        });\r\n        var tr = new Util_1.Transform();\r\n        tr.rotate(-Global_1.Konva.getAngle(this.rotation()));\r\n        var minX, minY, maxX, maxY;\r\n        totalPoints.forEach(function (point) {\r\n            var transformed = tr.point(point);\r\n            if (minX === undefined) {\r\n                minX = maxX = transformed.x;\r\n                minY = maxY = transformed.y;\r\n            }\r\n            minX = Math.min(minX, transformed.x);\r\n            minY = Math.min(minY, transformed.y);\r\n            maxX = Math.max(maxX, transformed.x);\r\n            maxY = Math.max(maxY, transformed.y);\r\n        });\r\n        tr.invert();\r\n        var p = tr.point({ x: minX, y: minY });\r\n        return {\r\n            x: p.x,\r\n            y: p.y,\r\n            width: maxX - minX,\r\n            height: maxY - minY,\r\n            rotation: Global_1.Konva.getAngle(this.rotation()),\r\n        };\r\n    };\r\n    Transformer.prototype.getX = function () {\r\n        return this._getNodeRect().x;\r\n    };\r\n    Transformer.prototype.getY = function () {\r\n        return this._getNodeRect().y;\r\n    };\r\n    Transformer.prototype.getWidth = function () {\r\n        return this._getNodeRect().width;\r\n    };\r\n    Transformer.prototype.getHeight = function () {\r\n        return this._getNodeRect().height;\r\n    };\r\n    Transformer.prototype._createElements = function () {\r\n        this._createBack();\r\n        ANCHORS_NAMES.forEach(function (name) {\r\n            this._createAnchor(name);\r\n        }.bind(this));\r\n        this._createAnchor('rotater');\r\n    };\r\n    Transformer.prototype._createAnchor = function (name) {\r\n        var _this = this;\r\n        var anchor = new Rect_1.Rect({\r\n            stroke: 'rgb(0, 161, 255)',\r\n            fill: 'white',\r\n            strokeWidth: 1,\r\n            name: name + ' _anchor',\r\n            dragDistance: 0,\r\n            draggable: true,\r\n            hitStrokeWidth: TOUCH_DEVICE ? 10 : 'auto',\r\n        });\r\n        var self = this;\r\n        anchor.on('mousedown touchstart', function (e) {\r\n            self._handleMouseDown(e);\r\n        });\r\n        anchor.on('dragstart', function (e) {\r\n            anchor.stopDrag();\r\n            e.cancelBubble = true;\r\n        });\r\n        anchor.on('dragend', function (e) {\r\n            e.cancelBubble = true;\r\n        });\r\n        anchor.on('mouseenter', function () {\r\n            var rad = Global_1.Konva.getAngle(_this.rotation());\r\n            var cursor = getCursor(name, rad);\r\n            anchor.getStage().content.style.cursor = cursor;\r\n            _this._cursorChange = true;\r\n        });\r\n        anchor.on('mouseout', function () {\r\n            anchor.getStage().content.style.cursor = '';\r\n            _this._cursorChange = false;\r\n        });\r\n        this.add(anchor);\r\n    };\r\n    Transformer.prototype._createBack = function () {\r\n        var _this = this;\r\n        var back = new Shape_1.Shape({\r\n            name: 'back',\r\n            width: 0,\r\n            height: 0,\r\n            draggable: true,\r\n            sceneFunc: function (ctx) {\r\n                var tr = this.getParent();\r\n                var padding = tr.padding();\r\n                ctx.beginPath();\r\n                ctx.rect(-padding, -padding, this.width() + padding * 2, this.height() + padding * 2);\r\n                ctx.moveTo(this.width() / 2, -padding);\r\n                if (tr.rotateEnabled()) {\r\n                    ctx.lineTo(this.width() / 2, -tr.rotateAnchorOffset() * Util_1.Util._sign(this.height()) - padding);\r\n                }\r\n                ctx.fillStrokeShape(this);\r\n            },\r\n            hitFunc: function (ctx, shape) {\r\n                if (!_this.shouldOverdrawWholeArea()) {\r\n                    return;\r\n                }\r\n                var padding = _this.padding();\r\n                ctx.beginPath();\r\n                ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\r\n                ctx.fillStrokeShape(shape);\r\n            },\r\n        });\r\n        this.add(back);\r\n        this._proxyDrag(back);\r\n        back.on('dragstart', function (e) {\r\n            e.cancelBubble = true;\r\n        });\r\n        back.on('dragmove', function (e) {\r\n            e.cancelBubble = true;\r\n        });\r\n        back.on('dragend', function (e) {\r\n            e.cancelBubble = true;\r\n        });\r\n    };\r\n    Transformer.prototype._handleMouseDown = function (e) {\r\n        this._movingAnchorName = e.target.name().split(' ')[0];\r\n        var attrs = this._getNodeRect();\r\n        var width = attrs.width;\r\n        var height = attrs.height;\r\n        var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\r\n        this.sin = Math.abs(height / hypotenuse);\r\n        this.cos = Math.abs(width / hypotenuse);\r\n        window.addEventListener('mousemove', this._handleMouseMove);\r\n        window.addEventListener('touchmove', this._handleMouseMove);\r\n        window.addEventListener('mouseup', this._handleMouseUp, true);\r\n        window.addEventListener('touchend', this._handleMouseUp, true);\r\n        this._transforming = true;\r\n        var ap = e.target.getAbsolutePosition();\r\n        var pos = e.target.getStage().getPointerPosition();\r\n        this._anchorDragOffset = {\r\n            x: pos.x - ap.x,\r\n            y: pos.y - ap.y,\r\n        };\r\n        this._fire('transformstart', { evt: e, target: this.getNode() });\r\n        this._nodes.forEach(function (target) {\r\n            target._fire('transformstart', { evt: e, target: target });\r\n        });\r\n    };\r\n    Transformer.prototype._handleMouseMove = function (e) {\r\n        var x, y, newHypotenuse;\r\n        var anchorNode = this.findOne('.' + this._movingAnchorName);\r\n        var stage = anchorNode.getStage();\r\n        stage.setPointersPositions(e);\r\n        var pp = stage.getPointerPosition();\r\n        var newNodePos = {\r\n            x: pp.x - this._anchorDragOffset.x,\r\n            y: pp.y - this._anchorDragOffset.y,\r\n        };\r\n        var oldAbs = anchorNode.getAbsolutePosition();\r\n        anchorNode.setAbsolutePosition(newNodePos);\r\n        var newAbs = anchorNode.getAbsolutePosition();\r\n        if (oldAbs.x === newAbs.x && oldAbs.y === newAbs.y) {\r\n            return;\r\n        }\r\n        if (this._movingAnchorName === 'rotater') {\r\n            var attrs = this._getNodeRect();\r\n            x = anchorNode.x() - attrs.width / 2;\r\n            y = -anchorNode.y() + attrs.height / 2;\r\n            var delta = Math.atan2(-y, x) + Math.PI / 2;\r\n            if (attrs.height < 0) {\r\n                delta -= Math.PI;\r\n            }\r\n            var oldRotation = Global_1.Konva.getAngle(this.rotation());\r\n            var newRotation = oldRotation + delta;\r\n            var tol = Global_1.Konva.getAngle(this.rotationSnapTolerance());\r\n            var snappedRot = getSnap(this.rotationSnaps(), newRotation, tol);\r\n            var diff = snappedRot - attrs.rotation;\r\n            var shape = rotateAroundCenter(attrs, diff);\r\n            this._fitNodesInto(shape, e);\r\n            return;\r\n        }\r\n        var keepProportion = this.keepRatio() || e.shiftKey;\r\n        var centeredScaling = this.centeredScaling() || e.altKey;\r\n        if (this._movingAnchorName === 'top-left') {\r\n            if (keepProportion) {\r\n                var comparePoint = centeredScaling\r\n                    ? {\r\n                        x: this.width() / 2,\r\n                        y: this.height() / 2,\r\n                    }\r\n                    : {\r\n                        x: this.findOne('.bottom-right').x(),\r\n                        y: this.findOne('.bottom-right').y(),\r\n                    };\r\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\r\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\r\n                var reverseX = this.findOne('.top-left').x() > comparePoint.x ? -1 : 1;\r\n                var reverseY = this.findOne('.top-left').y() > comparePoint.y ? -1 : 1;\r\n                x = newHypotenuse * this.cos * reverseX;\r\n                y = newHypotenuse * this.sin * reverseY;\r\n                this.findOne('.top-left').x(comparePoint.x - x);\r\n                this.findOne('.top-left').y(comparePoint.y - y);\r\n            }\r\n        }\r\n        else if (this._movingAnchorName === 'top-center') {\r\n            this.findOne('.top-left').y(anchorNode.y());\r\n        }\r\n        else if (this._movingAnchorName === 'top-right') {\r\n            if (keepProportion) {\r\n                var comparePoint = centeredScaling\r\n                    ? {\r\n                        x: this.width() / 2,\r\n                        y: this.height() / 2,\r\n                    }\r\n                    : {\r\n                        x: this.findOne('.bottom-left').x(),\r\n                        y: this.findOne('.bottom-left').y(),\r\n                    };\r\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\r\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\r\n                var reverseX = this.findOne('.top-right').x() < comparePoint.x ? -1 : 1;\r\n                var reverseY = this.findOne('.top-right').y() > comparePoint.y ? -1 : 1;\r\n                x = newHypotenuse * this.cos * reverseX;\r\n                y = newHypotenuse * this.sin * reverseY;\r\n                this.findOne('.top-right').x(comparePoint.x + x);\r\n                this.findOne('.top-right').y(comparePoint.y - y);\r\n            }\r\n            var pos = anchorNode.position();\r\n            this.findOne('.top-left').y(pos.y);\r\n            this.findOne('.bottom-right').x(pos.x);\r\n        }\r\n        else if (this._movingAnchorName === 'middle-left') {\r\n            this.findOne('.top-left').x(anchorNode.x());\r\n        }\r\n        else if (this._movingAnchorName === 'middle-right') {\r\n            this.findOne('.bottom-right').x(anchorNode.x());\r\n        }\r\n        else if (this._movingAnchorName === 'bottom-left') {\r\n            if (keepProportion) {\r\n                var comparePoint = centeredScaling\r\n                    ? {\r\n                        x: this.width() / 2,\r\n                        y: this.height() / 2,\r\n                    }\r\n                    : {\r\n                        x: this.findOne('.top-right').x(),\r\n                        y: this.findOne('.top-right').y(),\r\n                    };\r\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\r\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\r\n                var reverseX = comparePoint.x < anchorNode.x() ? -1 : 1;\r\n                var reverseY = anchorNode.y() < comparePoint.y ? -1 : 1;\r\n                x = newHypotenuse * this.cos * reverseX;\r\n                y = newHypotenuse * this.sin * reverseY;\r\n                anchorNode.x(comparePoint.x - x);\r\n                anchorNode.y(comparePoint.y + y);\r\n            }\r\n            pos = anchorNode.position();\r\n            this.findOne('.top-left').x(pos.x);\r\n            this.findOne('.bottom-right').y(pos.y);\r\n        }\r\n        else if (this._movingAnchorName === 'bottom-center') {\r\n            this.findOne('.bottom-right').y(anchorNode.y());\r\n        }\r\n        else if (this._movingAnchorName === 'bottom-right') {\r\n            if (keepProportion) {\r\n                var comparePoint = centeredScaling\r\n                    ? {\r\n                        x: this.width() / 2,\r\n                        y: this.height() / 2,\r\n                    }\r\n                    : {\r\n                        x: this.findOne('.top-left').x(),\r\n                        y: this.findOne('.top-left').y(),\r\n                    };\r\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\r\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\r\n                var reverseX = this.findOne('.bottom-right').x() < comparePoint.x ? -1 : 1;\r\n                var reverseY = this.findOne('.bottom-right').y() < comparePoint.y ? -1 : 1;\r\n                x = newHypotenuse * this.cos * reverseX;\r\n                y = newHypotenuse * this.sin * reverseY;\r\n                this.findOne('.bottom-right').x(comparePoint.x + x);\r\n                this.findOne('.bottom-right').y(comparePoint.y + y);\r\n            }\r\n        }\r\n        else {\r\n            console.error(new Error('Wrong position argument of selection resizer: ' +\r\n                this._movingAnchorName));\r\n        }\r\n        var centeredScaling = this.centeredScaling() || e.altKey;\r\n        if (centeredScaling) {\r\n            var topLeft = this.findOne('.top-left');\r\n            var bottomRight = this.findOne('.bottom-right');\r\n            var topOffsetX = topLeft.x();\r\n            var topOffsetY = topLeft.y();\r\n            var bottomOffsetX = this.getWidth() - bottomRight.x();\r\n            var bottomOffsetY = this.getHeight() - bottomRight.y();\r\n            bottomRight.move({\r\n                x: -topOffsetX,\r\n                y: -topOffsetY,\r\n            });\r\n            topLeft.move({\r\n                x: bottomOffsetX,\r\n                y: bottomOffsetY,\r\n            });\r\n        }\r\n        var absPos = this.findOne('.top-left').getAbsolutePosition();\r\n        x = absPos.x;\r\n        y = absPos.y;\r\n        var width = this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\r\n        var height = this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\r\n        this._fitNodesInto({\r\n            x: x,\r\n            y: y,\r\n            width: width,\r\n            height: height,\r\n            rotation: Global_1.Konva.getAngle(this.rotation()),\r\n        }, e);\r\n    };\r\n    Transformer.prototype._handleMouseUp = function (e) {\r\n        this._removeEvents(e);\r\n    };\r\n    Transformer.prototype.getAbsoluteTransform = function () {\r\n        return this.getTransform();\r\n    };\r\n    Transformer.prototype._removeEvents = function (e) {\r\n        if (this._transforming) {\r\n            this._transforming = false;\r\n            window.removeEventListener('mousemove', this._handleMouseMove);\r\n            window.removeEventListener('touchmove', this._handleMouseMove);\r\n            window.removeEventListener('mouseup', this._handleMouseUp, true);\r\n            window.removeEventListener('touchend', this._handleMouseUp, true);\r\n            var node = this.getNode();\r\n            this._fire('transformend', { evt: e, target: node });\r\n            if (node) {\r\n                this._nodes.forEach(function (target) {\r\n                    target._fire('transformend', { evt: e, target: target });\r\n                });\r\n            }\r\n            this._movingAnchorName = null;\r\n        }\r\n    };\r\n    Transformer.prototype._fitNodesInto = function (newAttrs, evt) {\r\n        var _this = this;\r\n        var oldAttrs = this._getNodeRect();\r\n        var minSize = 1;\r\n        if (Util_1.Util._inRange(newAttrs.width, -this.padding() * 2 - minSize, minSize)) {\r\n            this.update();\r\n            return;\r\n        }\r\n        if (Util_1.Util._inRange(newAttrs.height, -this.padding() * 2 - minSize, minSize)) {\r\n            this.update();\r\n            return;\r\n        }\r\n        var allowNegativeScale = true;\r\n        var t = new Util_1.Transform();\r\n        t.rotate(Global_1.Konva.getAngle(this.rotation()));\r\n        if (this._movingAnchorName &&\r\n            newAttrs.width < 0 &&\r\n            this._movingAnchorName.indexOf('left') >= 0) {\r\n            var offset = t.point({\r\n                x: -this.padding() * 2,\r\n                y: 0,\r\n            });\r\n            newAttrs.x += offset.x;\r\n            newAttrs.y += offset.y;\r\n            newAttrs.width += this.padding() * 2;\r\n            this._movingAnchorName = this._movingAnchorName.replace('left', 'right');\r\n            this._anchorDragOffset.x -= offset.x;\r\n            this._anchorDragOffset.y -= offset.y;\r\n            if (!allowNegativeScale) {\r\n                this.update();\r\n                return;\r\n            }\r\n        }\r\n        else if (this._movingAnchorName &&\r\n            newAttrs.width < 0 &&\r\n            this._movingAnchorName.indexOf('right') >= 0) {\r\n            var offset = t.point({\r\n                x: this.padding() * 2,\r\n                y: 0,\r\n            });\r\n            this._movingAnchorName = this._movingAnchorName.replace('right', 'left');\r\n            this._anchorDragOffset.x -= offset.x;\r\n            this._anchorDragOffset.y -= offset.y;\r\n            newAttrs.width += this.padding() * 2;\r\n            if (!allowNegativeScale) {\r\n                this.update();\r\n                return;\r\n            }\r\n        }\r\n        if (this._movingAnchorName &&\r\n            newAttrs.height < 0 &&\r\n            this._movingAnchorName.indexOf('top') >= 0) {\r\n            var offset = t.point({\r\n                x: 0,\r\n                y: -this.padding() * 2,\r\n            });\r\n            newAttrs.x += offset.x;\r\n            newAttrs.y += offset.y;\r\n            this._movingAnchorName = this._movingAnchorName.replace('top', 'bottom');\r\n            this._anchorDragOffset.x -= offset.x;\r\n            this._anchorDragOffset.y -= offset.y;\r\n            newAttrs.height += this.padding() * 2;\r\n            if (!allowNegativeScale) {\r\n                this.update();\r\n                return;\r\n            }\r\n        }\r\n        else if (this._movingAnchorName &&\r\n            newAttrs.height < 0 &&\r\n            this._movingAnchorName.indexOf('bottom') >= 0) {\r\n            var offset = t.point({\r\n                x: 0,\r\n                y: this.padding() * 2,\r\n            });\r\n            this._movingAnchorName = this._movingAnchorName.replace('bottom', 'top');\r\n            this._anchorDragOffset.x -= offset.x;\r\n            this._anchorDragOffset.y -= offset.y;\r\n            newAttrs.height += this.padding() * 2;\r\n            if (!allowNegativeScale) {\r\n                this.update();\r\n                return;\r\n            }\r\n        }\r\n        if (this.boundBoxFunc()) {\r\n            var bounded = this.boundBoxFunc()(oldAttrs, newAttrs);\r\n            if (bounded) {\r\n                newAttrs = bounded;\r\n            }\r\n            else {\r\n                Util_1.Util.warn('boundBoxFunc returned falsy. You should return new bound rect from it!');\r\n            }\r\n        }\r\n        var baseSize = 10000000;\r\n        var oldTr = new Util_1.Transform();\r\n        oldTr.translate(oldAttrs.x, oldAttrs.y);\r\n        oldTr.rotate(oldAttrs.rotation);\r\n        oldTr.scale(oldAttrs.width / baseSize, oldAttrs.height / baseSize);\r\n        var newTr = new Util_1.Transform();\r\n        newTr.translate(newAttrs.x, newAttrs.y);\r\n        newTr.rotate(newAttrs.rotation);\r\n        newTr.scale(newAttrs.width / baseSize, newAttrs.height / baseSize);\r\n        var delta = newTr.multiply(oldTr.invert());\r\n        this._nodes.forEach(function (node) {\r\n            var _a;\r\n            var parentTransform = node.getParent().getAbsoluteTransform();\r\n            var localTransform = node.getTransform().copy();\r\n            localTransform.translate(node.offsetX(), node.offsetY());\r\n            var newLocalTransform = new Util_1.Transform();\r\n            newLocalTransform\r\n                .multiply(parentTransform.copy().invert())\r\n                .multiply(delta)\r\n                .multiply(parentTransform)\r\n                .multiply(localTransform);\r\n            var attrs = newLocalTransform.decompose();\r\n            node.setAttrs(attrs);\r\n            _this._fire('transform', { evt: evt, target: node });\r\n            node._fire('transform', { evt: evt, target: node });\r\n            (_a = node.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\r\n        });\r\n        this.rotation(Util_1.Util._getRotation(newAttrs.rotation));\r\n        this._resetTransformCache();\r\n        this.update();\r\n        this.getLayer().batchDraw();\r\n    };\r\n    Transformer.prototype.forceUpdate = function () {\r\n        this._resetTransformCache();\r\n        this.update();\r\n    };\r\n    Transformer.prototype._batchChangeChild = function (selector, attrs) {\r\n        var anchor = this.findOne(selector);\r\n        anchor.setAttrs(attrs);\r\n    };\r\n    Transformer.prototype.update = function () {\r\n        var _this = this;\r\n        var _a;\r\n        var attrs = this._getNodeRect();\r\n        this.rotation(Util_1.Util._getRotation(attrs.rotation));\r\n        var width = attrs.width;\r\n        var height = attrs.height;\r\n        var enabledAnchors = this.enabledAnchors();\r\n        var resizeEnabled = this.resizeEnabled();\r\n        var padding = this.padding();\r\n        var anchorSize = this.anchorSize();\r\n        this.find('._anchor').each(function (node) {\r\n            node.setAttrs({\r\n                width: anchorSize,\r\n                height: anchorSize,\r\n                offsetX: anchorSize / 2,\r\n                offsetY: anchorSize / 2,\r\n                stroke: _this.anchorStroke(),\r\n                strokeWidth: _this.anchorStrokeWidth(),\r\n                fill: _this.anchorFill(),\r\n                cornerRadius: _this.anchorCornerRadius(),\r\n            });\r\n        });\r\n        this._batchChangeChild('.top-left', {\r\n            x: 0,\r\n            y: 0,\r\n            offsetX: anchorSize / 2 + padding,\r\n            offsetY: anchorSize / 2 + padding,\r\n            visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0,\r\n        });\r\n        this._batchChangeChild('.top-center', {\r\n            x: width / 2,\r\n            y: 0,\r\n            offsetY: anchorSize / 2 + padding,\r\n            visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0,\r\n        });\r\n        this._batchChangeChild('.top-right', {\r\n            x: width,\r\n            y: 0,\r\n            offsetX: anchorSize / 2 - padding,\r\n            offsetY: anchorSize / 2 + padding,\r\n            visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0,\r\n        });\r\n        this._batchChangeChild('.middle-left', {\r\n            x: 0,\r\n            y: height / 2,\r\n            offsetX: anchorSize / 2 + padding,\r\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0,\r\n        });\r\n        this._batchChangeChild('.middle-right', {\r\n            x: width,\r\n            y: height / 2,\r\n            offsetX: anchorSize / 2 - padding,\r\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0,\r\n        });\r\n        this._batchChangeChild('.bottom-left', {\r\n            x: 0,\r\n            y: height,\r\n            offsetX: anchorSize / 2 + padding,\r\n            offsetY: anchorSize / 2 - padding,\r\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0,\r\n        });\r\n        this._batchChangeChild('.bottom-center', {\r\n            x: width / 2,\r\n            y: height,\r\n            offsetY: anchorSize / 2 - padding,\r\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0,\r\n        });\r\n        this._batchChangeChild('.bottom-right', {\r\n            x: width,\r\n            y: height,\r\n            offsetX: anchorSize / 2 - padding,\r\n            offsetY: anchorSize / 2 - padding,\r\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0,\r\n        });\r\n        this._batchChangeChild('.rotater', {\r\n            x: width / 2,\r\n            y: -this.rotateAnchorOffset() * Util_1.Util._sign(height) - padding,\r\n            visible: this.rotateEnabled(),\r\n        });\r\n        this._batchChangeChild('.back', {\r\n            width: width,\r\n            height: height,\r\n            visible: this.borderEnabled(),\r\n            stroke: this.borderStroke(),\r\n            strokeWidth: this.borderStrokeWidth(),\r\n            dash: this.borderDash(),\r\n            x: 0,\r\n            y: 0,\r\n        });\r\n        (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\r\n    };\r\n    Transformer.prototype.isTransforming = function () {\r\n        return this._transforming;\r\n    };\r\n    Transformer.prototype.stopTransform = function () {\r\n        if (this._transforming) {\r\n            this._removeEvents();\r\n            var anchorNode = this.findOne('.' + this._movingAnchorName);\r\n            if (anchorNode) {\r\n                anchorNode.stopDrag();\r\n            }\r\n        }\r\n    };\r\n    Transformer.prototype.destroy = function () {\r\n        if (this.getStage() && this._cursorChange) {\r\n            this.getStage().content.style.cursor = '';\r\n        }\r\n        Group_1.Group.prototype.destroy.call(this);\r\n        this.detach();\r\n        this._removeEvents();\r\n        return this;\r\n    };\r\n    Transformer.prototype.toObject = function () {\r\n        return Node_1.Node.prototype.toObject.call(this);\r\n    };\r\n    return Transformer;\r\n}(Group_1.Group));\r\nexports.Transformer = Transformer;\r\nfunction validateAnchors(val) {\r\n    if (!(val instanceof Array)) {\r\n        Util_1.Util.warn('enabledAnchors value should be an array');\r\n    }\r\n    if (val instanceof Array) {\r\n        val.forEach(function (name) {\r\n            if (ANCHORS_NAMES.indexOf(name) === -1) {\r\n                Util_1.Util.warn('Unknown anchor name: ' +\r\n                    name +\r\n                    '. Available names are: ' +\r\n                    ANCHORS_NAMES.join(', '));\r\n            }\r\n        });\r\n    }\r\n    return val || [];\r\n}\r\nTransformer.prototype.className = 'Transformer';\r\nGlobal_2._registerNode(Transformer);\r\nFactory_1.Factory.addGetterSetter(Transformer, 'enabledAnchors', ANCHORS_NAMES, validateAnchors);\r\nFactory_1.Factory.addGetterSetter(Transformer, 'resizeEnabled', true);\r\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorSize', 10, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateEnabled', true);\r\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnaps', []);\r\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorOffset', 50, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnapTolerance', 5, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Transformer, 'borderEnabled', true);\r\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStroke', 'rgb(0, 161, 255)');\r\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStrokeWidth', 1, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorFill', 'white');\r\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorCornerRadius', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStroke', 'rgb(0, 161, 255)');\r\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStrokeWidth', 1, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Transformer, 'borderDash');\r\nFactory_1.Factory.addGetterSetter(Transformer, 'keepRatio', true);\r\nFactory_1.Factory.addGetterSetter(Transformer, 'centeredScaling', false);\r\nFactory_1.Factory.addGetterSetter(Transformer, 'ignoreStroke', false);\r\nFactory_1.Factory.addGetterSetter(Transformer, 'padding', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Transformer, 'node');\r\nFactory_1.Factory.addGetterSetter(Transformer, 'nodes');\r\nFactory_1.Factory.addGetterSetter(Transformer, 'boundBoxFunc');\r\nFactory_1.Factory.addGetterSetter(Transformer, 'shouldOverdrawWholeArea', false);\r\nFactory_1.Factory.backCompat(Transformer, {\r\n    lineEnabled: 'borderEnabled',\r\n    rotateHandlerOffset: 'rotateAnchorOffset',\r\n    enabledHandlers: 'enabledAnchors',\r\n});\r\nUtil_1.Collection.mapMethods(Transformer);\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Wedge = void 0;\r\nvar Util_1 = require(\"../Util\");\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Shape_1 = require(\"../Shape\");\r\nvar Global_1 = require(\"../Global\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Global_2 = require(\"../Global\");\r\nvar Wedge = (function (_super) {\r\n    __extends(Wedge, _super);\r\n    function Wedge() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Wedge.prototype._sceneFunc = function (context) {\r\n        context.beginPath();\r\n        context.arc(0, 0, this.radius(), 0, Global_1.Konva.getAngle(this.angle()), this.clockwise());\r\n        context.lineTo(0, 0);\r\n        context.closePath();\r\n        context.fillStrokeShape(this);\r\n    };\r\n    Wedge.prototype.getWidth = function () {\r\n        return this.radius() * 2;\r\n    };\r\n    Wedge.prototype.getHeight = function () {\r\n        return this.radius() * 2;\r\n    };\r\n    Wedge.prototype.setWidth = function (width) {\r\n        this.radius(width / 2);\r\n    };\r\n    Wedge.prototype.setHeight = function (height) {\r\n        this.radius(height / 2);\r\n    };\r\n    return Wedge;\r\n}(Shape_1.Shape));\r\nexports.Wedge = Wedge;\r\nWedge.prototype.className = 'Wedge';\r\nWedge.prototype._centroid = true;\r\nWedge.prototype._attrsAffectingSize = ['radius'];\r\nGlobal_2._registerNode(Wedge);\r\nFactory_1.Factory.addGetterSetter(Wedge, 'radius', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Wedge, 'angle', 0, Validators_1.getNumberValidator());\r\nFactory_1.Factory.addGetterSetter(Wedge, 'clockwise', false);\r\nFactory_1.Factory.backCompat(Wedge, {\r\n    angleDeg: 'angle',\r\n    getAngleDeg: 'getAngle',\r\n    setAngleDeg: 'setAngle'\r\n});\r\nUtil_1.Collection.mapMethods(Wedge);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Blur = void 0;\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Node_1 = require(\"../Node\");\r\nvar Validators_1 = require(\"../Validators\");\r\nfunction BlurStack() {\r\n    this.r = 0;\r\n    this.g = 0;\r\n    this.b = 0;\r\n    this.a = 0;\r\n    this.next = null;\r\n}\r\nvar mul_table = [\r\n    512,\r\n    512,\r\n    456,\r\n    512,\r\n    328,\r\n    456,\r\n    335,\r\n    512,\r\n    405,\r\n    328,\r\n    271,\r\n    456,\r\n    388,\r\n    335,\r\n    292,\r\n    512,\r\n    454,\r\n    405,\r\n    364,\r\n    328,\r\n    298,\r\n    271,\r\n    496,\r\n    456,\r\n    420,\r\n    388,\r\n    360,\r\n    335,\r\n    312,\r\n    292,\r\n    273,\r\n    512,\r\n    482,\r\n    454,\r\n    428,\r\n    405,\r\n    383,\r\n    364,\r\n    345,\r\n    328,\r\n    312,\r\n    298,\r\n    284,\r\n    271,\r\n    259,\r\n    496,\r\n    475,\r\n    456,\r\n    437,\r\n    420,\r\n    404,\r\n    388,\r\n    374,\r\n    360,\r\n    347,\r\n    335,\r\n    323,\r\n    312,\r\n    302,\r\n    292,\r\n    282,\r\n    273,\r\n    265,\r\n    512,\r\n    497,\r\n    482,\r\n    468,\r\n    454,\r\n    441,\r\n    428,\r\n    417,\r\n    405,\r\n    394,\r\n    383,\r\n    373,\r\n    364,\r\n    354,\r\n    345,\r\n    337,\r\n    328,\r\n    320,\r\n    312,\r\n    305,\r\n    298,\r\n    291,\r\n    284,\r\n    278,\r\n    271,\r\n    265,\r\n    259,\r\n    507,\r\n    496,\r\n    485,\r\n    475,\r\n    465,\r\n    456,\r\n    446,\r\n    437,\r\n    428,\r\n    420,\r\n    412,\r\n    404,\r\n    396,\r\n    388,\r\n    381,\r\n    374,\r\n    367,\r\n    360,\r\n    354,\r\n    347,\r\n    341,\r\n    335,\r\n    329,\r\n    323,\r\n    318,\r\n    312,\r\n    307,\r\n    302,\r\n    297,\r\n    292,\r\n    287,\r\n    282,\r\n    278,\r\n    273,\r\n    269,\r\n    265,\r\n    261,\r\n    512,\r\n    505,\r\n    497,\r\n    489,\r\n    482,\r\n    475,\r\n    468,\r\n    461,\r\n    454,\r\n    447,\r\n    441,\r\n    435,\r\n    428,\r\n    422,\r\n    417,\r\n    411,\r\n    405,\r\n    399,\r\n    394,\r\n    389,\r\n    383,\r\n    378,\r\n    373,\r\n    368,\r\n    364,\r\n    359,\r\n    354,\r\n    350,\r\n    345,\r\n    341,\r\n    337,\r\n    332,\r\n    328,\r\n    324,\r\n    320,\r\n    316,\r\n    312,\r\n    309,\r\n    305,\r\n    301,\r\n    298,\r\n    294,\r\n    291,\r\n    287,\r\n    284,\r\n    281,\r\n    278,\r\n    274,\r\n    271,\r\n    268,\r\n    265,\r\n    262,\r\n    259,\r\n    257,\r\n    507,\r\n    501,\r\n    496,\r\n    491,\r\n    485,\r\n    480,\r\n    475,\r\n    470,\r\n    465,\r\n    460,\r\n    456,\r\n    451,\r\n    446,\r\n    442,\r\n    437,\r\n    433,\r\n    428,\r\n    424,\r\n    420,\r\n    416,\r\n    412,\r\n    408,\r\n    404,\r\n    400,\r\n    396,\r\n    392,\r\n    388,\r\n    385,\r\n    381,\r\n    377,\r\n    374,\r\n    370,\r\n    367,\r\n    363,\r\n    360,\r\n    357,\r\n    354,\r\n    350,\r\n    347,\r\n    344,\r\n    341,\r\n    338,\r\n    335,\r\n    332,\r\n    329,\r\n    326,\r\n    323,\r\n    320,\r\n    318,\r\n    315,\r\n    312,\r\n    310,\r\n    307,\r\n    304,\r\n    302,\r\n    299,\r\n    297,\r\n    294,\r\n    292,\r\n    289,\r\n    287,\r\n    285,\r\n    282,\r\n    280,\r\n    278,\r\n    275,\r\n    273,\r\n    271,\r\n    269,\r\n    267,\r\n    265,\r\n    263,\r\n    261,\r\n    259\r\n];\r\nvar shg_table = [\r\n    9,\r\n    11,\r\n    12,\r\n    13,\r\n    13,\r\n    14,\r\n    14,\r\n    15,\r\n    15,\r\n    15,\r\n    15,\r\n    16,\r\n    16,\r\n    16,\r\n    16,\r\n    17,\r\n    17,\r\n    17,\r\n    17,\r\n    17,\r\n    17,\r\n    17,\r\n    18,\r\n    18,\r\n    18,\r\n    18,\r\n    18,\r\n    18,\r\n    18,\r\n    18,\r\n    18,\r\n    19,\r\n    19,\r\n    19,\r\n    19,\r\n    19,\r\n    19,\r\n    19,\r\n    19,\r\n    19,\r\n    19,\r\n    19,\r\n    19,\r\n    19,\r\n    19,\r\n    20,\r\n    20,\r\n    20,\r\n    20,\r\n    20,\r\n    20,\r\n    20,\r\n    20,\r\n    20,\r\n    20,\r\n    20,\r\n    20,\r\n    20,\r\n    20,\r\n    20,\r\n    20,\r\n    20,\r\n    20,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    21,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    22,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    23,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24,\r\n    24\r\n];\r\nfunction filterGaussBlurRGBA(imageData, radius) {\r\n    var pixels = imageData.data, width = imageData.width, height = imageData.height;\r\n    var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum, r_out_sum, g_out_sum, b_out_sum, a_out_sum, r_in_sum, g_in_sum, b_in_sum, a_in_sum, pr, pg, pb, pa, rbs;\r\n    var div = radius + radius + 1, widthMinus1 = width - 1, heightMinus1 = height - 1, radiusPlus1 = radius + 1, sumFactor = (radiusPlus1 * (radiusPlus1 + 1)) / 2, stackStart = new BlurStack(), stackEnd = null, stack = stackStart, stackIn = null, stackOut = null, mul_sum = mul_table[radius], shg_sum = shg_table[radius];\r\n    for (i = 1; i < div; i++) {\r\n        stack = stack.next = new BlurStack();\r\n        if (i === radiusPlus1) {\r\n            stackEnd = stack;\r\n        }\r\n    }\r\n    stack.next = stackStart;\r\n    yw = yi = 0;\r\n    for (y = 0; y < height; y++) {\r\n        r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\r\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\r\n        g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\r\n        b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\r\n        a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\r\n        r_sum += sumFactor * pr;\r\n        g_sum += sumFactor * pg;\r\n        b_sum += sumFactor * pb;\r\n        a_sum += sumFactor * pa;\r\n        stack = stackStart;\r\n        for (i = 0; i < radiusPlus1; i++) {\r\n            stack.r = pr;\r\n            stack.g = pg;\r\n            stack.b = pb;\r\n            stack.a = pa;\r\n            stack = stack.next;\r\n        }\r\n        for (i = 1; i < radiusPlus1; i++) {\r\n            p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\r\n            r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\r\n            g_sum += (stack.g = pg = pixels[p + 1]) * rbs;\r\n            b_sum += (stack.b = pb = pixels[p + 2]) * rbs;\r\n            a_sum += (stack.a = pa = pixels[p + 3]) * rbs;\r\n            r_in_sum += pr;\r\n            g_in_sum += pg;\r\n            b_in_sum += pb;\r\n            a_in_sum += pa;\r\n            stack = stack.next;\r\n        }\r\n        stackIn = stackStart;\r\n        stackOut = stackEnd;\r\n        for (x = 0; x < width; x++) {\r\n            pixels[yi + 3] = pa = (a_sum * mul_sum) >> shg_sum;\r\n            if (pa !== 0) {\r\n                pa = 255 / pa;\r\n                pixels[yi] = ((r_sum * mul_sum) >> shg_sum) * pa;\r\n                pixels[yi + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\r\n                pixels[yi + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\r\n            }\r\n            else {\r\n                pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\r\n            }\r\n            r_sum -= r_out_sum;\r\n            g_sum -= g_out_sum;\r\n            b_sum -= b_out_sum;\r\n            a_sum -= a_out_sum;\r\n            r_out_sum -= stackIn.r;\r\n            g_out_sum -= stackIn.g;\r\n            b_out_sum -= stackIn.b;\r\n            a_out_sum -= stackIn.a;\r\n            p = (yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1)) << 2;\r\n            r_in_sum += stackIn.r = pixels[p];\r\n            g_in_sum += stackIn.g = pixels[p + 1];\r\n            b_in_sum += stackIn.b = pixels[p + 2];\r\n            a_in_sum += stackIn.a = pixels[p + 3];\r\n            r_sum += r_in_sum;\r\n            g_sum += g_in_sum;\r\n            b_sum += b_in_sum;\r\n            a_sum += a_in_sum;\r\n            stackIn = stackIn.next;\r\n            r_out_sum += pr = stackOut.r;\r\n            g_out_sum += pg = stackOut.g;\r\n            b_out_sum += pb = stackOut.b;\r\n            a_out_sum += pa = stackOut.a;\r\n            r_in_sum -= pr;\r\n            g_in_sum -= pg;\r\n            b_in_sum -= pb;\r\n            a_in_sum -= pa;\r\n            stackOut = stackOut.next;\r\n            yi += 4;\r\n        }\r\n        yw += width;\r\n    }\r\n    for (x = 0; x < width; x++) {\r\n        g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\r\n        yi = x << 2;\r\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\r\n        g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\r\n        b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\r\n        a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\r\n        r_sum += sumFactor * pr;\r\n        g_sum += sumFactor * pg;\r\n        b_sum += sumFactor * pb;\r\n        a_sum += sumFactor * pa;\r\n        stack = stackStart;\r\n        for (i = 0; i < radiusPlus1; i++) {\r\n            stack.r = pr;\r\n            stack.g = pg;\r\n            stack.b = pb;\r\n            stack.a = pa;\r\n            stack = stack.next;\r\n        }\r\n        yp = width;\r\n        for (i = 1; i <= radius; i++) {\r\n            yi = (yp + x) << 2;\r\n            r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\r\n            g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\r\n            b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\r\n            a_sum += (stack.a = pa = pixels[yi + 3]) * rbs;\r\n            r_in_sum += pr;\r\n            g_in_sum += pg;\r\n            b_in_sum += pb;\r\n            a_in_sum += pa;\r\n            stack = stack.next;\r\n            if (i < heightMinus1) {\r\n                yp += width;\r\n            }\r\n        }\r\n        yi = x;\r\n        stackIn = stackStart;\r\n        stackOut = stackEnd;\r\n        for (y = 0; y < height; y++) {\r\n            p = yi << 2;\r\n            pixels[p + 3] = pa = (a_sum * mul_sum) >> shg_sum;\r\n            if (pa > 0) {\r\n                pa = 255 / pa;\r\n                pixels[p] = ((r_sum * mul_sum) >> shg_sum) * pa;\r\n                pixels[p + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\r\n                pixels[p + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\r\n            }\r\n            else {\r\n                pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\r\n            }\r\n            r_sum -= r_out_sum;\r\n            g_sum -= g_out_sum;\r\n            b_sum -= b_out_sum;\r\n            a_sum -= a_out_sum;\r\n            r_out_sum -= stackIn.r;\r\n            g_out_sum -= stackIn.g;\r\n            b_out_sum -= stackIn.b;\r\n            a_out_sum -= stackIn.a;\r\n            p =\r\n                (x +\r\n                    ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width) <<\r\n                    2;\r\n            r_sum += r_in_sum += stackIn.r = pixels[p];\r\n            g_sum += g_in_sum += stackIn.g = pixels[p + 1];\r\n            b_sum += b_in_sum += stackIn.b = pixels[p + 2];\r\n            a_sum += a_in_sum += stackIn.a = pixels[p + 3];\r\n            stackIn = stackIn.next;\r\n            r_out_sum += pr = stackOut.r;\r\n            g_out_sum += pg = stackOut.g;\r\n            b_out_sum += pb = stackOut.b;\r\n            a_out_sum += pa = stackOut.a;\r\n            r_in_sum -= pr;\r\n            g_in_sum -= pg;\r\n            b_in_sum -= pb;\r\n            a_in_sum -= pa;\r\n            stackOut = stackOut.next;\r\n            yi += width;\r\n        }\r\n    }\r\n}\r\nvar Blur = function Blur(imageData) {\r\n    var radius = Math.round(this.blurRadius());\r\n    if (radius > 0) {\r\n        filterGaussBlurRGBA(imageData, radius);\r\n    }\r\n};\r\nexports.Blur = Blur;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blurRadius', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Brighten = void 0;\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Node_1 = require(\"../Node\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Brighten = function (imageData) {\r\n    var brightness = this.brightness() * 255, data = imageData.data, len = data.length, i;\r\n    for (i = 0; i < len; i += 4) {\r\n        data[i] += brightness;\r\n        data[i + 1] += brightness;\r\n        data[i + 2] += brightness;\r\n    }\r\n};\r\nexports.Brighten = Brighten;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'brightness', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Contrast = void 0;\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Node_1 = require(\"../Node\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Contrast = function (imageData) {\r\n    var adjust = Math.pow((this.contrast() + 100) / 100, 2);\r\n    var data = imageData.data, nPixels = data.length, red = 150, green = 150, blue = 150, i;\r\n    for (i = 0; i < nPixels; i += 4) {\r\n        red = data[i];\r\n        green = data[i + 1];\r\n        blue = data[i + 2];\r\n        red /= 255;\r\n        red -= 0.5;\r\n        red *= adjust;\r\n        red += 0.5;\r\n        red *= 255;\r\n        green /= 255;\r\n        green -= 0.5;\r\n        green *= adjust;\r\n        green += 0.5;\r\n        green *= 255;\r\n        blue /= 255;\r\n        blue -= 0.5;\r\n        blue *= adjust;\r\n        blue += 0.5;\r\n        blue *= 255;\r\n        red = red < 0 ? 0 : red > 255 ? 255 : red;\r\n        green = green < 0 ? 0 : green > 255 ? 255 : green;\r\n        blue = blue < 0 ? 0 : blue > 255 ? 255 : blue;\r\n        data[i] = red;\r\n        data[i + 1] = green;\r\n        data[i + 2] = blue;\r\n    }\r\n};\r\nexports.Contrast = Contrast;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'contrast', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Emboss = void 0;\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Node_1 = require(\"../Node\");\r\nvar Util_1 = require(\"../Util\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Emboss = function (imageData) {\r\n    var strength = this.embossStrength() * 10, greyLevel = this.embossWhiteLevel() * 255, direction = this.embossDirection(), blend = this.embossBlend(), dirY = 0, dirX = 0, data = imageData.data, w = imageData.width, h = imageData.height, w4 = w * 4, y = h;\r\n    switch (direction) {\r\n        case 'top-left':\r\n            dirY = -1;\r\n            dirX = -1;\r\n            break;\r\n        case 'top':\r\n            dirY = -1;\r\n            dirX = 0;\r\n            break;\r\n        case 'top-right':\r\n            dirY = -1;\r\n            dirX = 1;\r\n            break;\r\n        case 'right':\r\n            dirY = 0;\r\n            dirX = 1;\r\n            break;\r\n        case 'bottom-right':\r\n            dirY = 1;\r\n            dirX = 1;\r\n            break;\r\n        case 'bottom':\r\n            dirY = 1;\r\n            dirX = 0;\r\n            break;\r\n        case 'bottom-left':\r\n            dirY = 1;\r\n            dirX = -1;\r\n            break;\r\n        case 'left':\r\n            dirY = 0;\r\n            dirX = -1;\r\n            break;\r\n        default:\r\n            Util_1.Util.error('Unknown emboss direction: ' + direction);\r\n    }\r\n    do {\r\n        var offsetY = (y - 1) * w4;\r\n        var otherY = dirY;\r\n        if (y + otherY < 1) {\r\n            otherY = 0;\r\n        }\r\n        if (y + otherY > h) {\r\n            otherY = 0;\r\n        }\r\n        var offsetYOther = (y - 1 + otherY) * w * 4;\r\n        var x = w;\r\n        do {\r\n            var offset = offsetY + (x - 1) * 4;\r\n            var otherX = dirX;\r\n            if (x + otherX < 1) {\r\n                otherX = 0;\r\n            }\r\n            if (x + otherX > w) {\r\n                otherX = 0;\r\n            }\r\n            var offsetOther = offsetYOther + (x - 1 + otherX) * 4;\r\n            var dR = data[offset] - data[offsetOther];\r\n            var dG = data[offset + 1] - data[offsetOther + 1];\r\n            var dB = data[offset + 2] - data[offsetOther + 2];\r\n            var dif = dR;\r\n            var absDif = dif > 0 ? dif : -dif;\r\n            var absG = dG > 0 ? dG : -dG;\r\n            var absB = dB > 0 ? dB : -dB;\r\n            if (absG > absDif) {\r\n                dif = dG;\r\n            }\r\n            if (absB > absDif) {\r\n                dif = dB;\r\n            }\r\n            dif *= strength;\r\n            if (blend) {\r\n                var r = data[offset] + dif;\r\n                var g = data[offset + 1] + dif;\r\n                var b = data[offset + 2] + dif;\r\n                data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\r\n                data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\r\n                data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\r\n            }\r\n            else {\r\n                var grey = greyLevel - dif;\r\n                if (grey < 0) {\r\n                    grey = 0;\r\n                }\r\n                else if (grey > 255) {\r\n                    grey = 255;\r\n                }\r\n                data[offset] = data[offset + 1] = data[offset + 2] = grey;\r\n            }\r\n        } while (--x);\r\n    } while (--y);\r\n};\r\nexports.Emboss = Emboss;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossStrength', 0.5, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossWhiteLevel', 0.5, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossDirection', 'top-left', null, Factory_1.Factory.afterSetFilter);\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossBlend', false, null, Factory_1.Factory.afterSetFilter);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Enhance = void 0;\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Node_1 = require(\"../Node\");\r\nvar Validators_1 = require(\"../Validators\");\r\nfunction remap(fromValue, fromMin, fromMax, toMin, toMax) {\r\n    var fromRange = fromMax - fromMin, toRange = toMax - toMin, toValue;\r\n    if (fromRange === 0) {\r\n        return toMin + toRange / 2;\r\n    }\r\n    if (toRange === 0) {\r\n        return toMin;\r\n    }\r\n    toValue = (fromValue - fromMin) / fromRange;\r\n    toValue = toRange * toValue + toMin;\r\n    return toValue;\r\n}\r\nvar Enhance = function (imageData) {\r\n    var data = imageData.data, nSubPixels = data.length, rMin = data[0], rMax = rMin, r, gMin = data[1], gMax = gMin, g, bMin = data[2], bMax = bMin, b, i;\r\n    var enhanceAmount = this.enhance();\r\n    if (enhanceAmount === 0) {\r\n        return;\r\n    }\r\n    for (i = 0; i < nSubPixels; i += 4) {\r\n        r = data[i + 0];\r\n        if (r < rMin) {\r\n            rMin = r;\r\n        }\r\n        else if (r > rMax) {\r\n            rMax = r;\r\n        }\r\n        g = data[i + 1];\r\n        if (g < gMin) {\r\n            gMin = g;\r\n        }\r\n        else if (g > gMax) {\r\n            gMax = g;\r\n        }\r\n        b = data[i + 2];\r\n        if (b < bMin) {\r\n            bMin = b;\r\n        }\r\n        else if (b > bMax) {\r\n            bMax = b;\r\n        }\r\n    }\r\n    if (rMax === rMin) {\r\n        rMax = 255;\r\n        rMin = 0;\r\n    }\r\n    if (gMax === gMin) {\r\n        gMax = 255;\r\n        gMin = 0;\r\n    }\r\n    if (bMax === bMin) {\r\n        bMax = 255;\r\n        bMin = 0;\r\n    }\r\n    var rMid, rGoalMax, rGoalMin, gMid, gGoalMax, gGoalMin, bMid, bGoalMax, bGoalMin;\r\n    if (enhanceAmount > 0) {\r\n        rGoalMax = rMax + enhanceAmount * (255 - rMax);\r\n        rGoalMin = rMin - enhanceAmount * (rMin - 0);\r\n        gGoalMax = gMax + enhanceAmount * (255 - gMax);\r\n        gGoalMin = gMin - enhanceAmount * (gMin - 0);\r\n        bGoalMax = bMax + enhanceAmount * (255 - bMax);\r\n        bGoalMin = bMin - enhanceAmount * (bMin - 0);\r\n    }\r\n    else {\r\n        rMid = (rMax + rMin) * 0.5;\r\n        rGoalMax = rMax + enhanceAmount * (rMax - rMid);\r\n        rGoalMin = rMin + enhanceAmount * (rMin - rMid);\r\n        gMid = (gMax + gMin) * 0.5;\r\n        gGoalMax = gMax + enhanceAmount * (gMax - gMid);\r\n        gGoalMin = gMin + enhanceAmount * (gMin - gMid);\r\n        bMid = (bMax + bMin) * 0.5;\r\n        bGoalMax = bMax + enhanceAmount * (bMax - bMid);\r\n        bGoalMin = bMin + enhanceAmount * (bMin - bMid);\r\n    }\r\n    for (i = 0; i < nSubPixels; i += 4) {\r\n        data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\r\n        data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\r\n        data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\r\n    }\r\n};\r\nexports.Enhance = Enhance;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'enhance', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Grayscale = void 0;\r\nvar Grayscale = function (imageData) {\r\n    var data = imageData.data, len = data.length, i, brightness;\r\n    for (i = 0; i < len; i += 4) {\r\n        brightness = 0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2];\r\n        data[i] = brightness;\r\n        data[i + 1] = brightness;\r\n        data[i + 2] = brightness;\r\n    }\r\n};\r\nexports.Grayscale = Grayscale;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HSL = void 0;\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Node_1 = require(\"../Node\");\r\nvar Validators_1 = require(\"../Validators\");\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'hue', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'saturation', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'luminance', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\nvar HSL = function (imageData) {\r\n    var data = imageData.data, nPixels = data.length, v = 1, s = Math.pow(2, this.saturation()), h = Math.abs(this.hue() + 360) % 360, l = this.luminance() * 127, i;\r\n    var vsu = v * s * Math.cos((h * Math.PI) / 180), vsw = v * s * Math.sin((h * Math.PI) / 180);\r\n    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw, rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw, rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\r\n    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw, gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw, gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\r\n    var br = 0.299 * v - 0.3 * vsu + 1.25 * vsw, bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw, bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\r\n    var r, g, b, a;\r\n    for (i = 0; i < nPixels; i += 4) {\r\n        r = data[i + 0];\r\n        g = data[i + 1];\r\n        b = data[i + 2];\r\n        a = data[i + 3];\r\n        data[i + 0] = rr * r + rg * g + rb * b + l;\r\n        data[i + 1] = gr * r + gg * g + gb * b + l;\r\n        data[i + 2] = br * r + bg * g + bb * b + l;\r\n        data[i + 3] = a;\r\n    }\r\n};\r\nexports.HSL = HSL;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HSV = void 0;\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Node_1 = require(\"../Node\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar HSV = function (imageData) {\r\n    var data = imageData.data, nPixels = data.length, v = Math.pow(2, this.value()), s = Math.pow(2, this.saturation()), h = Math.abs(this.hue() + 360) % 360, i;\r\n    var vsu = v * s * Math.cos((h * Math.PI) / 180), vsw = v * s * Math.sin((h * Math.PI) / 180);\r\n    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw, rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw, rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\r\n    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw, gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw, gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\r\n    var br = 0.299 * v - 0.3 * vsu + 1.25 * vsw, bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw, bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\r\n    var r, g, b, a;\r\n    for (i = 0; i < nPixels; i += 4) {\r\n        r = data[i + 0];\r\n        g = data[i + 1];\r\n        b = data[i + 2];\r\n        a = data[i + 3];\r\n        data[i + 0] = rr * r + rg * g + rb * b;\r\n        data[i + 1] = gr * r + gg * g + gb * b;\r\n        data[i + 2] = br * r + bg * g + bb * b;\r\n        data[i + 3] = a;\r\n    }\r\n};\r\nexports.HSV = HSV;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'hue', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'saturation', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'value', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Invert = void 0;\r\nvar Invert = function (imageData) {\r\n    var data = imageData.data, len = data.length, i;\r\n    for (i = 0; i < len; i += 4) {\r\n        data[i] = 255 - data[i];\r\n        data[i + 1] = 255 - data[i + 1];\r\n        data[i + 2] = 255 - data[i + 2];\r\n    }\r\n};\r\nexports.Invert = Invert;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Kaleidoscope = void 0;\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Node_1 = require(\"../Node\");\r\nvar Util_1 = require(\"../Util\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar ToPolar = function (src, dst, opt) {\r\n    var srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2, i, x, y, r = 0, g = 0, b = 0, a = 0;\r\n    var rad, rMax = Math.sqrt(xMid * xMid + yMid * yMid);\r\n    x = xSize - xMid;\r\n    y = ySize - yMid;\r\n    rad = Math.sqrt(x * x + y * y);\r\n    rMax = rad > rMax ? rad : rMax;\r\n    var rSize = ySize, tSize = xSize, radius, theta;\r\n    var conversion = ((360 / tSize) * Math.PI) / 180, sin, cos;\r\n    for (theta = 0; theta < tSize; theta += 1) {\r\n        sin = Math.sin(theta * conversion);\r\n        cos = Math.cos(theta * conversion);\r\n        for (radius = 0; radius < rSize; radius += 1) {\r\n            x = Math.floor(xMid + ((rMax * radius) / rSize) * cos);\r\n            y = Math.floor(yMid + ((rMax * radius) / rSize) * sin);\r\n            i = (y * xSize + x) * 4;\r\n            r = srcPixels[i + 0];\r\n            g = srcPixels[i + 1];\r\n            b = srcPixels[i + 2];\r\n            a = srcPixels[i + 3];\r\n            i = (theta + radius * xSize) * 4;\r\n            dstPixels[i + 0] = r;\r\n            dstPixels[i + 1] = g;\r\n            dstPixels[i + 2] = b;\r\n            dstPixels[i + 3] = a;\r\n        }\r\n    }\r\n};\r\nvar FromPolar = function (src, dst, opt) {\r\n    var srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2, i, x, y, dx, dy, r = 0, g = 0, b = 0, a = 0;\r\n    var rad, rMax = Math.sqrt(xMid * xMid + yMid * yMid);\r\n    x = xSize - xMid;\r\n    y = ySize - yMid;\r\n    rad = Math.sqrt(x * x + y * y);\r\n    rMax = rad > rMax ? rad : rMax;\r\n    var rSize = ySize, tSize = xSize, radius, theta, phaseShift = opt.polarRotation || 0;\r\n    var x1, y1;\r\n    for (x = 0; x < xSize; x += 1) {\r\n        for (y = 0; y < ySize; y += 1) {\r\n            dx = x - xMid;\r\n            dy = y - yMid;\r\n            radius = (Math.sqrt(dx * dx + dy * dy) * rSize) / rMax;\r\n            theta = ((Math.atan2(dy, dx) * 180) / Math.PI + 360 + phaseShift) % 360;\r\n            theta = (theta * tSize) / 360;\r\n            x1 = Math.floor(theta);\r\n            y1 = Math.floor(radius);\r\n            i = (y1 * xSize + x1) * 4;\r\n            r = srcPixels[i + 0];\r\n            g = srcPixels[i + 1];\r\n            b = srcPixels[i + 2];\r\n            a = srcPixels[i + 3];\r\n            i = (y * xSize + x) * 4;\r\n            dstPixels[i + 0] = r;\r\n            dstPixels[i + 1] = g;\r\n            dstPixels[i + 2] = b;\r\n            dstPixels[i + 3] = a;\r\n        }\r\n    }\r\n};\r\nvar Kaleidoscope = function (imageData) {\r\n    var xSize = imageData.width, ySize = imageData.height;\r\n    var x, y, xoff, i, r, g, b, a, srcPos, dstPos;\r\n    var power = Math.round(this.kaleidoscopePower());\r\n    var angle = Math.round(this.kaleidoscopeAngle());\r\n    var offset = Math.floor((xSize * (angle % 360)) / 360);\r\n    if (power < 1) {\r\n        return;\r\n    }\r\n    var tempCanvas = Util_1.Util.createCanvasElement();\r\n    tempCanvas.width = xSize;\r\n    tempCanvas.height = ySize;\r\n    var scratchData = tempCanvas\r\n        .getContext('2d')\r\n        .getImageData(0, 0, xSize, ySize);\r\n    ToPolar(imageData, scratchData, {\r\n        polarCenterX: xSize / 2,\r\n        polarCenterY: ySize / 2\r\n    });\r\n    var minSectionSize = xSize / Math.pow(2, power);\r\n    while (minSectionSize <= 8) {\r\n        minSectionSize = minSectionSize * 2;\r\n        power -= 1;\r\n    }\r\n    minSectionSize = Math.ceil(minSectionSize);\r\n    var sectionSize = minSectionSize;\r\n    var xStart = 0, xEnd = sectionSize, xDelta = 1;\r\n    if (offset + minSectionSize > xSize) {\r\n        xStart = sectionSize;\r\n        xEnd = 0;\r\n        xDelta = -1;\r\n    }\r\n    for (y = 0; y < ySize; y += 1) {\r\n        for (x = xStart; x !== xEnd; x += xDelta) {\r\n            xoff = Math.round(x + offset) % xSize;\r\n            srcPos = (xSize * y + xoff) * 4;\r\n            r = scratchData.data[srcPos + 0];\r\n            g = scratchData.data[srcPos + 1];\r\n            b = scratchData.data[srcPos + 2];\r\n            a = scratchData.data[srcPos + 3];\r\n            dstPos = (xSize * y + x) * 4;\r\n            scratchData.data[dstPos + 0] = r;\r\n            scratchData.data[dstPos + 1] = g;\r\n            scratchData.data[dstPos + 2] = b;\r\n            scratchData.data[dstPos + 3] = a;\r\n        }\r\n    }\r\n    for (y = 0; y < ySize; y += 1) {\r\n        sectionSize = Math.floor(minSectionSize);\r\n        for (i = 0; i < power; i += 1) {\r\n            for (x = 0; x < sectionSize + 1; x += 1) {\r\n                srcPos = (xSize * y + x) * 4;\r\n                r = scratchData.data[srcPos + 0];\r\n                g = scratchData.data[srcPos + 1];\r\n                b = scratchData.data[srcPos + 2];\r\n                a = scratchData.data[srcPos + 3];\r\n                dstPos = (xSize * y + sectionSize * 2 - x - 1) * 4;\r\n                scratchData.data[dstPos + 0] = r;\r\n                scratchData.data[dstPos + 1] = g;\r\n                scratchData.data[dstPos + 2] = b;\r\n                scratchData.data[dstPos + 3] = a;\r\n            }\r\n            sectionSize *= 2;\r\n        }\r\n    }\r\n    FromPolar(scratchData, imageData, { polarRotation: 0 });\r\n};\r\nexports.Kaleidoscope = Kaleidoscope;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'kaleidoscopePower', 2, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'kaleidoscopeAngle', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Mask = void 0;\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Node_1 = require(\"../Node\");\r\nvar Validators_1 = require(\"../Validators\");\r\nfunction pixelAt(idata, x, y) {\r\n    var idx = (y * idata.width + x) * 4;\r\n    var d = [];\r\n    d.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);\r\n    return d;\r\n}\r\nfunction rgbDistance(p1, p2) {\r\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) +\r\n        Math.pow(p1[1] - p2[1], 2) +\r\n        Math.pow(p1[2] - p2[2], 2));\r\n}\r\nfunction rgbMean(pTab) {\r\n    var m = [0, 0, 0];\r\n    for (var i = 0; i < pTab.length; i++) {\r\n        m[0] += pTab[i][0];\r\n        m[1] += pTab[i][1];\r\n        m[2] += pTab[i][2];\r\n    }\r\n    m[0] /= pTab.length;\r\n    m[1] /= pTab.length;\r\n    m[2] /= pTab.length;\r\n    return m;\r\n}\r\nfunction backgroundMask(idata, threshold) {\r\n    var rgbv_no = pixelAt(idata, 0, 0);\r\n    var rgbv_ne = pixelAt(idata, idata.width - 1, 0);\r\n    var rgbv_so = pixelAt(idata, 0, idata.height - 1);\r\n    var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\r\n    var thres = threshold || 10;\r\n    if (rgbDistance(rgbv_no, rgbv_ne) < thres &&\r\n        rgbDistance(rgbv_ne, rgbv_se) < thres &&\r\n        rgbDistance(rgbv_se, rgbv_so) < thres &&\r\n        rgbDistance(rgbv_so, rgbv_no) < thres) {\r\n        var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\r\n        var mask = [];\r\n        for (var i = 0; i < idata.width * idata.height; i++) {\r\n            var d = rgbDistance(mean, [\r\n                idata.data[i * 4],\r\n                idata.data[i * 4 + 1],\r\n                idata.data[i * 4 + 2]\r\n            ]);\r\n            mask[i] = d < thres ? 0 : 255;\r\n        }\r\n        return mask;\r\n    }\r\n}\r\nfunction applyMask(idata, mask) {\r\n    for (var i = 0; i < idata.width * idata.height; i++) {\r\n        idata.data[4 * i + 3] = mask[i];\r\n    }\r\n}\r\nfunction erodeMask(mask, sw, sh) {\r\n    var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\r\n    var side = Math.round(Math.sqrt(weights.length));\r\n    var halfSide = Math.floor(side / 2);\r\n    var maskResult = [];\r\n    for (var y = 0; y < sh; y++) {\r\n        for (var x = 0; x < sw; x++) {\r\n            var so = y * sw + x;\r\n            var a = 0;\r\n            for (var cy = 0; cy < side; cy++) {\r\n                for (var cx = 0; cx < side; cx++) {\r\n                    var scy = y + cy - halfSide;\r\n                    var scx = x + cx - halfSide;\r\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\r\n                        var srcOff = scy * sw + scx;\r\n                        var wt = weights[cy * side + cx];\r\n                        a += mask[srcOff] * wt;\r\n                    }\r\n                }\r\n            }\r\n            maskResult[so] = a === 255 * 8 ? 255 : 0;\r\n        }\r\n    }\r\n    return maskResult;\r\n}\r\nfunction dilateMask(mask, sw, sh) {\r\n    var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\r\n    var side = Math.round(Math.sqrt(weights.length));\r\n    var halfSide = Math.floor(side / 2);\r\n    var maskResult = [];\r\n    for (var y = 0; y < sh; y++) {\r\n        for (var x = 0; x < sw; x++) {\r\n            var so = y * sw + x;\r\n            var a = 0;\r\n            for (var cy = 0; cy < side; cy++) {\r\n                for (var cx = 0; cx < side; cx++) {\r\n                    var scy = y + cy - halfSide;\r\n                    var scx = x + cx - halfSide;\r\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\r\n                        var srcOff = scy * sw + scx;\r\n                        var wt = weights[cy * side + cx];\r\n                        a += mask[srcOff] * wt;\r\n                    }\r\n                }\r\n            }\r\n            maskResult[so] = a >= 255 * 4 ? 255 : 0;\r\n        }\r\n    }\r\n    return maskResult;\r\n}\r\nfunction smoothEdgeMask(mask, sw, sh) {\r\n    var weights = [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9];\r\n    var side = Math.round(Math.sqrt(weights.length));\r\n    var halfSide = Math.floor(side / 2);\r\n    var maskResult = [];\r\n    for (var y = 0; y < sh; y++) {\r\n        for (var x = 0; x < sw; x++) {\r\n            var so = y * sw + x;\r\n            var a = 0;\r\n            for (var cy = 0; cy < side; cy++) {\r\n                for (var cx = 0; cx < side; cx++) {\r\n                    var scy = y + cy - halfSide;\r\n                    var scx = x + cx - halfSide;\r\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\r\n                        var srcOff = scy * sw + scx;\r\n                        var wt = weights[cy * side + cx];\r\n                        a += mask[srcOff] * wt;\r\n                    }\r\n                }\r\n            }\r\n            maskResult[so] = a;\r\n        }\r\n    }\r\n    return maskResult;\r\n}\r\nvar Mask = function (imageData) {\r\n    var threshold = this.threshold(), mask = backgroundMask(imageData, threshold);\r\n    if (mask) {\r\n        mask = erodeMask(mask, imageData.width, imageData.height);\r\n        mask = dilateMask(mask, imageData.width, imageData.height);\r\n        mask = smoothEdgeMask(mask, imageData.width, imageData.height);\r\n        applyMask(imageData, mask);\r\n    }\r\n    return imageData;\r\n};\r\nexports.Mask = Mask;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'threshold', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Noise = void 0;\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Node_1 = require(\"../Node\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Noise = function (imageData) {\r\n    var amount = this.noise() * 255, data = imageData.data, nPixels = data.length, half = amount / 2, i;\r\n    for (i = 0; i < nPixels; i += 4) {\r\n        data[i + 0] += half - 2 * half * Math.random();\r\n        data[i + 1] += half - 2 * half * Math.random();\r\n        data[i + 2] += half - 2 * half * Math.random();\r\n    }\r\n};\r\nexports.Noise = Noise;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'noise', 0.2, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Pixelate = void 0;\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Util_1 = require(\"../Util\");\r\nvar Node_1 = require(\"../Node\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Pixelate = function (imageData) {\r\n    var pixelSize = Math.ceil(this.pixelSize()), width = imageData.width, height = imageData.height, x, y, i, red, green, blue, alpha, nBinsX = Math.ceil(width / pixelSize), nBinsY = Math.ceil(height / pixelSize), xBinStart, xBinEnd, yBinStart, yBinEnd, xBin, yBin, pixelsInBin, data = imageData.data;\r\n    if (pixelSize <= 0) {\r\n        Util_1.Util.error('pixelSize value can not be <= 0');\r\n        return;\r\n    }\r\n    for (xBin = 0; xBin < nBinsX; xBin += 1) {\r\n        for (yBin = 0; yBin < nBinsY; yBin += 1) {\r\n            red = 0;\r\n            green = 0;\r\n            blue = 0;\r\n            alpha = 0;\r\n            xBinStart = xBin * pixelSize;\r\n            xBinEnd = xBinStart + pixelSize;\r\n            yBinStart = yBin * pixelSize;\r\n            yBinEnd = yBinStart + pixelSize;\r\n            pixelsInBin = 0;\r\n            for (x = xBinStart; x < xBinEnd; x += 1) {\r\n                if (x >= width) {\r\n                    continue;\r\n                }\r\n                for (y = yBinStart; y < yBinEnd; y += 1) {\r\n                    if (y >= height) {\r\n                        continue;\r\n                    }\r\n                    i = (width * y + x) * 4;\r\n                    red += data[i + 0];\r\n                    green += data[i + 1];\r\n                    blue += data[i + 2];\r\n                    alpha += data[i + 3];\r\n                    pixelsInBin += 1;\r\n                }\r\n            }\r\n            red = red / pixelsInBin;\r\n            green = green / pixelsInBin;\r\n            blue = blue / pixelsInBin;\r\n            alpha = alpha / pixelsInBin;\r\n            for (x = xBinStart; x < xBinEnd; x += 1) {\r\n                if (x >= width) {\r\n                    continue;\r\n                }\r\n                for (y = yBinStart; y < yBinEnd; y += 1) {\r\n                    if (y >= height) {\r\n                        continue;\r\n                    }\r\n                    i = (width * y + x) * 4;\r\n                    data[i + 0] = red;\r\n                    data[i + 1] = green;\r\n                    data[i + 2] = blue;\r\n                    data[i + 3] = alpha;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexports.Pixelate = Pixelate;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'pixelSize', 8, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Posterize = void 0;\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Node_1 = require(\"../Node\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Posterize = function (imageData) {\r\n    var levels = Math.round(this.levels() * 254) + 1, data = imageData.data, len = data.length, scale = 255 / levels, i;\r\n    for (i = 0; i < len; i += 1) {\r\n        data[i] = Math.floor(data[i] / scale) * scale;\r\n    }\r\n};\r\nexports.Posterize = Posterize;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'levels', 0.5, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RGB = void 0;\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Node_1 = require(\"../Node\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar RGB = function (imageData) {\r\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), i, brightness;\r\n    for (i = 0; i < nPixels; i += 4) {\r\n        brightness =\r\n            (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\r\n        data[i] = brightness * red;\r\n        data[i + 1] = brightness * green;\r\n        data[i + 2] = brightness * blue;\r\n        data[i + 3] = data[i + 3];\r\n    }\r\n};\r\nexports.RGB = RGB;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\r\n    this._filterUpToDate = false;\r\n    if (val > 255) {\r\n        return 255;\r\n    }\r\n    else if (val < 0) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return Math.round(val);\r\n    }\r\n});\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\r\n    this._filterUpToDate = false;\r\n    if (val > 255) {\r\n        return 255;\r\n    }\r\n    else if (val < 0) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return Math.round(val);\r\n    }\r\n});\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RGBA = void 0;\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Node_1 = require(\"../Node\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar RGBA = function (imageData) {\r\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), alpha = this.alpha(), i, ia;\r\n    for (i = 0; i < nPixels; i += 4) {\r\n        ia = 1 - alpha;\r\n        data[i] = red * alpha + data[i] * ia;\r\n        data[i + 1] = green * alpha + data[i + 1] * ia;\r\n        data[i + 2] = blue * alpha + data[i + 2] * ia;\r\n    }\r\n};\r\nexports.RGBA = RGBA;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\r\n    this._filterUpToDate = false;\r\n    if (val > 255) {\r\n        return 255;\r\n    }\r\n    else if (val < 0) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return Math.round(val);\r\n    }\r\n});\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\r\n    this._filterUpToDate = false;\r\n    if (val > 255) {\r\n        return 255;\r\n    }\r\n    else if (val < 0) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return Math.round(val);\r\n    }\r\n});\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'alpha', 1, function (val) {\r\n    this._filterUpToDate = false;\r\n    if (val > 1) {\r\n        return 1;\r\n    }\r\n    else if (val < 0) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return val;\r\n    }\r\n});\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Sepia = void 0;\r\nvar Sepia = function (imageData) {\r\n    var data = imageData.data, nPixels = data.length, i, r, g, b;\r\n    for (i = 0; i < nPixels; i += 4) {\r\n        r = data[i + 0];\r\n        g = data[i + 1];\r\n        b = data[i + 2];\r\n        data[i + 0] = Math.min(255, r * 0.393 + g * 0.769 + b * 0.189);\r\n        data[i + 1] = Math.min(255, r * 0.349 + g * 0.686 + b * 0.168);\r\n        data[i + 2] = Math.min(255, r * 0.272 + g * 0.534 + b * 0.131);\r\n    }\r\n};\r\nexports.Sepia = Sepia;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Solarize = void 0;\r\nvar Solarize = function (imageData) {\r\n    var data = imageData.data, w = imageData.width, h = imageData.height, w4 = w * 4, y = h;\r\n    do {\r\n        var offsetY = (y - 1) * w4;\r\n        var x = w;\r\n        do {\r\n            var offset = offsetY + (x - 1) * 4;\r\n            var r = data[offset];\r\n            var g = data[offset + 1];\r\n            var b = data[offset + 2];\r\n            if (r > 127) {\r\n                r = 255 - r;\r\n            }\r\n            if (g > 127) {\r\n                g = 255 - g;\r\n            }\r\n            if (b > 127) {\r\n                b = 255 - b;\r\n            }\r\n            data[offset] = r;\r\n            data[offset + 1] = g;\r\n            data[offset + 2] = b;\r\n        } while (--x);\r\n    } while (--y);\r\n};\r\nexports.Solarize = Solarize;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Threshold = void 0;\r\nvar Factory_1 = require(\"../Factory\");\r\nvar Node_1 = require(\"../Node\");\r\nvar Validators_1 = require(\"../Validators\");\r\nvar Threshold = function (imageData) {\r\n    var level = this.threshold() * 255, data = imageData.data, len = data.length, i;\r\n    for (i = 0; i < len; i += 1) {\r\n        data[i] = data[i] < level ? 0 : 255;\r\n    }\r\n};\r\nexports.Threshold = Threshold;\r\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'threshold', 0.5, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Konva = void 0;\r\nvar _CoreInternals_1 = require(\"./_CoreInternals\");\r\nvar Arc_1 = require(\"./shapes/Arc\");\r\nvar Arrow_1 = require(\"./shapes/Arrow\");\r\nvar Circle_1 = require(\"./shapes/Circle\");\r\nvar Ellipse_1 = require(\"./shapes/Ellipse\");\r\nvar Image_1 = require(\"./shapes/Image\");\r\nvar Label_1 = require(\"./shapes/Label\");\r\nvar Line_1 = require(\"./shapes/Line\");\r\nvar Path_1 = require(\"./shapes/Path\");\r\nvar Rect_1 = require(\"./shapes/Rect\");\r\nvar RegularPolygon_1 = require(\"./shapes/RegularPolygon\");\r\nvar Ring_1 = require(\"./shapes/Ring\");\r\nvar Sprite_1 = require(\"./shapes/Sprite\");\r\nvar Star_1 = require(\"./shapes/Star\");\r\nvar Text_1 = require(\"./shapes/Text\");\r\nvar TextPath_1 = require(\"./shapes/TextPath\");\r\nvar Transformer_1 = require(\"./shapes/Transformer\");\r\nvar Wedge_1 = require(\"./shapes/Wedge\");\r\nvar Blur_1 = require(\"./filters/Blur\");\r\nvar Brighten_1 = require(\"./filters/Brighten\");\r\nvar Contrast_1 = require(\"./filters/Contrast\");\r\nvar Emboss_1 = require(\"./filters/Emboss\");\r\nvar Enhance_1 = require(\"./filters/Enhance\");\r\nvar Grayscale_1 = require(\"./filters/Grayscale\");\r\nvar HSL_1 = require(\"./filters/HSL\");\r\nvar HSV_1 = require(\"./filters/HSV\");\r\nvar Invert_1 = require(\"./filters/Invert\");\r\nvar Kaleidoscope_1 = require(\"./filters/Kaleidoscope\");\r\nvar Mask_1 = require(\"./filters/Mask\");\r\nvar Noise_1 = require(\"./filters/Noise\");\r\nvar Pixelate_1 = require(\"./filters/Pixelate\");\r\nvar Posterize_1 = require(\"./filters/Posterize\");\r\nvar RGB_1 = require(\"./filters/RGB\");\r\nvar RGBA_1 = require(\"./filters/RGBA\");\r\nvar Sepia_1 = require(\"./filters/Sepia\");\r\nvar Solarize_1 = require(\"./filters/Solarize\");\r\nvar Threshold_1 = require(\"./filters/Threshold\");\r\nexports.Konva = _CoreInternals_1.Konva.Util._assign(_CoreInternals_1.Konva, {\r\n    Arc: Arc_1.Arc,\r\n    Arrow: Arrow_1.Arrow,\r\n    Circle: Circle_1.Circle,\r\n    Ellipse: Ellipse_1.Ellipse,\r\n    Image: Image_1.Image,\r\n    Label: Label_1.Label,\r\n    Tag: Label_1.Tag,\r\n    Line: Line_1.Line,\r\n    Path: Path_1.Path,\r\n    Rect: Rect_1.Rect,\r\n    RegularPolygon: RegularPolygon_1.RegularPolygon,\r\n    Ring: Ring_1.Ring,\r\n    Sprite: Sprite_1.Sprite,\r\n    Star: Star_1.Star,\r\n    Text: Text_1.Text,\r\n    TextPath: TextPath_1.TextPath,\r\n    Transformer: Transformer_1.Transformer,\r\n    Wedge: Wedge_1.Wedge,\r\n    Filters: {\r\n        Blur: Blur_1.Blur,\r\n        Brighten: Brighten_1.Brighten,\r\n        Contrast: Contrast_1.Contrast,\r\n        Emboss: Emboss_1.Emboss,\r\n        Enhance: Enhance_1.Enhance,\r\n        Grayscale: Grayscale_1.Grayscale,\r\n        HSL: HSL_1.HSL,\r\n        HSV: HSV_1.HSV,\r\n        Invert: Invert_1.Invert,\r\n        Kaleidoscope: Kaleidoscope_1.Kaleidoscope,\r\n        Mask: Mask_1.Mask,\r\n        Noise: Noise_1.Noise,\r\n        Pixelate: Pixelate_1.Pixelate,\r\n        Posterize: Posterize_1.Posterize,\r\n        RGB: RGB_1.RGB,\r\n        RGBA: RGBA_1.RGBA,\r\n        Sepia: Sepia_1.Sepia,\r\n        Solarize: Solarize_1.Solarize,\r\n        Threshold: Threshold_1.Threshold,\r\n    },\r\n});\r\n","var Konva = require('./_FullInternals').Konva;\r\nKonva._injectGlobal(Konva);\r\nexports['default'] = Konva;\r\nmodule.exports = exports['default'];\r\n","import Konva from \"konva\";\r\nimport {mstage} from '../index'\r\nlet  circ = new Konva.Circle({\r\n    x : 100,\r\n    y : 100,\r\n    radius : 50,\r\n    fill : \"#a3d2ca\",\r\n    stroke : \"#5eaaa8\",\r\n    strokeWidth : 8,\r\n    shadowOffsetX : 10,\r\n    shadowOffsetY : 8,\r\n    shadowBlur : 20,\r\n    shadowOpacity: 0.4,\r\n    draggable : true\r\n});\r\n\r\n\r\nlet rect1 = new Konva.Rect({\r\n    x : 0,\r\n    y : 0,\r\n    width : 800,\r\n    height : 600,\r\n    fill : \"#eeeeee\",\r\n    stroke : \"black\",\r\n    //strokeWidth : 8,\r\n    //cornerRadius : [0 , 20, 0, 20],\r\n    draggable : false,\r\n})\r\n\r\nlet message = new Konva.Text({\r\n    x : 50,\r\n    y : 50,\r\n    fill : \"black\",\r\n    text : '',\r\n    fontSize : 24\r\n})\r\n\r\n\r\n\r\n// let mLine = new Konva.Line({\r\n//     points : [5, 70, 140, 23, 250, 60, 300, 20],\r\n//     stroke : \"red\",\r\n//     strokeWidth : 5,\r\n//     tension : 1,\r\n//     draggable : true\r\n// })\r\n\r\n// mLine.points(mLine.points().concat([400,40]));\r\n\r\n\r\nexport {circ,rect1,message};","import Konva from 'konva';\r\nimport {mstage} from '../index';\r\nexport default class DrawBtn{\r\n    constructor(layer,x,y,str){\r\n        this.layer = layer\r\n        this.x = x;\r\n        this.y = y;\r\n        this.text = str\r\n        this.kobj = this.makeBtn();\r\n        this.is_active = false;\r\n        this.is_pointerDown = false;\r\n        this.is_pointerUp = false;\r\n        this.is_pointerMove = false;\r\n        this.lineObj  = [];\r\n    }\r\n\r\n    makeBtn(){\r\n        let drawbtn = new Konva.Label({\r\n            x : this.x,\r\n            y : this.y,\r\n        });\r\n        \r\n        drawbtn.add(\r\n            new Konva.Tag({\r\n                fill : \"black\"\r\n            })\r\n        );\r\n        \r\n        drawbtn.add(\r\n            new Konva.Text({\r\n                fill: 'white',\r\n                text : this.text,\r\n                padding : 10\r\n            })\r\n        );\r\n        return drawbtn;\r\n    }\r\n\r\n    create(){\r\n        this.layer.add(this.kobj);\r\n    }\r\n\r\n    onClickHandler(){\r\n        // console.log(\"clicked\");\r\n\r\n        if(this.is_active === false){\r\n            this.is_active = true;\r\n            this.kobj.getTag().fill(\"red\");\r\n            // console.log(\"active = \", this.is_active)\r\n            this.handleDrawing();\r\n        }\r\n        else{\r\n            this.is_active = false;\r\n            this.kobj.getTag().fill(\"black\");\r\n            mstage.off('mousedown');\r\n            mstage.off('mousemove');\r\n            mstage.off('mouseup');\r\n        }\r\n        \r\n\r\n        this.layer.draw();   \r\n    }\r\n\r\n    \r\n\r\n    handleDrawing(){\r\n        if(!this.is_active) return;\r\n\r\n        mstage.on('mousedown',() => {\r\n            // console.log(\"mouseDownthing\")\r\n            this.is_pointerDown = true;\r\n            this.drawInitLine();\r\n        })\r\n        mstage.on('mouseup',() => {\r\n            this.is_pointerDown = false;\r\n            this.is_pointerMove = false;\r\n            \r\n            \r\n        })\r\n        mstage.on('mousemove',() => {\r\n            this.is_pointerMove = true;\r\n            this.drawLine();\r\n        })\r\n\r\n        // console.log(\"handleDrawing = \", this.is_pointerDown, \" \", this.is_pointerMove);\r\n    }\r\n    drawInitLine(){\r\n        if(!this.is_pointerDown) return;\r\n        let pointer = mstage.getPointerPosition();\r\n        let newPoint  = new Konva.Line({\r\n            points : [pointer.x,pointer.y],\r\n            stroke : \"red\",\r\n            strokeWidth : 2,\r\n            tension : 0.3\r\n        })\r\n        this.lineObj.push(newPoint);\r\n        this.layer.add(newPoint);\r\n        this.kobj.zIndex(this.lineObj.length + 10);\r\n        this.clearObj.zIndex(this.lineObj.length + 10);\r\n    }\r\n\r\n    drawLine(){\r\n        if(!this.is_pointerDown)  return ;\r\n        // console.log(\"drawing\")\r\n        let pointer = mstage.getPointerPosition();\r\n        let prevLine = this.lineObj[this.lineObj.length - 1];\r\n        // console.log(prevLine.points());\r\n        let newpoints = prevLine.points().concat([pointer.x,pointer.y]);\r\n        prevLine.points(newpoints);\r\n        this.layer.batchDraw();\r\n    }\r\n\r\n    makeClearBtn(x,y,bgcolor,tcolor,text){\r\n        let drawbtn = new Konva.Label({\r\n            x : x,\r\n            y : y,\r\n        });\r\n        \r\n        drawbtn.add(\r\n            new Konva.Tag({\r\n                fill : bgcolor\r\n            })\r\n        );\r\n        \r\n        drawbtn.add(\r\n            new Konva.Text({\r\n                fill: tcolor,\r\n                text : text,\r\n                padding : 10\r\n            })\r\n        );\r\n        this.layer.add(drawbtn);\r\n        this.clearObj = drawbtn;\r\n    }\r\n\r\n    clearLines(){\r\n        // console.log(\"yae cahla tha\")\r\n        this.lineObj.forEach(obj => {\r\n            obj.destroy();\r\n        })\r\n        this.lineObj = [];\r\n        this.layer.draw();\r\n        // console.log(\"clear madi = \", this.lineObj )\r\n    }\r\n    \r\n\r\n}","import Konva from 'konva';\r\nimport {circ,rect1,message} from '../src/shapes/shapes'\r\nimport DrawBtn from './shapes/DrawBtn'\r\nexport const mstage = new Konva.Stage({\r\n    container : \"mcontainer\",\r\n    width : 800,\r\n    height: 600,\r\n})\r\n\r\nconst layer = new Konva.Layer({\r\n})\r\n\r\nlet pencilBtn = new DrawBtn(layer,500,50,'draw');\r\npencilBtn.create();\r\npencilBtn.kobj.on('click',function(){pencilBtn.onClickHandler();});\r\n\r\npencilBtn.makeClearBtn(550,50,'black','white','clear')\r\npencilBtn.clearObj.on('click',function(){\r\n    pencilBtn.clearLines();\r\n})\r\n\r\n\r\nlayer.add(circ,message,rect1);\r\nrect1.zIndex(0);\r\n\r\nmstage.add(layer);\r\n\r\n\r\n//general example functions\r\n\r\n\r\n// mstage.on('mousedown',function(){\r\n//     //console.log(\"mouseover hua hai\");\r\n//     let mpointer = mstage.getPointerPosition();\r\n//     message.text(`${mpointer.x} and ${mpointer.y} -> mouseenter`);\r\n//     layer.draw();\r\n// })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ncirc.on('mouseover',function(){\r\n    // console.log(\"mouseover\");\r\n    this.fill('black');\r\n    layer.draw();\r\n})\r\ncirc.on('mouseout',function(){\r\n    // console.log(\"mouseover\");\r\n    this.fill('#a3d2ca');\r\n    layer.draw();\r\n})","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}